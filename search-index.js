var searchIndex = {};
searchIndex["lldb"] = {"doc":"# LLDB","items":[[11,"clone","lldb_sys::lldb_sys","",0,null],[11,"fmt","","",0,null],[11,"hash","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"clone","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"empty","","Returns an empty set of flags.",1,{"inputs":[],"output":{"name":"launchflags"}}],[11,"all","","Returns the set containing all flags.",1,{"inputs":[],"output":{"name":"launchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",1,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",1,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",1,{"inputs":[{"name":"u32"}],"output":{"name":"launchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",1,null],[11,"is_all","","Returns `true` if all flags are currently set.",1,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",1,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",1,null],[11,"insert","","Inserts the specified flags in-place.",1,null],[11,"remove","","Removes the specified flags in-place.",1,null],[11,"toggle","","Toggles the specified flags in-place.",1,null],[11,"bitor","","Returns the union of the two sets of flags.",1,null],[11,"bitor_assign","","Adds the set of flags.",1,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",1,null],[11,"bitxor_assign","","Toggles the set of flags.",1,null],[11,"bitand","","Returns the intersection between the two sets of flags.",1,null],[11,"bitand_assign","","Disables all flags disabled in the set.",1,null],[11,"sub","","Returns the set difference of the two sets of flags.",1,null],[11,"sub_assign","","Disables all flags enabled in the set.",1,null],[11,"not","","Returns the complement of this set of flags.",1,null],[11,"extend","","",1,null],[11,"from_iter","","",1,{"inputs":[{"name":"t"}],"output":{"name":"launchflags"}}],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"hash","","",16,null],[11,"cmp","","",16,null],[11,"partial_cmp","","",16,null],[11,"lt","","",16,null],[11,"le","","",16,null],[11,"gt","","",16,null],[11,"ge","","",16,null],[11,"clone","","",16,null],[11,"eq","","",16,null],[11,"ne","","",16,null],[11,"fmt","","",16,null],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"symbolcontextitem"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"symbolcontextitem"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"u32"}],"output":{"name":"symbolcontextitem"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,null],[11,"is_all","","Returns `true` if all flags are currently set.",16,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,null],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"bitor","","Returns the union of the two sets of flags.",16,null],[11,"bitor_assign","","Adds the set of flags.",16,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,null],[11,"bitxor_assign","","Toggles the set of flags.",16,null],[11,"bitand","","Returns the intersection between the two sets of flags.",16,null],[11,"bitand_assign","","Disables all flags disabled in the set.",16,null],[11,"sub","","Returns the set difference of the two sets of flags.",16,null],[11,"sub_assign","","Disables all flags enabled in the set.",16,null],[11,"not","","Returns the complement of this set of flags.",16,null],[11,"extend","","",16,null],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"symbolcontextitem"}}],[11,"hash","","",17,null],[11,"cmp","","",17,null],[11,"partial_cmp","","",17,null],[11,"lt","","",17,null],[11,"le","","",17,null],[11,"gt","","",17,null],[11,"ge","","",17,null],[11,"clone","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"fmt","","",17,null],[11,"empty","","Returns an empty set of flags.",17,{"inputs":[],"output":{"name":"permissions"}}],[11,"all","","Returns the set containing all flags.",17,{"inputs":[],"output":{"name":"permissions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",17,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",17,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",17,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,null],[11,"is_all","","Returns `true` if all flags are currently set.",17,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",17,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",17,null],[11,"insert","","Inserts the specified flags in-place.",17,null],[11,"remove","","Removes the specified flags in-place.",17,null],[11,"toggle","","Toggles the specified flags in-place.",17,null],[11,"bitor","","Returns the union of the two sets of flags.",17,null],[11,"bitor_assign","","Adds the set of flags.",17,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",17,null],[11,"bitxor_assign","","Toggles the set of flags.",17,null],[11,"bitand","","Returns the intersection between the two sets of flags.",17,null],[11,"bitand_assign","","Disables all flags disabled in the set.",17,null],[11,"sub","","Returns the set difference of the two sets of flags.",17,null],[11,"sub_assign","","Disables all flags enabled in the set.",17,null],[11,"not","","Returns the complement of this set of flags.",17,null],[11,"extend","","",17,null],[11,"from_iter","","",17,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"hash","","",31,null],[11,"cmp","","",31,null],[11,"partial_cmp","","",31,null],[11,"lt","","",31,null],[11,"le","","",31,null],[11,"gt","","",31,null],[11,"ge","","",31,null],[11,"clone","","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"empty","","Returns an empty set of flags.",31,{"inputs":[],"output":{"name":"typeclass"}}],[11,"all","","Returns the set containing all flags.",31,{"inputs":[],"output":{"name":"typeclass"}}],[11,"bits","","Returns the raw value of the flags currently stored.",31,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",31,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",31,{"inputs":[{"name":"u32"}],"output":{"name":"typeclass"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",31,null],[11,"is_all","","Returns `true` if all flags are currently set.",31,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",31,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",31,null],[11,"insert","","Inserts the specified flags in-place.",31,null],[11,"remove","","Removes the specified flags in-place.",31,null],[11,"toggle","","Toggles the specified flags in-place.",31,null],[11,"bitor","","Returns the union of the two sets of flags.",31,null],[11,"bitor_assign","","Adds the set of flags.",31,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",31,null],[11,"bitxor_assign","","Toggles the set of flags.",31,null],[11,"bitand","","Returns the intersection between the two sets of flags.",31,null],[11,"bitand_assign","","Disables all flags disabled in the set.",31,null],[11,"sub","","Returns the set difference of the two sets of flags.",31,null],[11,"sub_assign","","Disables all flags enabled in the set.",31,null],[11,"not","","Returns the complement of this set of flags.",31,null],[11,"extend","","",31,null],[11,"from_iter","","",31,{"inputs":[{"name":"t"}],"output":{"name":"typeclass"}}],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"hash","","",36,null],[11,"cmp","","",36,null],[11,"partial_cmp","","",36,null],[11,"lt","","",36,null],[11,"le","","",36,null],[11,"gt","","",36,null],[11,"ge","","",36,null],[11,"clone","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"fmt","","",36,null],[11,"empty","","Returns an empty set of flags.",36,{"inputs":[],"output":{"name":"filepermissions"}}],[11,"all","","Returns the set containing all flags.",36,{"inputs":[],"output":{"name":"filepermissions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",36,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",36,{"inputs":[{"name":"u32"}],"output":{"name":"filepermissions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",36,null],[11,"is_all","","Returns `true` if all flags are currently set.",36,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",36,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",36,null],[11,"insert","","Inserts the specified flags in-place.",36,null],[11,"remove","","Removes the specified flags in-place.",36,null],[11,"toggle","","Toggles the specified flags in-place.",36,null],[11,"bitor","","Returns the union of the two sets of flags.",36,null],[11,"bitor_assign","","Adds the set of flags.",36,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",36,null],[11,"bitxor_assign","","Toggles the set of flags.",36,null],[11,"bitand","","Returns the intersection between the two sets of flags.",36,null],[11,"bitand_assign","","Disables all flags disabled in the set.",36,null],[11,"sub","","Returns the set difference of the two sets of flags.",36,null],[11,"sub_assign","","Disables all flags enabled in the set.",36,null],[11,"not","","Returns the complement of this set of flags.",36,null],[11,"extend","","",36,null],[11,"from_iter","","",36,{"inputs":[{"name":"t"}],"output":{"name":"filepermissions"}}],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[11,"clone","","",43,null],[11,"fmt","","",43,null],[11,"clone","","",44,null],[11,"fmt","","",44,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"clone","","",46,null],[11,"fmt","","",46,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[6,"lldb_addr_t","lldb","",null,null],[6,"lldb_offset_t","","",null,null],[6,"lldb_pid_t","","",null,null],[6,"lldb_tid_t","","",null,null],[6,"lldb_user_id_t","","",null,null],[4,"AccessType","","",null,null],[13,"None","","",24,null],[13,"Public","","",24,null],[13,"Private","","",24,null],[13,"Protected","","",24,null],[13,"Package","","",24,null],[4,"AddressClass","","",null,null],[13,"Invalid","","",35,null],[13,"Unknown","","",35,null],[13,"Code","","",35,null],[13,"CodeAlternateISA","","",35,null],[13,"Data","","",35,null],[13,"Debug","","",35,null],[13,"Runtime","","",35,null],[4,"BasicType","","",null,null],[13,"Invalid","","",30,null],[13,"Void","","",30,null],[13,"Char","","",30,null],[13,"SignedChar","","",30,null],[13,"UnsignedChar","","",30,null],[13,"WChar","","",30,null],[13,"SignedWChar","","",30,null],[13,"UnsignedWChar","","",30,null],[13,"Char16","","",30,null],[13,"Char32","","",30,null],[13,"Short","","",30,null],[13,"UnsignedShort","","",30,null],[13,"Int","","",30,null],[13,"UnsignedInt","","",30,null],[13,"Long","","",30,null],[13,"UnsignedLong","","",30,null],[13,"LongLong","","",30,null],[13,"UnsignedLongLong","","",30,null],[13,"Int128","","",30,null],[13,"UnsignedInt128","","",30,null],[13,"Bool","","",30,null],[13,"Half","","",30,null],[13,"Float","","",30,null],[13,"Double","","",30,null],[13,"LongDouble","","",30,null],[13,"FloatComplex","","",30,null],[13,"DoubleComplex","","",30,null],[13,"LongDoubleComplex","","",30,null],[13,"ObjCID","","",30,null],[13,"ObjCClass","","",30,null],[13,"ObjCSel","","",30,null],[13,"NullPtr","","",30,null],[13,"Other","","",30,null],[4,"BreakpointEventType","","",null,null],[13,"InvalidType","","",19,null],[13,"Added","","",19,null],[13,"Removed","","",19,null],[13,"LocationsAdded","","",19,null],[13,"LocationsRemoved","","",19,null],[13,"LocationsResolved","","",19,null],[13,"Enabled","","",19,null],[13,"Disabled","","",19,null],[13,"CommandChanged","","",19,null],[13,"ConditionChanged","","",19,null],[13,"IgnoreChanged","","",19,null],[13,"ThreadChanged","","",19,null],[4,"ByteOrder","","Byte order definitions.",null,null],[13,"Invalid","","",3,null],[13,"Big","","",3,null],[13,"PDP","","",3,null],[13,"Little","","",3,null],[4,"CommandArgumentType","","",null,null],[13,"Address","","",25,null],[13,"AddressOrExpression","","",25,null],[13,"AliasName","","",25,null],[13,"AliasOptions","","",25,null],[13,"Architecture","","",25,null],[13,"Boolean","","",25,null],[13,"BreakpointID","","",25,null],[13,"BreakpointIDRange","","",25,null],[13,"BreakpointName","","",25,null],[13,"ByteSize","","",25,null],[13,"ClassName","","",25,null],[13,"CommandName","","",25,null],[13,"Count","","",25,null],[13,"DescriptionVerbosity","","",25,null],[13,"DirectoryName","","",25,null],[13,"DisassemblyFlavor","","",25,null],[13,"EndAddress","","",25,null],[13,"Expression","","",25,null],[13,"ExpressionPath","","",25,null],[13,"ExprFormat","","",25,null],[13,"Filename","","",25,null],[13,"Format","","",25,null],[13,"FrameIndex","","",25,null],[13,"FullName","","",25,null],[13,"FunctionName","","",25,null],[13,"FunctionOrSymbol","","",25,null],[13,"GDBFormat","","",25,null],[13,"HelpText","","",25,null],[13,"Index","","",25,null],[13,"Language","","",25,null],[13,"LineNum","","",25,null],[13,"LogCategory","","",25,null],[13,"LogChannel","","",25,null],[13,"Method","","",25,null],[13,"Name","","",25,null],[13,"NewPathPrefix","","",25,null],[13,"NumLines","","",25,null],[13,"NumberPerLine","","",25,null],[13,"Offset","","",25,null],[13,"OldPathPrefix","","",25,null],[13,"OneLiner","","",25,null],[13,"Path","","",25,null],[13,"PermissionsNumber","","",25,null],[13,"PermissionsString","","",25,null],[13,"Pid","","",25,null],[13,"Plugin","","",25,null],[13,"ProcessName","","",25,null],[13,"PythonClass","","",25,null],[13,"PythonFunction","","",25,null],[13,"PythonScript","","",25,null],[13,"QueueName","","",25,null],[13,"RegisterName","","",25,null],[13,"RegularExpression","","",25,null],[13,"RunArgs","","",25,null],[13,"RunMode","","",25,null],[13,"ScriptedCommandSynchronicity","","",25,null],[13,"ScriptLang","","",25,null],[13,"SearchWord","","",25,null],[13,"Selector","","",25,null],[13,"SettingIndex","","",25,null],[13,"SettingKey","","",25,null],[13,"SettingPrefix","","",25,null],[13,"SettingVariableName","","",25,null],[13,"ShlibName","","",25,null],[13,"SourceFile","","",25,null],[13,"SortOrder","","",25,null],[13,"StartAddress","","",25,null],[13,"SummaryString","","",25,null],[13,"Symbol","","",25,null],[13,"ThreadID","","",25,null],[13,"ThreadIndex","","",25,null],[13,"ThreadName","","",25,null],[13,"TypeName","","",25,null],[13,"UnsignedInteger","","",25,null],[13,"UnixSignal","","",25,null],[13,"VarName","","",25,null],[13,"Value","","",25,null],[13,"Width","","",25,null],[13,"None","","",25,null],[13,"Platform","","",25,null],[13,"WatchpointID","","",25,null],[13,"WatchpointIDRange","","",25,null],[13,"WatchType","","",25,null],[13,"LastArg","","",25,null],[4,"CommandFlags","","",null,null],[13,"RequiresTarget","","",46,null],[13,"RequiresProcess","","",46,null],[13,"RequiresThread","","",46,null],[13,"RequiresFrame","","",46,null],[13,"RequiresRegContext","","",46,null],[13,"TryTargetAPILock","","",46,null],[13,"ProcessMustBeLaunched","","",46,null],[13,"ProcessMustBePaused","","",46,null],[4,"ConnectionStatus","","",null,null],[13,"ConnectionStatusSuccess","","",12,null],[13,"ConnectionStatusEndOfFile","","",12,null],[13,"ConnectionStatusError","","",12,null],[13,"ConnectionStatusTimedOut","","",12,null],[13,"ConnectionStatusNoConnection","","",12,null],[13,"ConnectionStatusLostConnection","","",12,null],[13,"ConnectionStatusInterrupted","","",12,null],[4,"DescriptionLevel","","",null,null],[13,"Brief","","",6,null],[13,"Full","","",6,null],[13,"Verbose","","",6,null],[13,"Initial","","",6,null],[13,"kNumDescriptionLevels","","",6,null],[4,"DynamicValueType","","",null,null],[13,"NoDynamicValues","","",23,null],[13,"DynamicCanRunTarget","","",23,null],[13,"DynamicDontRunTarget","","",23,null],[4,"EmulateInstructionOptions","","",null,null],[13,"None","","",28,null],[13,"AutoAdvancePC","","",28,null],[13,"IgnoreConditions","","",28,null],[4,"Encoding","","Register encoding defintions.",null,null],[13,"Invalid","","",4,null],[13,"Uint","","Unsigned integer.",4,null],[13,"Sint","","signed integer.",4,null],[13,"IEEE754","","Floating point.",4,null],[13,"Vector","","Vector register.",4,null],[4,"ErrorType","","",null,null],[13,"Invalid","","",13,null],[13,"Generic","","",13,null],[13,"MachKernel","","",13,null],[13,"POSIX","","",13,null],[13,"Expression","","",13,null],[13,"Win32","","",13,null],[4,"ExpressionEvaluationPhase","","",null,null],[13,"EvaluationParse","","",39,null],[13,"EvaluationIRGen","","",39,null],[13,"EvaluationExecution","","",39,null],[13,"EvaluationComplete","","",39,null],[4,"ExpressionResults","","",null,null],[13,"Completed","","",11,null],[13,"SetupError","","",11,null],[13,"ParseError","","",11,null],[13,"Discarded","","",11,null],[13,"Interrupted","","",11,null],[13,"HitBreakpoint","","",11,null],[13,"TimedOut","","",11,null],[13,"ResultUnavailable","","",11,null],[13,"StoppedForDebug","","",11,null],[3,"FilePermissions","","",null,null],[4,"Format","","Display format definitions.",null,null],[13,"Default","","",5,null],[13,"Boolean","","",5,null],[13,"Binary","","",5,null],[13,"Bytes","","",5,null],[13,"BytesWithASCII","","",5,null],[13,"Char","","",5,null],[13,"CharPrintable","","",5,null],[13,"Complex","","",5,null],[13,"CString","","",5,null],[13,"Decimal","","",5,null],[13,"Enum","","",5,null],[13,"Hex","","",5,null],[13,"HexUppercase","","",5,null],[13,"Float","","",5,null],[13,"Octal","","",5,null],[13,"OSType","","",5,null],[13,"Unicode16","","",5,null],[13,"Unicode32","","",5,null],[13,"Unsigned","","",5,null],[13,"Pointer","","",5,null],[13,"VectorOfChar","","",5,null],[13,"VectorOfSInt8","","",5,null],[13,"VectorOfUInt8","","",5,null],[13,"VectorOfSInt16","","",5,null],[13,"VectorOfUInt16","","",5,null],[13,"VectorOfSInt32","","",5,null],[13,"VectorOfUInt32","","",5,null],[13,"VectorOfSInt64","","",5,null],[13,"VectorOfUInt64","","",5,null],[13,"VectorOfFloat16","","",5,null],[13,"VectorOfFloat32","","",5,null],[13,"VectorOfFloat64","","",5,null],[13,"VectorOfUInt128","","",5,null],[13,"ComplexInteger","","",5,null],[13,"CharArray","","",5,null],[13,"AddressInfo","","",5,null],[13,"HexFloat","","",5,null],[13,"Instruction","","",5,null],[13,"Void","","",5,null],[13,"kNumFormats","","",5,null],[4,"FrameComparison","","",null,null],[13,"Invalid","","",34,null],[13,"Unknown","","",34,null],[13,"Equal","","",34,null],[13,"SameParent","","",34,null],[13,"Younger","","",34,null],[13,"Older","","",34,null],[4,"FunctionNameType","","",null,null],[13,"None","","",29,null],[13,"Auto","","",29,null],[13,"Full","","",29,null],[13,"Base","","",29,null],[13,"Method","","",29,null],[13,"Selector","","",29,null],[4,"GdbSignal","","",null,null],[13,"BadAccess","","",41,null],[13,"BadInstruction","","",41,null],[13,"Arithmetic","","",41,null],[13,"Emulation","","",41,null],[13,"Software","","",41,null],[13,"Breakpoint","","",41,null],[4,"InputReaderAction","","",null,null],[13,"Activate","","",18,null],[13,"AsynchronousOutputWritten","","",18,null],[13,"Reactivate","","",18,null],[13,"Deactivate","","",18,null],[13,"GotToken","","",18,null],[13,"Interrupt","","",18,null],[13,"EndOfFile","","",18,null],[13,"Done","","",18,null],[4,"InputReaderGranularity","","",null,null],[13,"Invalid","","",15,null],[13,"Byte","","",15,null],[13,"Word","","",15,null],[13,"Line","","",15,null],[13,"All","","",15,null],[4,"InstrumentationRuntimeType","","",null,null],[13,"AddressSanitizer","","",22,null],[13,"ThreadSanitizer","","",22,null],[13,"NumInstrumentationRuntimeTypes","","",22,null],[4,"LanguageType","","",null,null],[13,"Unknown","","",21,null],[13,"C89","","",21,null],[13,"C","","",21,null],[13,"Ada83","","",21,null],[13,"C_plus_plus","","",21,null],[13,"Cobol74","","",21,null],[13,"Cobol85","","",21,null],[13,"Fortran77","","",21,null],[13,"Fortran90","","",21,null],[13,"Pascal83","","",21,null],[13,"Modula2","","",21,null],[13,"Java","","",21,null],[13,"C99","","",21,null],[13,"Ada95","","",21,null],[13,"Fortran95","","",21,null],[13,"PLI","","",21,null],[13,"ObjC","","",21,null],[13,"ObjC_plus_plus","","",21,null],[13,"UPC","","",21,null],[13,"D","","",21,null],[13,"Python","","",21,null],[13,"OpenCL","","",21,null],[13,"Go","","",21,null],[13,"Modula3","","",21,null],[13,"Haskell","","",21,null],[13,"C_plus_plus_03","","",21,null],[13,"C_plus_plus_11","","",21,null],[13,"OCaml","","",21,null],[13,"Rust","","",21,null],[13,"C11","","",21,null],[13,"Swift","","",21,null],[13,"Julia","","",21,null],[13,"Dylan","","",21,null],[13,"C_plus_plus_14","","",21,null],[13,"Fortran03","","",21,null],[13,"Fortran08","","",21,null],[13,"MipsAssembler","","",21,null],[13,"ExtRenderScript","","",21,null],[13,"NumLanguageTypes","","",21,null],[3,"LaunchFlags","","",null,null],[4,"MatchType","","",null,null],[13,"Normal","","",44,null],[13,"Regex","","",44,null],[13,"StartsWith","","",44,null],[4,"MemberFunctionKind","","",null,null],[13,"Unknown","","",43,null],[13,"Constructor","","",43,null],[13,"Destructor","","",43,null],[13,"InstanceMethod","","",43,null],[13,"StaticMethod","","",43,null],[4,"PathType","","",null,null],[13,"LLDBShlibDir","","",42,null],[13,"SupportExecutableDir","","",42,null],[13,"HeaderDir","","",42,null],[13,"PythonDir","","",42,null],[13,"LLDBSystemPlugins","","",42,null],[13,"LLDBUserPlugins","","",42,null],[13,"LLDBTempSystemDir","","",42,null],[13,"GlobalLLDBTempSystemDir","","",42,null],[13,"ClangDir","","",42,null],[3,"Permissions","","",null,null],[4,"QueueItemKind","","",null,null],[13,"Unknown","","",37,null],[13,"Function","","",37,null],[13,"Block","","",37,null],[4,"QueueKind","","",null,null],[13,"Unknown","","",38,null],[13,"Serial","","",38,null],[13,"Concurrent","","",38,null],[4,"RegisterKind","","",null,null],[13,"EHFrame","","",8,null],[13,"DWARF","","",8,null],[13,"Generic","","",8,null],[13,"ProcessPlugin","","",8,null],[13,"LLDB","","",8,null],[13,"kNumRegisterKinds","","",8,null],[4,"ReturnStatus","","",null,null],[13,"Invalid","","",10,null],[13,"SuccessFinishNoResult","","",10,null],[13,"SuccessFinishResult","","",10,null],[13,"SuccessContinuingNoResult","","",10,null],[13,"SuccessContinuingResult","","",10,null],[13,"Started","","",10,null],[13,"Failed","","",10,null],[13,"Quit","","",10,null],[4,"RunMode","","Thread run modes.",null,null],[13,"OnlyThisThread","","",2,null],[13,"AllThreads","","",2,null],[13,"OnlyDuringStepping","","",2,null],[4,"ScriptLanguage","","",null,null],[13,"None","","",7,null],[13,"Python","","",7,null],[4,"SectionType","","",null,null],[13,"Invalid","","",27,null],[13,"Code","","",27,null],[13,"Container","","",27,null],[13,"Data","","",27,null],[13,"DataCString","","",27,null],[13,"DataCStringPointers","","",27,null],[13,"DataSymbolAddress","","",27,null],[13,"Data4","","",27,null],[13,"Data8","","",27,null],[13,"Data16","","",27,null],[13,"DataPointers","","",27,null],[13,"Debug","","",27,null],[13,"ZeroFill","","",27,null],[13,"DataObjCMessageRefs","","",27,null],[13,"DataObjCCFStrings","","",27,null],[13,"DWARFDebugAbbrev","","",27,null],[13,"DWARFDebugAddr","","",27,null],[13,"DWARFDebugAranges","","",27,null],[13,"DWARFDebugFrame","","",27,null],[13,"DWARFDebugInfo","","",27,null],[13,"DWARFDebugLine","","",27,null],[13,"DWARFDebugLoc","","",27,null],[13,"DWARFDebugMacInfo","","",27,null],[13,"DWARFDebugMacro","","",27,null],[13,"DWARFDebugPubNames","","",27,null],[13,"DWARFDebugPubTypes","","",27,null],[13,"DWARFDebugRanges","","",27,null],[13,"DWARFDebugStr","","",27,null],[13,"DWARFDebugStrOffsets","","",27,null],[13,"DWARFAppleNames","","",27,null],[13,"DWARFAppleTypes","","",27,null],[13,"DWARFAppleNamespaces","","",27,null],[13,"DWARFAppleObjC","","",27,null],[13,"ELFSymbolTable","","",27,null],[13,"ELFDynamicSymbols","","",27,null],[13,"ELFRelocationEntries","","",27,null],[13,"ELFDynamicLinkInfo","","",27,null],[13,"EHFrame","","",27,null],[13,"ARMexidx","","",27,null],[13,"ARMextab","","",27,null],[13,"CompactUnwind","","",27,null],[13,"GoSymtab","","",27,null],[13,"AbsoluteAddress","","",27,null],[13,"Other","","",27,null],[4,"StateType","","Process and thread states.",null,null],[13,"Invalid","","",0,null],[13,"Unloaded","","Process object is valid, but not currently loaded.",0,null],[13,"Connected","","Process is connected to remote debug services, but not launched\nor attached to anything yet.",0,null],[13,"Attaching","","Process is currently trying to attach.",0,null],[13,"Launching","","Process is currently trying to launch.",0,null],[13,"Stopped","","Process or thread is stopped and can be examined.",0,null],[13,"Running","","Process or thread is running and can&#39;t be examined.",0,null],[13,"Stepping","","Process or thread is in the process of stepping and can&#39;t be examined.",0,null],[13,"Crashed","","Process or thread has crashed and can be examined.",0,null],[13,"Detached","","Process has been detached and can&#39;t be examined.",0,null],[13,"Exited","","Process has exited and can&#39;t be examined.",0,null],[13,"Suspended","","Process or thread is in a suspended state as far as the\ndebugger is concerned while other processes or threads\nget the chance to run.",0,null],[4,"StopReason","","Thread stop reasons.",null,null],[13,"Invalid","","",9,null],[13,"None","","",9,null],[13,"Trace","","",9,null],[13,"Breakpoint","","",9,null],[13,"Watchpoint","","",9,null],[13,"Signal","","",9,null],[13,"Exception","","",9,null],[13,"Exec","","",9,null],[13,"PlanComplete","","",9,null],[13,"ThreadExiting","","",9,null],[13,"Instrumentation","","",9,null],[3,"SymbolContextItem","","These mask bits allow a common interface for queries that can\nlimit the amount of information that gets parsed to only the\ninformation that is requested. These bits also can indicate what\nactually did get resolved during query function calls.",null,null],[4,"SymbolType","","",null,null],[13,"Any","","",26,null],[13,"Absolute","","",26,null],[13,"Code","","",26,null],[13,"Resolver","","",26,null],[13,"Data","","",26,null],[13,"Trampoline","","",26,null],[13,"Runtime","","",26,null],[13,"Exception","","",26,null],[13,"SourceFile","","",26,null],[13,"HeaderFile","","",26,null],[13,"ObjectFile","","",26,null],[13,"CommonBlock","","",26,null],[13,"Block","","",26,null],[13,"Local","","",26,null],[13,"Param","","",26,null],[13,"Variable","","",26,null],[13,"VariableType","","",26,null],[13,"LineEntry","","",26,null],[13,"LineHeader","","",26,null],[13,"ScopeBegin","","",26,null],[13,"ScopeEnd","","",26,null],[13,"Additional","","",26,null],[13,"Compiler","","",26,null],[13,"Instrumentation","","",26,null],[13,"Undefined","","",26,null],[13,"ObjCClass","","",26,null],[13,"ObjCMetaClass","","",26,null],[13,"ObjCIVar","","",26,null],[13,"ReExported","","",26,null],[4,"TemplateArgumentKind","","",null,null],[13,"Null","","",32,null],[13,"Type","","",32,null],[13,"Declaration","","",32,null],[13,"Integral","","",32,null],[13,"Template","","",32,null],[13,"TemplateExpansion","","",32,null],[13,"Expression","","",32,null],[13,"Pack","","",32,null],[3,"TypeClass","","",null,null],[4,"TypeFlags","","",null,null],[13,"HasChildren","","",45,null],[13,"HasValue","","",45,null],[13,"IsArray","","",45,null],[13,"IsBlock","","",45,null],[13,"IsBuiltIn","","",45,null],[13,"IsClass","","",45,null],[13,"IsCPlusPlus","","",45,null],[13,"IsEnumeration","","",45,null],[13,"IsFuncPrototype","","",45,null],[13,"IsMember","","",45,null],[13,"IsObjC","","",45,null],[13,"IsPointer","","",45,null],[13,"IsReference","","",45,null],[13,"IsStructUnion","","",45,null],[13,"IsTemplate","","",45,null],[13,"IsTypedef","","",45,null],[13,"IsVector","","",45,null],[13,"IsScalar","","",45,null],[13,"IsInteger","","",45,null],[13,"IsFloat","","",45,null],[13,"IsComplex","","",45,null],[13,"IsSigned","","",45,null],[13,"InstanceIsPointer","","",45,null],[4,"TypeOptions","","",null,null],[13,"None","","",33,null],[13,"Cascade","","",33,null],[13,"SkipPointers","","",33,null],[13,"SkipReferences","","",33,null],[13,"HideChildren","","",33,null],[13,"HideValue","","",33,null],[13,"ShowOneLiner","","",33,null],[13,"HideNames","","",33,null],[13,"NonCacheable","","",33,null],[13,"HideEmptyAggregates","","",33,null],[4,"TypeSummaryCapping","","",null,null],[13,"SummaryCapped","","",47,null],[13,"SummaryUncapped","","",47,null],[4,"ValueType","","",null,null],[13,"Invalid","","",14,null],[13,"VariableGlobal","","",14,null],[13,"VariableStatic","","",14,null],[13,"VariableArgument","","",14,null],[13,"VariableLocal","","",14,null],[13,"Register","","",14,null],[13,"RegisterSet","","",14,null],[13,"ConstResult","","",14,null],[4,"WatchpointEventType","","",null,null],[13,"WatchpointEventTypeInvalidType","","",20,null],[13,"WatchpointEventTypeAdded","","",20,null],[13,"WatchpointEventTypeRemoved","","",20,null],[13,"WatchpointEventTypeEnabled","","",20,null],[13,"WatchpointEventTypeDisabled","","",20,null],[13,"WatchpointEventTypeCommandChanged","","",20,null],[13,"WatchpointEventTypeConditionChanged","","",20,null],[13,"WatchpointEventTypeIgnoreChanged","","",20,null],[13,"WatchpointEventTypeThreadChanged","","",20,null],[13,"WatchpointEventTypeTypeChanged","","",20,null],[4,"WatchpointKind","","",null,null],[13,"eWatchpointKindRead","","",40,null],[13,"eWatchpointKindWrite","","",40,null],[17,"LAUNCH_FLAG_EXEC","","Exec when launching and turn the calling process into a new process.",null,null],[17,"LAUNCH_FLAG_DEBUG","","Stop as soon as the process launches to allow the process to be debugged.",null,null],[17,"LAUNCH_FLAG_STOP_AT_ENTRY","","Stop at the program entry point instead of auto-continuing when\nlaunching or attaching at entry point.",null,null],[17,"LAUNCH_FLAG_DISABLE_ASLR","","Disable address space layout randomization (ASLR).",null,null],[17,"LAUNCH_FLAG_DISABLE_STDIO","","Disable stdio for the inferior process (e.g. for a GUI app).",null,null],[17,"LAUNCH_FLAG_LAUNCH_IN_TTY","","Launch the process in a new TTY if supported by the host.",null,null],[17,"LAUNCH_FLAG_LAUNCH_IN_SHELL","","Launch the process inside a shell to get shell expansion.",null,null],[17,"LAUNCH_FLAG_LAUNCH_IN_SEPARATE_PROCESS_GROUP","","Launch the process in a separate process group.",null,null],[17,"LAUNCH_FLAG_DONT_SET_EXIT_STATUS","","If you are going to hand the process off (e.g. to debugserver),\nset this flag so that lldb and the handee don&#39;t race to set its\nexit status.",null,null],[17,"LAUNCH_FLAG_DETACH_ON_ERRROR","","If set, then the client stub should detach rather than\nkilling the debugee.",null,null],[17,"LAUNCH_FLAG_SHELL_EXPAND_ARGUMENTS","","Perform shell-style argument expansion.",null,null],[17,"LAUNCH_FLAG_CLOSE_TTY_ON_EXIT","","Close the open TTY on exit.",null,null],[17,"SYMBOL_CONTEXT_ITEM_TARGET","","Set when a target is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_MODULE","","Set when a module is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_COMPUNIT","","Set when a compilation unit is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_FUNCTION","","Set when a function is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_BLOCK","","Set when the deepest block is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_LINE_ENTRY","","Set when a line entry is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_SYMBOL","","Set when a symbol is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_EVERYTHING","","Indicates to try and look everything up during a routine symbol\ncontext query. This doesn&#39;t actually include looking up a variable.",null,null],[17,"SYMBOL_CONTEXT_ITEM_VARIABLE","","Set when a global or static variable is requested from a query,\nor was located in the query results.",null,null],[17,"PERMISSIONS_WRITABLE","","",null,null],[17,"PERMISSIONS_READABLE","","",null,null],[17,"PERMISSIONS_EXECUTABLE","","",null,null],[17,"TYPE_CLASS_INVALID","","",null,null],[17,"TYPE_CLASS_ARRAY","","",null,null],[17,"TYPE_CLASS_BLOCKPOINTER","","",null,null],[17,"TYPE_CLASS_BUILTIN","","",null,null],[17,"TYPE_CLASS_CLASS","","",null,null],[17,"TYPE_CLASS_COMPLEX_FLOAT","","",null,null],[17,"TYPE_CLASS_COMPLEX_INTEGER","","",null,null],[17,"TYPE_CLASS_ENUMERATION","","",null,null],[17,"TYPE_CLASS_FUNCTION","","",null,null],[17,"TYPE_CLASS_MEMBER_POINTER","","",null,null],[17,"TYPE_CLASS_OBJC_OBJECT","","",null,null],[17,"TYPE_CLASS_OBJC_INTERFACE","","",null,null],[17,"TYPE_CLASS_OBJC_OBJECT_POINTER","","",null,null],[17,"TYPE_CLASS_POINTER","","",null,null],[17,"TYPE_CLASS_REFERENCE","","",null,null],[17,"TYPE_CLASS_STRUCT","","",null,null],[17,"TYPE_CLASS_TYPEDEF","","",null,null],[17,"TYPE_CLASS_UNION","","",null,null],[17,"TYPE_CLASS_VECTOR","","",null,null],[17,"TYPE_CLASS_OTHER","","",null,null],[17,"TYPE_CLASS_ANY","","",null,null],[17,"FILE_PERMISSIONS_WORLD_EXECUTE","","",null,null],[17,"FILE_PERMISSIONS_WORLD_WRITE","","",null,null],[17,"FILE_PERMISSIONS_WORLD_READ","","",null,null],[17,"FILE_PERMISSIONS_GROUP_EXECUTE","","",null,null],[17,"FILE_PERMISSIONS_GROUP_WRITE","","",null,null],[17,"FILE_PERMISSIONS_GROUP_READ","","",null,null],[17,"FILE_PERMISSIONS_USER_EXECUTE","","",null,null],[17,"FILE_PERMISSIONS_USER_WRITE","","",null,null],[17,"FILE_PERMISSIONS_USER_READ","","",null,null],[17,"FILE_PERMISSIONS_WORLD_RX","","",null,null],[17,"FILE_PERMISSIONS_WORLD_RW","","",null,null],[17,"FILE_PERMISSIONS_WORLD_RWX","","",null,null],[17,"FILE_PERMISSIONS_GROUP_RX","","",null,null],[17,"FILE_PERMISSIONS_GROUP_RW","","",null,null],[17,"FILE_PERMISSIONS_GROUP_RWX","","",null,null],[17,"FILE_PERMISSIONS_USER_RX","","",null,null],[17,"FILE_PERMISSIONS_USER_RW","","",null,null],[17,"FILE_PERMISSIONS_USER_RWX","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_R","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_W","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_X","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_RW","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_RX","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_RWX","","",null,null],[17,"FILE_PERMISSIONS_FILE_DEFAULT","","",null,null],[17,"FILE_PERMISSIONS_DIRECTORY_DEFAULT","","",null,null],[3,"SBAddress","","A section + offset based address class.",null,null],[12,"raw","","The underlying raw `SBAddressRef`.",48,null],[3,"SBAttachInfo","","Configuration for attaching to a process.",null,null],[12,"raw","","The underlying raw `SBAttachInfoRef`.",49,null],[3,"SBBlock","","A lexical block.",null,null],[12,"raw","","The underlying raw `SBBlockRef`.",50,null],[3,"SBBreakpoint","","A logical breakpoint and its associated settings.",null,null],[12,"raw","","The underlying raw `SBBreakpointRef`.",51,null],[3,"SBBreakpointLocationIter","","An iterator over the [locations] in an [`SBBreakpoint`].",null,null],[3,"SBBreakpointLocation","","One unique instance (by address) of a logical breakpoint.",null,null],[12,"raw","","The underlying raw `SBBreakpointLocationRef`.",52,null],[3,"SBBroadcaster","","An entity which can broadcast events.",null,null],[12,"raw","","The underlying raw `SBBroadcasterRef`.",53,null],[3,"SBCompileUnit","","A compilation unit or compiled source file.",null,null],[12,"raw","","The underlying raw `SBCompileUnitRef`.",54,null],[3,"SBData","","A block of data.",null,null],[12,"raw","","The underlying raw `SBDataRef`.",55,null],[3,"SBDebugger","","Creates [`SBTarget`]s, provides access to them and manages\nthe overall debugging experience.",null,null],[12,"raw","","The underlying raw `SBDebuggerRef`.",56,null],[3,"SBDebuggerTargetIter","","Iterate over the [targets] known to a [debugger].",null,null],[3,"SBError","","A container for holding any error code.",null,null],[12,"raw","","The underlying raw `SBErrorRef`.",57,null],[3,"SBEvent","","An event.",null,null],[12,"raw","","The underlying raw `SBEventRef`.",58,null],[3,"SBExpressionOptions","","",null,null],[12,"raw","","The underlying raw `SBExpressionOptionsRef`.",59,null],[3,"SBFileSpec","","A file specification that divides the path into a\ndirectory and basename.",null,null],[12,"raw","","The underlying raw `SBFileSpecRef`.",60,null],[3,"SBFileSpecList","","A list of [filespecs].",null,null],[12,"raw","","The underlying raw `SBFileSpecListRef`.",61,null],[3,"SBFrame","","One of the stack frames associated with a thread.",null,null],[12,"raw","","The underlying raw `SBFrameRef`.",62,null],[3,"SBFunction","","A generic function, which can be inlined or not.",null,null],[12,"raw","","The underlying raw `SBFunctionRef`.",63,null],[3,"SBInstruction","","A machine instruction.",null,null],[12,"raw","","The underlying raw `SBInstructionRef`.",64,null],[3,"SBInstructionList","","A list of [machine instructions].",null,null],[12,"raw","","The underlying raw `SBInstructionListRef`.",65,null],[3,"SBInstructionListIter","","An iterator over the [instructions] in an [`SBInstructionList`].",null,null],[3,"SBLaunchInfo","","Configuration for launching a process.",null,null],[12,"raw","","The underlying raw `SBLaunchInfoRef`.",66,null],[3,"SBLineEntry","","Specifies an association with a contiguous range of\ninstructions and a source file location.",null,null],[12,"raw","","The underlying raw `SBLineEntryRef`.",67,null],[3,"SBListener","","Listen for debugger events.",null,null],[12,"raw","","The underlying raw `SBListenerRef`.",68,null],[3,"SBModule","","An executable image and its associated object and symbol files.",null,null],[12,"raw","","The underlying raw `SBModuleRef`.",69,null],[3,"SBModuleSpec","","A description of an `SBModule`.",null,null],[12,"raw","","The underlying raw `SBModuleSpecRef`.",70,null],[3,"SBPlatform","","A platform that can represent the current host or a\nremote host debug platform.",null,null],[12,"raw","","The underlying raw `SBPlatformRef`.",71,null],[3,"SBProcess","","The process associated with the target program.",null,null],[12,"raw","","The underlying raw `SBProcessRef`.",72,null],[3,"SBProcessEvent","","",null,null],[3,"SBProcessEventRestartedReasonIter","","Iterate over the restart reasons in a [process event].",null,null],[3,"SBProcessThreadIter","","Iterate over the [threads] in a [process].",null,null],[3,"SBStream","","A destination for streaming data output. By default, this is\na string stream, but it can be redirected to a file.",null,null],[12,"raw","","The underlying raw `SBStreamRef`.",73,null],[3,"SBStringList","","A list of strings.",null,null],[12,"raw","","The underlying raw `SBStringListRef`.",74,null],[3,"SBStringListIter","","An iterator over an `SBStringList`.",null,null],[3,"SBSymbol","","The symbol possibly associated with a stack frame.",null,null],[12,"raw","","The underlying raw `SBSymbolRef`.",75,null],[3,"SBSymbolContext","","A container that stores various debugger related info.",null,null],[12,"raw","","The underlying raw `SBSymbolContextRef`.",76,null],[3,"SBTarget","","The target program running under the debugger.",null,null],[12,"raw","","The underlying raw `SBTargetRef`.",77,null],[3,"SBTargetBreakpointIter","","Iterate over the [breakpoints] in a [target].",null,null],[3,"SBTargetEvent","","",null,null],[3,"SBTargetEventModuleIter","","Iterate over the [modules] referenced from a [target event].",null,null],[3,"SBTargetWatchpointIter","","Iterate over the [watchpoints] in a [target].",null,null],[3,"SBThread","","A thread of execution.",null,null],[12,"raw","","The underlying raw `SBThreadRef`.",78,null],[3,"SBThreadEvent","","",null,null],[3,"SBThreadFrameIter","","Iterate over the [frames] in a [thread].",null,null],[3,"SBValue","","The value of a variable, register or expression.",null,null],[12,"raw","","The underlying raw `SBValueRef`.",79,null],[3,"SBValueList","","A list of [values].",null,null],[12,"raw","","The underlying raw `SBValueListRef`.",80,null],[3,"SBVariablesOptions","","",null,null],[12,"raw","","The underlying raw `SBVariablesOptionsRef`.",81,null],[3,"SBWatchpoint","","An instance of a watch point for a specific target program.",null,null],[12,"raw","","The underlying raw `SBWatchpointRef`.",82,null],[4,"DisassemblyFlavor","","Which syntax should be used in disassembly?",null,null],[13,"ATT","","The primary syntax used by the GNU Assembler and in the\nLinux world.",83,null],[13,"Default","","The default syntax.",83,null],[13,"Intel","","The primary syntax used on Windows.",83,null],[11,"wrap","","Construct a new `SBAddress`.",48,{"inputs":[{"name":"sbaddressref"}],"output":{"name":"sbaddress"}}],[11,"maybe_wrap","","Construct a new `Some(SBAddress)` or `None`.",48,{"inputs":[{"name":"sbaddressref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBAddress` value.",48,null],[11,"file_address","","The address that represents the address as it is found in the\nobject file that defines it.",48,null],[11,"load_address","","The address as it has been loaded into memory by a target.",48,null],[11,"address_class","","Get the address class for this address.",48,null],[11,"symbol_context","","Get the `SBSymbolContext` for a given address.",48,null],[11,"module","","Get the `SBModule` for a given address.",48,null],[11,"compile_unit","","Get the `SBCompileUnit` for a given address.",48,null],[11,"function","","Get the `SBFunction` for a given address.",48,null],[11,"block","","Get the `SBBlock` for a given address.",48,null],[11,"symbol","","Get the `SBSymbol` for a given address.",48,null],[11,"line_entry","","Get the `SBLineEntry` for a given address.",48,null],[11,"fmt","","",48,null],[11,"drop","","",48,null],[11,"fmt","","",49,null],[11,"new","","Construct a new `SBAttachInfo`.",49,{"inputs":[],"output":{"name":"sbattachinfo"}}],[11,"new_with_pid","","Construct a new `SBAttachInfo` for a given process ID (pid).",49,{"inputs":[{"name":"lldb_pid_t"}],"output":{"name":"sbattachinfo"}}],[11,"wrap","","Construct a new `SBAttachInfo`.",49,{"inputs":[{"name":"sbattachinforef"}],"output":{"name":"sbattachinfo"}}],[11,"process_id","","",49,null],[11,"set_process_id","","",49,null],[11,"listener","","",49,null],[11,"set_listener","","",49,null],[11,"default","","",49,{"inputs":[],"output":{"name":"sbattachinfo"}}],[11,"drop","","",49,null],[11,"wrap","","Construct a new `SBBlock`.",50,{"inputs":[{"name":"sbblockref"}],"output":{"name":"sbblock"}}],[11,"maybe_wrap","","Construct a new `Some(SBBlock)` or `None`.",50,{"inputs":[{"name":"sbblockref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBBlock` value.",50,null],[11,"is_inlined","","Does this block represent an inlined function?",50,null],[11,"inlined_name","","Get the function name if this block represents an inlined function.",50,null],[11,"inlined_call_site_file","","Get the call site file if this block represents an inlined function.",50,null],[11,"inlined_call_site_line","","Get the call site line number if this block represents an inlined function.",50,null],[11,"inlined_call_site_column","","Get the call site column number if this block represents an inlined function.",50,null],[11,"parent","","Get the parent block",50,null],[11,"containing_inlined_block","","Get the inlined block that is or contains this block.",50,null],[11,"sibling","","Get the sibling block for this block.",50,null],[11,"first_child","","Get the first child block for this block.",50,null],[11,"num_ranges","","The number of address ranges associated with this block.",50,null],[11,"range_start_address","","Get the start address of an address range.",50,null],[11,"range_end_address","","Get the end address of an address range.",50,null],[11,"range_index_for_block_address","","Given an address, find out which address range it is part of.",50,null],[11,"fmt","","",50,null],[11,"drop","","",50,null],[11,"wrap","","Construct a new `SBBreakpoint`.",51,{"inputs":[{"name":"sbbreakpointref"}],"output":{"name":"sbbreakpoint"}}],[11,"maybe_wrap","","Construct a new `Some(SBBreakpoint)` or `None`.",51,{"inputs":[{"name":"sbbreakpointref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBBreakpoint` value.",51,null],[11,"is_enabled","","",51,null],[11,"set_enabled","","",51,null],[11,"is_oneshot","","",51,null],[11,"set_oneshot","","",51,null],[11,"is_internal","","",51,null],[11,"hit_count","","",51,null],[11,"ignore_count","","",51,null],[11,"set_ignore_count","","",51,null],[11,"add_name","","",51,null],[11,"remove_name","","",51,null],[11,"matches_name","","",51,null],[11,"names","","",51,null],[11,"clear_all_breakpoint_sites","","",51,null],[11,"find_location_by_address","","",51,null],[11,"find_location_id_by_address","","",51,null],[11,"find_location_by_id","","",51,null],[11,"locations","","",51,null],[11,"fmt","","",51,null],[11,"drop","","",51,null],[11,"next","","",84,null],[11,"wrap","","Construct a new `SBBreakpointLocation`.",52,{"inputs":[{"name":"sbbreakpointlocationref"}],"output":{"name":"sbbreakpointlocation"}}],[11,"maybe_wrap","","Construct a new `Some(SBBreakpointLocation)` or `None`.",52,{"inputs":[{"name":"sbbreakpointlocationref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBBreakpointLocation` value.",52,null],[11,"id","","",52,null],[11,"address","","",52,null],[11,"load_address","","",52,null],[11,"is_enabled","","",52,null],[11,"set_enabled","","",52,null],[11,"ignore_count","","",52,null],[11,"set_ignore_count","","",52,null],[11,"is_resolved","","",52,null],[11,"breakpoint","","",52,null],[11,"fmt","","",52,null],[11,"drop","","",52,null],[11,"fmt","","",53,null],[11,"new","","Construct a new `SBBroadcaster`.",53,{"inputs":[],"output":{"name":"sbbroadcaster"}}],[11,"wrap","","Construct a new `SBBroadcaster`.",53,{"inputs":[{"name":"sbbroadcasterref"}],"output":{"name":"sbbroadcaster"}}],[11,"maybe_wrap","","Construct a new `Some(SBBroadcaster)` or `None`.",53,{"inputs":[{"name":"sbbroadcasterref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBBroadcaster` value.",53,null],[11,"broadcast_event_by_type","","",53,null],[11,"broadcast_event","","",53,null],[11,"add_initial_events_to_listener","","",53,null],[11,"add_listener","","",53,null],[11,"event_type_has_listeners","","",53,null],[11,"remove_listener","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"sbbroadcaster"}}],[11,"drop","","",53,null],[11,"wrap","","Construct a new `SBCompileUnit`.",54,{"inputs":[{"name":"sbcompileunitref"}],"output":{"name":"sbcompileunit"}}],[11,"maybe_wrap","","Construct a new `Some(SBCompileUnit)` or `None`.",54,{"inputs":[{"name":"sbcompileunitref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBCompileUnit` value.",54,null],[11,"filespec","","The source file for the compile unit.",54,null],[11,"language","","The language for the compile unit.",54,null],[11,"fmt","","",54,null],[11,"drop","","",54,null],[11,"fmt","","",55,null],[11,"wrap","","Construct a new `SBData`.",55,{"inputs":[{"name":"sbdataref"}],"output":{"name":"sbdata"}}],[11,"maybe_wrap","","Construct a new `Some(SBData)` or `None`.",55,{"inputs":[{"name":"sbdataref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBData` value.",55,null],[11,"drop","","",55,null],[11,"initialize","","Initialize LLDB.",56,{"inputs":[],"output":null}],[11,"terminate","","Tear down LLDB.",56,{"inputs":[],"output":null}],[11,"create","","Create a new instance of `SBDebugger`.",56,{"inputs":[{"name":"bool"}],"output":{"name":"sbdebugger"}}],[11,"async","","Get whether or not the debugger is in async mode.",56,null],[11,"set_async","","Set the debugger to be in async mode or not.",56,null],[11,"version","","Get the LLDB version string.",56,{"inputs":[],"output":{"name":"string"}}],[11,"create_target","","Create a target.",56,null],[11,"create_target_simple","","Create a target from just an executable name.",56,null],[11,"targets","","Get an iterator over the [targets] known to this debugger instance.",56,null],[11,"selected_platform","","Get the currently selected [`SBPlatform`].",56,null],[11,"set_selected_platform","","Set the selected [`SBPlatform`].",56,null],[11,"next","","",85,null],[11,"fmt","","",56,null],[11,"drop","","",56,null],[11,"new","","Construct a new `SBError`.",57,{"inputs":[],"output":{"name":"sberror"}}],[11,"wrap","","Construct a new `SBError`.",57,{"inputs":[{"name":"sberrorref"}],"output":{"name":"sberror"}}],[11,"maybe_wrap","","Construct a new `Some(SBError)` or `None`.",57,{"inputs":[{"name":"sberrorref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBError` value.",57,null],[11,"error_string","","Any textual error message associated with the error.",57,null],[11,"is_failure","","Does this error represent a failure?",57,null],[11,"is_success","","Does this error represent a success?",57,null],[11,"error","","The underlying error code. Must be interpreted in conjunction\nwith the error type.",57,null],[11,"error_type","","What type of error is this?",57,null],[11,"default","","",57,{"inputs":[],"output":{"name":"sberror"}}],[11,"fmt","","",57,null],[11,"drop","","",57,null],[11,"wrap","","Construct a new `SBEvent`.",58,{"inputs":[{"name":"sbeventref"}],"output":{"name":"sbevent"}}],[11,"maybe_wrap","","Construct a new `Some(SBEvent)` or `None`.",58,{"inputs":[{"name":"sbeventref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBEvent` value.",58,null],[11,"data_flavor","","",58,null],[11,"event_type","","",58,null],[11,"broadcaster","","",58,null],[11,"broadcaster_class","","",58,null],[11,"broadcaster_matches_ref","","",58,null],[11,"fmt","","",58,null],[11,"drop","","",58,null],[11,"fmt","","",59,null],[11,"new","","Construct a new `SBExpressionOptions`.",59,{"inputs":[],"output":{"name":"sbexpressionoptions"}}],[11,"wrap","","Construct a new `SBExpressionOptions`.",59,{"inputs":[{"name":"sbexpressionoptionsref"}],"output":{"name":"sbexpressionoptions"}}],[11,"unwind_on_error","","Whether to unwind the expression stack on error.",59,null],[11,"set_unwind_on_error","","Whether to unwind the expression stack on error.",59,null],[11,"ignore_breakpoints","","Whether to ignore breakpoint hits while running expressions.",59,null],[11,"set_ignore_breakpoints","","Whether to ignore breakpoint hits while running expressions.",59,null],[11,"drop","","",59,null],[11,"wrap","","Construct a new `SBFileSpec`.",60,{"inputs":[{"name":"sbfilespecref"}],"output":{"name":"sbfilespec"}}],[11,"maybe_wrap","","Construct a new `Some(SBFileSpec)` or `None`.",60,{"inputs":[{"name":"sbfilespecref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBFileSpec` value.",60,null],[11,"exists","","Does this file exist?",60,null],[11,"filename","","The path file name.",60,null],[11,"directory","","The path directory name.",60,null],[11,"fmt","","",60,null],[11,"drop","","",60,null],[11,"wrap","","Construct a new `SBFileSpecList`.",61,{"inputs":[{"name":"sbfilespeclistref"}],"output":{"name":"sbfilespeclist"}}],[11,"append","","",61,null],[11,"append_if_unique","","",61,null],[11,"is_empty","","Is this filespec list empty?",61,null],[11,"clear","","Clear this filespec list.",61,null],[11,"iter","","Iterate over this filespec list.",61,null],[11,"fmt","","",61,null],[11,"drop","","",61,null],[11,"wrap","","Construct a new `SBFrame`.",62,{"inputs":[{"name":"sbframeref"}],"output":{"name":"sbframe"}}],[11,"maybe_wrap","","Construct a new `Some(SBFrame)` or `None`.",62,{"inputs":[{"name":"sbframeref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBFrame` value.",62,null],[11,"frame_id","","The zero-based stack frame index for this frame.",62,null],[11,"cfa","","Get the Canonical Frame Address for this stack frame.",62,null],[11,"pc","","",62,null],[11,"set_pc","","",62,null],[11,"sp","","",62,null],[11,"fp","","",62,null],[11,"pc_address","","The program counter (PC) as a section offset address (`SBAddress`).",62,null],[11,"module","","The `SBModule` for this stack frame.",62,null],[11,"compile_unit","","The `SBCompileUnit` for this stack frame.",62,null],[11,"function","","The `SBFunction` for this stack frame.",62,null],[11,"symbol","","The `SBSymbol` for this stack frame.",62,null],[11,"block","","Get the deepest block that contains the frame PC.",62,null],[11,"function_name","","Get the appropriate function name for this frame. Inlined functions in\nLLDB are represented by blocks that have inlined function information, so\njust looking at the `SBFunction` or `SBSymbol` for a frame isn&#39;t enough.\nThis function will return the appropriate function, symbol or inlined\nfunction name for the frame.",62,null],[11,"display_function_name","","",62,null],[11,"is_inlined","","Return `true` if this frame represents an inlined function.",62,null],[11,"evaluate_expression","","Evaluate an expression within the context of this frame.",62,null],[11,"frame_block","","Gets the lexical block that defines the stack frame. Another way to think\nof this is it will return the block that contains all of the variables\nfor a stack frame. Inlined functions are represented as `SBBlock` objects\nthat have inlined function information: the name of the inlined function,\nwhere it was called from. The block that is returned will be the first\nblock at or above the block for the PC (`SBFrame::block()`) that defines\nthe scope of the frame. When a function contains no inlined functions,\nthis will be the top most lexical block that defines the function.\nWhen a function has inlined functions and the PC is currently\nin one of those inlined functions, this method will return the inlined\nblock that defines this frame. If the PC isn&#39;t currently in an inlined\nfunction, the lexical block that defines the function is returned.",62,null],[11,"line_entry","","The line table entry (`SBLineEntry`) for this stack frame.",62,null],[11,"thread","","The thread that is executing this stack frame.",62,null],[11,"disassemble","","",62,null],[11,"variables","","",62,null],[11,"all_variables","","",62,null],[11,"arguments","","",62,null],[11,"locals","","",62,null],[11,"statics","","",62,null],[11,"registers","","",62,null],[11,"find_register","","",62,null],[11,"parent_frame","","",62,null],[11,"fmt","","",62,null],[11,"drop","","",62,null],[11,"wrap","","Construct a new `SBFunction`.",63,{"inputs":[{"name":"sbfunctionref"}],"output":{"name":"sbfunction"}}],[11,"maybe_wrap","","Construct a new `Some(SBFunction)` or `None`.",63,{"inputs":[{"name":"sbfunctionref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBFunction` value.",63,null],[11,"name","","The name of this function.",63,null],[11,"display_name","","The display name for the function, as it should be seen in a UI.",63,null],[11,"mangled_name","","The mangled (linkage) name for this function.",63,null],[11,"get_instructions","","",63,null],[11,"start_address","","Get the address of the start of this function.",63,null],[11,"end_address","","Get the address of the end of this function.",63,null],[11,"prologue_byte_size","","Get the size of the function prologue, in bytes.",63,null],[11,"is_optimized","","Returns true if the function was compiled with optimization.",63,null],[11,"fmt","","",63,null],[11,"drop","","",63,null],[11,"wrap","","Construct a new `SBInstruction`.",64,{"inputs":[{"name":"sbinstructionref"}],"output":{"name":"sbinstruction"}}],[11,"maybe_wrap","","Construct a new `Some(SBInstruction)` or `None`.",64,{"inputs":[{"name":"sbinstructionref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBInstruction` value.",64,null],[11,"address","","Get the address of the instruction.",64,null],[11,"address_class","","Get the address class for the address of the instruction.",64,null],[11,"data","","",64,null],[11,"byte_size","","",64,null],[11,"is_branch","","",64,null],[11,"fmt","","",64,null],[11,"drop","","",64,null],[11,"wrap","","Construct a new `SBInstructionList`.",65,{"inputs":[{"name":"sbinstructionlistref"}],"output":{"name":"sbinstructionlist"}}],[11,"maybe_wrap","","Construct a new `Some(SBInstructionList)` or `None`.",65,{"inputs":[{"name":"sbinstructionlistref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBInstructionList` value.",65,null],[11,"is_empty","","Is this instruction list empty?",65,null],[11,"clear","","Clear this instruction list.",65,null],[11,"iter","","Iterate over this instruction list.",65,null],[11,"fmt","","",65,null],[11,"drop","","",65,null],[11,"next","","",86,null],[11,"fmt","","",66,null],[11,"new","","Construct a new `SBLaunchInfo`.",66,{"inputs":[],"output":{"name":"sblaunchinfo"}}],[11,"wrap","","Construct a new `SBLaunchInfo`.",66,{"inputs":[{"name":"sblaunchinforef"}],"output":{"name":"sblaunchinfo"}}],[11,"process_id","","",66,null],[11,"user_id","","",66,null],[11,"set_user_id","","",66,null],[11,"user_id_is_valid","","",66,null],[11,"group_id","","",66,null],[11,"set_group_id","","",66,null],[11,"group_id_is_valid","","",66,null],[11,"executable_file","","",66,null],[11,"set_executable_file","","Set the executable file that will be used to launch the process and\noptionally set it as the first argument in the argument vector.",66,null],[11,"listener","","Get the listener that will be used to receive process events.",66,null],[11,"set_listener","","Set the listener that will be used to receive process events.",66,null],[11,"launch_flags","","",66,null],[11,"set_launch_flags","","",66,null],[11,"process_plugin_name","","",66,null],[11,"set_process_plugin_name","","",66,null],[11,"shell","","",66,null],[11,"set_shell","","",66,null],[11,"shell_expand_arguments","","",66,null],[11,"set_shell_expand_arguments","","",66,null],[11,"resume_count","","",66,null],[11,"set_resume_count","","",66,null],[11,"add_close_file_action","","",66,null],[11,"add_duplicate_file_action","","",66,null],[11,"add_open_file_action","","",66,null],[11,"add_suppress_file_action","","",66,null],[11,"launch_event_data","","",66,null],[11,"set_launch_event_data","","",66,null],[11,"detach_on_error","","",66,null],[11,"set_detach_on_error","","",66,null],[11,"default","","",66,{"inputs":[],"output":{"name":"sblaunchinfo"}}],[11,"drop","","",66,null],[11,"wrap","","Construct a new `SBLineEntry`.",67,{"inputs":[{"name":"sblineentryref"}],"output":{"name":"sblineentry"}}],[11,"maybe_wrap","","Construct a new `Some(SBLineEntry)` or `None`.",67,{"inputs":[{"name":"sblineentryref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBLineEntry` value.",67,null],[11,"start_address","","The start address for this line entry.",67,null],[11,"end_address","","The end address for this line entry.",67,null],[11,"filespec","","The file (`SBFileSpec`) for this line entry.",67,null],[11,"line","","The 1-based line number for this line entry.",67,null],[11,"column","","The 1-based column number for this line entry.",67,null],[11,"fmt","","",67,null],[11,"drop","","",67,null],[11,"fmt","","",68,null],[11,"new","","Construct a new `SBListener`.",68,{"inputs":[],"output":{"name":"sblistener"}}],[11,"wrap","","Construct a new `SBListener`.",68,{"inputs":[{"name":"sblistenerref"}],"output":{"name":"sblistener"}}],[11,"maybe_wrap","","Construct a new `Some(SBListener)` or `None`.",68,{"inputs":[{"name":"sblistenerref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBListener` value.",68,null],[11,"start_listening_for_event_class","","",68,null],[11,"stop_listening_for_event_class","","",68,null],[11,"start_listening_for_events","","",68,null],[11,"stop_listening_for_events","","",68,null],[11,"wait_for_event","","",68,null],[11,"wait_for_event_for_broadcaster","","",68,null],[11,"wait_for_event_for_broadcaster_with_type","","",68,null],[11,"peek_at_next_event","","",68,null],[11,"peek_at_next_event_for_broadcaster","","",68,null],[11,"peek_at_next_event_for_broadcaster_with_type","","",68,null],[11,"get_next_event","","",68,null],[11,"get_next_event_for_broadcaster","","",68,null],[11,"get_next_event_for_broadcaster_with_type","","",68,null],[11,"handle_broadcast_event","","",68,null],[11,"default","","",68,{"inputs":[],"output":{"name":"sblistener"}}],[11,"drop","","",68,null],[11,"wrap","","Construct a new `SBModule`.",69,{"inputs":[{"name":"sbmoduleref"}],"output":{"name":"sbmodule"}}],[11,"maybe_wrap","","Construct a new `Some(SBModule)` or `None`.",69,{"inputs":[{"name":"sbmoduleref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBModule` value.",69,null],[11,"filespec","","The file for the module on the host system that is running LLDB.",69,null],[11,"platform_filespec","","The file for the module as it is known on the remote system on\nwhich it is being debugged.",69,null],[11,"fmt","","",69,null],[11,"drop","","",69,null],[11,"wrap","","Construct a new `SBModuleSpec`.",70,{"inputs":[{"name":"sbmodulespecref"}],"output":{"name":"sbmodulespec"}}],[11,"maybe_wrap","","Construct a new `Some(SBModuleSpec)` or `None`.",70,{"inputs":[{"name":"sbmodulespecref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBModuleSpec` value.",70,null],[11,"filespec","","The file for the module on the host system that is running LLDB.",70,null],[11,"set_filespec","","Set the file for the module on the host system that is running LLDB.",70,null],[11,"platform_filespec","","The file for the module as it is known on the remote system which\nis being debugged.",70,null],[11,"set_platform_filespec","","Set the file for the module as it is known on the remote system which\nis being debugged.",70,null],[11,"symbol_filespec","","",70,null],[11,"set_symbol_filespec","","",70,null],[11,"object_name","","",70,null],[11,"set_object_name","","",70,null],[11,"triple","","",70,null],[11,"set_triple","","",70,null],[11,"uuid_bytes","","",70,null],[11,"set_uuid_bytes","","",70,null],[11,"fmt","","",70,null],[11,"drop","","",70,null],[11,"fmt","","",71,null],[11,"wrap","","Construct a new `SBPlatform`.",71,{"inputs":[{"name":"sbplatformref"}],"output":{"name":"sbplatform"}}],[11,"maybe_wrap","","Construct a new `Some(SBPlatform)` or `None`.",71,{"inputs":[{"name":"sbplatformref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBPlatform` value.",71,null],[11,"working_directory","","The working directory for this platform.",71,null],[11,"name","","The name of the platform.",71,null],[11,"triple","","The triple used to describe this platform.",71,null],[11,"hostname","","The hostname for this platform.",71,null],[11,"os_build","","The build ID for the platforms&#39; OS version.",71,null],[11,"os_description","","The long form description of the platform&#39;s OS version.",71,null],[11,"os_major_version","","The major component of the platform&#39;s OS version.",71,null],[11,"os_minor_version","","The minor component of the platform&#39;s OS version.",71,null],[11,"os_update_version","","The patch or update component of the platform&#39;s OS version.",71,null],[11,"launch","","Launch a process. This is not for debugging that process.",71,null],[11,"kill","","Kill a process.",71,null],[11,"drop","","",71,null],[11,"wrap","","Construct a new `SBProcess`.",72,{"inputs":[{"name":"sbprocessref"}],"output":{"name":"sbprocess"}}],[11,"maybe_wrap","","Construct a new `Some(SBProcess)` or `None`.",72,{"inputs":[{"name":"sbprocessref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBProcess` value.",72,null],[11,"broadcaster_class_name","","",72,{"inputs":[],"output":{"name":"str"}}],[11,"state","","The current state of this process (running, stopped, exited, etc.).",72,null],[11,"is_alive","","Returns `true` if the process is currently alive.",72,null],[11,"is_running","","Returns `true` if the process is currently running.",72,null],[11,"is_stopped","","Returns `true` if the process is currently stopped.",72,null],[11,"exit_status","","The exit status of the process when the process state is\n`Exited`.",72,null],[11,"exit_description","","The exit description of the process when the process state\nis `Exited`.",72,null],[11,"process_id","","Returns the process ID of the process.",72,null],[11,"unique_id","","Returns an integer ID that is guaranteed to be unique across all\nprocess instances. This is not the process ID, just a unique\ninteger for comparison and caching purposes.",72,null],[11,"address_byte_size","","Get the size, in bytes, of an address.",72,null],[11,"destroy","","Kills the process and shuts down all threads that were spawned to\ntrack and monitor the process.",72,null],[11,"continue_execution","","",72,null],[11,"stop","","",72,null],[11,"kill","","Same as calling `destroy`.",72,null],[11,"detach","","",72,null],[11,"signal","","Send the process a Unix signal.",72,null],[11,"broadcaster","","",72,null],[11,"threads","","Get an iterator over the [threads] known to this process instance.",72,null],[11,"thread_by_id","","Returns the thread with the given thread ID.",72,null],[11,"thread_by_index_id","","Returns the thread with the given thread index ID.",72,null],[11,"selected_thread","","Returns the currently selected thread.",72,null],[11,"set_selected_thread","","Set the selected thread.",72,null],[11,"set_selected_thread_by_id","","Set the selected thread by ID.",72,null],[11,"set_selected_thread_by_index_id","","Set the selected thread by index ID.",72,null],[11,"event_as_process_event","","",72,{"inputs":[{"name":"sbevent"}],"output":{"name":"option"}}],[11,"next","","",87,null],[11,"fmt","","",72,null],[11,"drop","","",72,null],[11,"new","","",88,{"inputs":[{"name":"sbevent"}],"output":{"name":"self"}}],[11,"process_state","","",88,null],[11,"process","","",88,null],[11,"interrupted","","",88,null],[11,"restarted","","",88,null],[11,"restarted_reasons","","",88,null],[11,"next","","",89,null],[11,"fmt","","",73,null],[11,"new","","Construct a new `SBStream`.",73,{"inputs":[],"output":{"name":"sbstream"}}],[11,"wrap","","Construct a new `SBStream`.",73,{"inputs":[{"name":"sbstreamref"}],"output":{"name":"sbstream"}}],[11,"maybe_wrap","","Construct a new `Some(SBStream)` or `None`.",73,{"inputs":[{"name":"sbstreamref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBStream` value.",73,null],[11,"clear","","If the stream is directed to a file, forget about the file and\nif the ownership of the file was transferred to this object,\nclose the file. If the stream is backed by a local cache, clear\nthis cache.",73,null],[11,"data","","If this stream is not redirected to a file, this retrieves the\nlocally cached data.",73,null],[11,"len","","If this stream is not redirected to a file, this retrieves the\nlength of the locally cached data.",73,null],[11,"is_empty","","Is this stream empty?",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"sbstream"}}],[11,"drop","","",73,null],[11,"fmt","","",74,null],[11,"new","","Construct a new `SBStringList`.",74,{"inputs":[],"output":{"name":"sbstringlist"}}],[11,"wrap","","Construct a new `SBStringList`.",74,{"inputs":[{"name":"sbstringlistref"}],"output":{"name":"sbstringlist"}}],[11,"maybe_wrap","","Construct a new `Some(SBStringList)` or `None`.",74,{"inputs":[{"name":"sbstringlistref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBStringList` value.",74,null],[11,"is_empty","","Is this string list empty?",74,null],[11,"clear","","Clear this string list.",74,null],[11,"append_string","","Append another string to this list.",74,null],[11,"append_list","","Append another string list to this one.",74,null],[11,"iter","","Iterate over this string list.",74,null],[11,"drop","","",74,null],[11,"next","","",90,null],[11,"wrap","","Construct a new `SBSymbol`.",75,{"inputs":[{"name":"sbsymbolref"}],"output":{"name":"sbsymbol"}}],[11,"maybe_wrap","","Construct a new `Some(SBSymbol)` or `None`.",75,{"inputs":[{"name":"sbsymbolref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBSymbol` value.",75,null],[11,"name","","The name of this function.",75,null],[11,"display_name","","The display name for the function, as it should be seen in a UI.",75,null],[11,"mangled_name","","The mangled (linkage) name for this function.",75,null],[11,"get_instructions","","",75,null],[11,"start_address","","Get the address that this symbol refers to, if present.",75,null],[11,"end_address","","If the symbol has an address and the underlying value has a\nnon-zero size, this will have the address of the end of\nthe value.",75,null],[11,"prologue_byte_size","","Get the size of the function prologue, in bytes.",75,null],[11,"symbol_type","","What type of symbol is this?",75,null],[11,"is_external","","Is this symbol externally visible (exported) from the module that\ncontains it?",75,null],[11,"is_synthetic","","Is this symbol synthetically created from information in the\nmodule that contains it?",75,null],[11,"fmt","","",75,null],[11,"drop","","",75,null],[11,"wrap","","Construct a new `SBSymbolContext`.",76,{"inputs":[{"name":"sbsymbolcontextref"}],"output":{"name":"sbsymbolcontext"}}],[11,"maybe_wrap","","Construct a new `Some(SBSymbolContext)` or `None`.",76,{"inputs":[{"name":"sbsymbolcontextref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBSymbolContext` value.",76,null],[11,"fmt","","",76,null],[11,"drop","","",76,null],[11,"wrap","","Construct a new `SBTarget`.",77,{"inputs":[{"name":"sbtargetref"}],"output":{"name":"sbtarget"}}],[11,"maybe_wrap","","Construct a new `Some(SBTarget)` or `None`.",77,{"inputs":[{"name":"sbtargetref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBTarget` value.",77,null],[11,"broadcaster_class_name","","",77,{"inputs":[],"output":{"name":"str"}}],[11,"platform","","Get the [`SBPlatform`] associated with this target.",77,null],[11,"process","","Get the [`SBProcess`] associated with this target.",77,null],[11,"launch","","Launch a target for debugging.",77,null],[11,"attach","","",77,null],[11,"executable","","Get a filespec for the executable.",77,null],[11,"add_module","","Add a module to the target.",77,null],[11,"add_module_spec","","Add a module to the target using an `SBModuleSpec`.",77,null],[11,"remove_module","","Remove a module from the target.",77,null],[11,"debugger","","Get the debugger controlling this target.",77,null],[11,"find_module","","Find the module for the given `SBFileSpec`.",77,null],[11,"delete_breakpoint","","",77,null],[11,"find_breakpoint_by_id","","",77,null],[11,"enable_all_breakpoints","","",77,null],[11,"disable_all_breakpoints","","",77,null],[11,"delete_all_breakpoints","","",77,null],[11,"breakpoints","","",77,null],[11,"delete_watchpoint","","",77,null],[11,"find_watchpoint_by_id","","",77,null],[11,"enable_all_watchpoints","","",77,null],[11,"disable_all_watchpoints","","",77,null],[11,"delete_all_watchpoints","","",77,null],[11,"watch_address","","",77,null],[11,"watchpoints","","",77,null],[11,"broadcaster","","",77,null],[11,"evaluate_expression","","Evaluate an expression.",77,null],[11,"event_as_target_event","","",77,{"inputs":[{"name":"sbevent"}],"output":{"name":"option"}}],[11,"fmt","","",77,null],[11,"drop","","",77,null],[11,"next","","",91,null],[11,"next","","",92,null],[11,"new","","",93,{"inputs":[{"name":"sbevent"}],"output":{"name":"self"}}],[11,"target","","",93,null],[11,"modules","","",93,null],[11,"next","","",94,null],[11,"wrap","","Construct a new `SBThread`.",78,{"inputs":[{"name":"sbthreadref"}],"output":{"name":"sbthread"}}],[11,"maybe_wrap","","Construct a new `Some(SBThread)` or `None`.",78,{"inputs":[{"name":"sbthreadref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBThread` value.",78,null],[11,"broadcaster_class_name","","",78,{"inputs":[],"output":{"name":"str"}}],[11,"stop_reason","","Get the stop reason for this thread.",78,null],[11,"stop_return_value","","The return value from the last stop if we just stopped due\nto stepping out of a function",78,null],[11,"thread_id","","Returns a unique thread identifier for the current `SBThread`\nthat will remain constant throughout the thread&#39;s lifetime in\nthis process and will not be reused by another thread during this\nprocess lifetime.  On Mac OS X systems, this is a system-wide\nunique thread identifier; this identifier is also used by\nother tools like sample which helps to associate data from\nthose tools with lldb.  See related `SBThread::index_id`.",78,null],[11,"index_id","","Return the index number for this `SBThread`.  The index\nnumber is the same thing that a user gives as an argument\nto `thread select` in the command line lldb.",78,null],[11,"frames","","Get an iterator over the [frames] known to this thread instance.",78,null],[11,"selected_frame","","Get the currently selected frame for this thread.",78,null],[11,"set_selected_frame","","Set the currently selected frame for this thread. This takes a frame index.",78,null],[11,"process","","Get the process in which this thread is running.",78,null],[11,"event_as_thread_event","","",78,{"inputs":[{"name":"sbevent"}],"output":{"name":"option"}}],[11,"next","","",95,null],[11,"fmt","","",78,null],[11,"drop","","",78,null],[11,"new","","",96,{"inputs":[{"name":"sbevent"}],"output":{"name":"self"}}],[11,"thread","","",96,null],[11,"frame","","",96,null],[11,"wrap","","Construct a new `SBValue`.",79,{"inputs":[{"name":"sbvalueref"}],"output":{"name":"sbvalue"}}],[11,"maybe_wrap","","Construct a new `Some(SBValue)` or `None`.",79,{"inputs":[{"name":"sbvalueref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBValue` value.",79,null],[11,"dereference","","",79,null],[11,"address_of","","",79,null],[11,"type_is_pointer_type","","",79,null],[11,"target","","",79,null],[11,"process","","",79,null],[11,"thread","","",79,null],[11,"frame","","",79,null],[11,"watch","","Find and watch a variable.",79,null],[11,"watch_pointee","","Find and watch the location pointed to by a variable.",79,null],[11,"pointee_data","","Get an `SBData` wrapping what this `SBValue` points to.",79,null],[11,"data","","Get an `SBData` wrapping the contents of this `SBValue`.",79,null],[11,"set_data","","",79,null],[11,"load_address","","",79,null],[11,"address","","",79,null],[11,"fmt","","",79,null],[11,"drop","","",79,null],[11,"fmt","","",80,null],[11,"wrap","","Construct a new `SBValueList`.",80,{"inputs":[{"name":"sbvaluelistref"}],"output":{"name":"sbvaluelist"}}],[11,"maybe_wrap","","Construct a new `Some(SBValueList)` or `None`.",80,{"inputs":[{"name":"sbvaluelistref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBValueList` value.",80,null],[11,"append","","",80,null],[11,"append_list","","",80,null],[11,"is_empty","","Is this value list empty?",80,null],[11,"clear","","Clear this value list.",80,null],[11,"find_value_by_uid","","",80,null],[11,"get_first_value_by_name","","",80,null],[11,"iter","","Iterate over this value list.",80,null],[11,"drop","","",80,null],[11,"fmt","","",81,null],[11,"new","","Construct a new `SBVariablesOptions`.",81,{"inputs":[],"output":{"name":"sbvariablesoptions"}}],[11,"wrap","","Construct a new `SBVariablesOptions`.",81,{"inputs":[{"name":"sbvariablesoptionsref"}],"output":{"name":"sbvariablesoptions"}}],[11,"maybe_wrap","","Construct a new `Some(SBVariablesOptions)` or `None`.",81,{"inputs":[{"name":"sbvariablesoptionsref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBVariablesOptions` value.",81,null],[11,"include_arguments","","",81,null],[11,"set_include_arguments","","",81,null],[11,"include_locals","","",81,null],[11,"set_include_locals","","",81,null],[11,"include_statics","","",81,null],[11,"set_include_statics","","",81,null],[11,"in_scope_only","","",81,null],[11,"set_in_scope_only","","",81,null],[11,"include_runtime_support_values","","",81,null],[11,"set_include_runtime_support_values","","",81,null],[11,"use_dynamic","","",81,null],[11,"set_use_dynamic","","",81,null],[11,"drop","","",81,null],[11,"wrap","","Construct a new `SBWatchpoint`.",82,{"inputs":[{"name":"sbwatchpointref"}],"output":{"name":"sbwatchpoint"}}],[11,"maybe_wrap","","Construct a new `Some(SBWatchpoint)` or `None`.",82,{"inputs":[{"name":"sbwatchpointref"}],"output":{"name":"option"}}],[11,"is_valid","","Check whether or not this is a valid `SBWatchpoint` value.",82,null],[11,"error","","",82,null],[11,"id","","",82,null],[11,"hardware_index","","",82,null],[11,"watch_address","","",82,null],[11,"watch_size","","",82,null],[11,"is_enabled","","",82,null],[11,"set_enabled","","",82,null],[11,"hit_count","","",82,null],[11,"ignore_count","","",82,null],[11,"set_ignore_count","","",82,null],[11,"fmt","","",82,null],[11,"drop","","",82,null],[11,"fmt","","",83,null],[11,"clone","","",83,null]],"paths":[[4,"StateType"],[3,"LaunchFlags"],[4,"RunMode"],[4,"ByteOrder"],[4,"Encoding"],[4,"Format"],[4,"DescriptionLevel"],[4,"ScriptLanguage"],[4,"RegisterKind"],[4,"StopReason"],[4,"ReturnStatus"],[4,"ExpressionResults"],[4,"ConnectionStatus"],[4,"ErrorType"],[4,"ValueType"],[4,"InputReaderGranularity"],[3,"SymbolContextItem"],[3,"Permissions"],[4,"InputReaderAction"],[4,"BreakpointEventType"],[4,"WatchpointEventType"],[4,"LanguageType"],[4,"InstrumentationRuntimeType"],[4,"DynamicValueType"],[4,"AccessType"],[4,"CommandArgumentType"],[4,"SymbolType"],[4,"SectionType"],[4,"EmulateInstructionOptions"],[4,"FunctionNameType"],[4,"BasicType"],[3,"TypeClass"],[4,"TemplateArgumentKind"],[4,"TypeOptions"],[4,"FrameComparison"],[4,"AddressClass"],[3,"FilePermissions"],[4,"QueueItemKind"],[4,"QueueKind"],[4,"ExpressionEvaluationPhase"],[4,"WatchpointKind"],[4,"GdbSignal"],[4,"PathType"],[4,"MemberFunctionKind"],[4,"MatchType"],[4,"TypeFlags"],[4,"CommandFlags"],[4,"TypeSummaryCapping"],[3,"SBAddress"],[3,"SBAttachInfo"],[3,"SBBlock"],[3,"SBBreakpoint"],[3,"SBBreakpointLocation"],[3,"SBBroadcaster"],[3,"SBCompileUnit"],[3,"SBData"],[3,"SBDebugger"],[3,"SBError"],[3,"SBEvent"],[3,"SBExpressionOptions"],[3,"SBFileSpec"],[3,"SBFileSpecList"],[3,"SBFrame"],[3,"SBFunction"],[3,"SBInstruction"],[3,"SBInstructionList"],[3,"SBLaunchInfo"],[3,"SBLineEntry"],[3,"SBListener"],[3,"SBModule"],[3,"SBModuleSpec"],[3,"SBPlatform"],[3,"SBProcess"],[3,"SBStream"],[3,"SBStringList"],[3,"SBSymbol"],[3,"SBSymbolContext"],[3,"SBTarget"],[3,"SBThread"],[3,"SBValue"],[3,"SBValueList"],[3,"SBVariablesOptions"],[3,"SBWatchpoint"],[4,"DisassemblyFlavor"],[3,"SBBreakpointLocationIter"],[3,"SBDebuggerTargetIter"],[3,"SBInstructionListIter"],[3,"SBProcessThreadIter"],[3,"SBProcessEvent"],[3,"SBProcessEventRestartedReasonIter"],[3,"SBStringListIter"],[3,"SBTargetBreakpointIter"],[3,"SBTargetWatchpointIter"],[3,"SBTargetEvent"],[3,"SBTargetEventModuleIter"],[3,"SBThreadFrameIter"],[3,"SBThreadEvent"]]};
searchIndex["lldb_sys"] = {"doc":"","items":[[3,"LaunchFlags","lldb_sys","",null,null],[3,"SymbolContextItem","","These mask bits allow a common interface for queries that can\nlimit the amount of information that gets parsed to only the\ninformation that is requested. These bits also can indicate what\nactually did get resolved during query function calls.",null,null],[3,"Permissions","","",null,null],[3,"TypeClass","","",null,null],[3,"FilePermissions","","",null,null],[4,"SBAddressOpaque","","",null,null],[4,"SBAttachInfoOpaque","","",null,null],[4,"SBBlockOpaque","","",null,null],[4,"SBBreakpointOpaque","","",null,null],[4,"SBBreakpointLocationOpaque","","",null,null],[4,"SBBroadcasterOpaque","","",null,null],[4,"SBCommandOpaque","","",null,null],[4,"SBCommandInterpreterOpaque","","",null,null],[4,"SBCommandInterpreterRunOptionsOpaque","","",null,null],[4,"SBCommandPluginInterfaceOpaque","","",null,null],[4,"SBCommandReturnObjectOpaque","","",null,null],[4,"SBCommunicationOpaque","","",null,null],[4,"SBCompileUnitOpaque","","",null,null],[4,"SBDataOpaque","","",null,null],[4,"SBDebuggerOpaque","","",null,null],[4,"SBDeclarationOpaque","","",null,null],[4,"SBErrorOpaque","","",null,null],[4,"SBEventOpaque","","",null,null],[4,"SBEventListOpaque","","",null,null],[4,"SBExecutionContextOpaque","","",null,null],[4,"SBExpressionOptionsOpaque","","",null,null],[4,"SBFileSpecOpaque","","",null,null],[4,"SBFileSpecListOpaque","","",null,null],[4,"SBFrameOpaque","","",null,null],[4,"SBFunctionOpaque","","",null,null],[4,"SBHostOSOpaque","","",null,null],[4,"SBInstructionOpaque","","",null,null],[4,"SBInstructionListOpaque","","",null,null],[4,"SBLaunchInfoOpaque","","",null,null],[4,"SBLineEntryOpaque","","",null,null],[4,"SBListenerOpaque","","",null,null],[4,"SBModuleOpaque","","",null,null],[4,"SBModuleSpecOpaque","","",null,null],[4,"SBModuleSpecListOpaque","","",null,null],[4,"SBPlatformOpaque","","",null,null],[4,"SBProcessOpaque","","",null,null],[4,"SBQueueOpaque","","",null,null],[4,"SBQueueItemOpaque","","",null,null],[4,"SBSectionOpaque","","",null,null],[4,"SBSourceManagerOpaque","","",null,null],[4,"SBStreamOpaque","","",null,null],[4,"SBStringListOpaque","","",null,null],[4,"SBSymbolOpaque","","",null,null],[4,"SBSymbolContextOpaque","","",null,null],[4,"SBSymbolContextListOpaque","","",null,null],[4,"SBTargetRefOpaque","","",null,null],[4,"SBThreadRefOpaque","","",null,null],[4,"SBThreadCollectionOpaque","","",null,null],[4,"SBThreadPlanOpaque","","",null,null],[4,"SBTypeOpaque","","",null,null],[4,"SBTypeMemberOpaque","","",null,null],[4,"SBTypeCategoryOpaque","","",null,null],[4,"SBTypeEnumMemberOpaque","","",null,null],[4,"SBTypeEnumMemberListOpaque","","",null,null],[4,"SBTypeFilterOpaque","","",null,null],[4,"SBTypeFormatOpaque","","",null,null],[4,"SBTypeMemberFunctionOpaque","","",null,null],[4,"SBTypeNameSpecifierOpaque","","",null,null],[4,"SBTypeSummaryOpaque","","",null,null],[4,"SBTypeSummaryOptionsOpaque","","",null,null],[4,"SBInputReaderOpaque","","",null,null],[4,"SBPlatformConnectOptionsOpaque","","",null,null],[4,"SBPlatformShellCommandOpaque","","",null,null],[4,"SBTypeSyntheticOpaque","","",null,null],[4,"SBTypeListOpaque","","",null,null],[4,"SBValueOpaque","","",null,null],[4,"SBValueListOpaque","","",null,null],[4,"SBVariablesOptionsOpaque","","",null,null],[4,"SBWatchpointOpaque","","",null,null],[4,"SBUnixSignalsOpaque","","",null,null],[4,"StateType","","Process and thread states.",null,null],[13,"Invalid","","",0,null],[13,"Unloaded","","Process object is valid, but not currently loaded.",0,null],[13,"Connected","","Process is connected to remote debug services, but not launched\nor attached to anything yet.",0,null],[13,"Attaching","","Process is currently trying to attach.",0,null],[13,"Launching","","Process is currently trying to launch.",0,null],[13,"Stopped","","Process or thread is stopped and can be examined.",0,null],[13,"Running","","Process or thread is running and can&#39;t be examined.",0,null],[13,"Stepping","","Process or thread is in the process of stepping and can&#39;t be examined.",0,null],[13,"Crashed","","Process or thread has crashed and can be examined.",0,null],[13,"Detached","","Process has been detached and can&#39;t be examined.",0,null],[13,"Exited","","Process has exited and can&#39;t be examined.",0,null],[13,"Suspended","","Process or thread is in a suspended state as far as the\ndebugger is concerned while other processes or threads\nget the chance to run.",0,null],[4,"RunMode","","Thread run modes.",null,null],[13,"OnlyThisThread","","",1,null],[13,"AllThreads","","",1,null],[13,"OnlyDuringStepping","","",1,null],[4,"ByteOrder","","Byte order definitions.",null,null],[13,"Invalid","","",2,null],[13,"Big","","",2,null],[13,"PDP","","",2,null],[13,"Little","","",2,null],[4,"Encoding","","Register encoding defintions.",null,null],[13,"Invalid","","",3,null],[13,"Uint","","Unsigned integer.",3,null],[13,"Sint","","signed integer.",3,null],[13,"IEEE754","","Floating point.",3,null],[13,"Vector","","Vector register.",3,null],[4,"Format","","Display format definitions.",null,null],[13,"Default","","",4,null],[13,"Boolean","","",4,null],[13,"Binary","","",4,null],[13,"Bytes","","",4,null],[13,"BytesWithASCII","","",4,null],[13,"Char","","",4,null],[13,"CharPrintable","","",4,null],[13,"Complex","","",4,null],[13,"CString","","",4,null],[13,"Decimal","","",4,null],[13,"Enum","","",4,null],[13,"Hex","","",4,null],[13,"HexUppercase","","",4,null],[13,"Float","","",4,null],[13,"Octal","","",4,null],[13,"OSType","","",4,null],[13,"Unicode16","","",4,null],[13,"Unicode32","","",4,null],[13,"Unsigned","","",4,null],[13,"Pointer","","",4,null],[13,"VectorOfChar","","",4,null],[13,"VectorOfSInt8","","",4,null],[13,"VectorOfUInt8","","",4,null],[13,"VectorOfSInt16","","",4,null],[13,"VectorOfUInt16","","",4,null],[13,"VectorOfSInt32","","",4,null],[13,"VectorOfUInt32","","",4,null],[13,"VectorOfSInt64","","",4,null],[13,"VectorOfUInt64","","",4,null],[13,"VectorOfFloat16","","",4,null],[13,"VectorOfFloat32","","",4,null],[13,"VectorOfFloat64","","",4,null],[13,"VectorOfUInt128","","",4,null],[13,"ComplexInteger","","",4,null],[13,"CharArray","","",4,null],[13,"AddressInfo","","",4,null],[13,"HexFloat","","",4,null],[13,"Instruction","","",4,null],[13,"Void","","",4,null],[13,"kNumFormats","","",4,null],[4,"DescriptionLevel","","",null,null],[13,"Brief","","",5,null],[13,"Full","","",5,null],[13,"Verbose","","",5,null],[13,"Initial","","",5,null],[13,"kNumDescriptionLevels","","",5,null],[4,"ScriptLanguage","","",null,null],[13,"None","","",6,null],[13,"Python","","",6,null],[4,"RegisterKind","","",null,null],[13,"EHFrame","","",7,null],[13,"DWARF","","",7,null],[13,"Generic","","",7,null],[13,"ProcessPlugin","","",7,null],[13,"LLDB","","",7,null],[13,"kNumRegisterKinds","","",7,null],[4,"StopReason","","Thread stop reasons.",null,null],[13,"Invalid","","",8,null],[13,"None","","",8,null],[13,"Trace","","",8,null],[13,"Breakpoint","","",8,null],[13,"Watchpoint","","",8,null],[13,"Signal","","",8,null],[13,"Exception","","",8,null],[13,"Exec","","",8,null],[13,"PlanComplete","","",8,null],[13,"ThreadExiting","","",8,null],[13,"Instrumentation","","",8,null],[4,"ReturnStatus","","",null,null],[13,"Invalid","","",9,null],[13,"SuccessFinishNoResult","","",9,null],[13,"SuccessFinishResult","","",9,null],[13,"SuccessContinuingNoResult","","",9,null],[13,"SuccessContinuingResult","","",9,null],[13,"Started","","",9,null],[13,"Failed","","",9,null],[13,"Quit","","",9,null],[4,"ExpressionResults","","",null,null],[13,"Completed","","",10,null],[13,"SetupError","","",10,null],[13,"ParseError","","",10,null],[13,"Discarded","","",10,null],[13,"Interrupted","","",10,null],[13,"HitBreakpoint","","",10,null],[13,"TimedOut","","",10,null],[13,"ResultUnavailable","","",10,null],[13,"StoppedForDebug","","",10,null],[4,"ConnectionStatus","","",null,null],[13,"ConnectionStatusSuccess","","",11,null],[13,"ConnectionStatusEndOfFile","","",11,null],[13,"ConnectionStatusError","","",11,null],[13,"ConnectionStatusTimedOut","","",11,null],[13,"ConnectionStatusNoConnection","","",11,null],[13,"ConnectionStatusLostConnection","","",11,null],[13,"ConnectionStatusInterrupted","","",11,null],[4,"ErrorType","","",null,null],[13,"Invalid","","",12,null],[13,"Generic","","",12,null],[13,"MachKernel","","",12,null],[13,"POSIX","","",12,null],[13,"Expression","","",12,null],[13,"Win32","","",12,null],[4,"ValueType","","",null,null],[13,"Invalid","","",13,null],[13,"VariableGlobal","","",13,null],[13,"VariableStatic","","",13,null],[13,"VariableArgument","","",13,null],[13,"VariableLocal","","",13,null],[13,"Register","","",13,null],[13,"RegisterSet","","",13,null],[13,"ConstResult","","",13,null],[4,"InputReaderGranularity","","",null,null],[13,"Invalid","","",14,null],[13,"Byte","","",14,null],[13,"Word","","",14,null],[13,"Line","","",14,null],[13,"All","","",14,null],[4,"InputReaderAction","","",null,null],[13,"Activate","","",15,null],[13,"AsynchronousOutputWritten","","",15,null],[13,"Reactivate","","",15,null],[13,"Deactivate","","",15,null],[13,"GotToken","","",15,null],[13,"Interrupt","","",15,null],[13,"EndOfFile","","",15,null],[13,"Done","","",15,null],[4,"BreakpointEventType","","",null,null],[13,"InvalidType","","",16,null],[13,"Added","","",16,null],[13,"Removed","","",16,null],[13,"LocationsAdded","","",16,null],[13,"LocationsRemoved","","",16,null],[13,"LocationsResolved","","",16,null],[13,"Enabled","","",16,null],[13,"Disabled","","",16,null],[13,"CommandChanged","","",16,null],[13,"ConditionChanged","","",16,null],[13,"IgnoreChanged","","",16,null],[13,"ThreadChanged","","",16,null],[4,"WatchpointEventType","","",null,null],[13,"WatchpointEventTypeInvalidType","","",17,null],[13,"WatchpointEventTypeAdded","","",17,null],[13,"WatchpointEventTypeRemoved","","",17,null],[13,"WatchpointEventTypeEnabled","","",17,null],[13,"WatchpointEventTypeDisabled","","",17,null],[13,"WatchpointEventTypeCommandChanged","","",17,null],[13,"WatchpointEventTypeConditionChanged","","",17,null],[13,"WatchpointEventTypeIgnoreChanged","","",17,null],[13,"WatchpointEventTypeThreadChanged","","",17,null],[13,"WatchpointEventTypeTypeChanged","","",17,null],[4,"LanguageType","","",null,null],[13,"Unknown","","",18,null],[13,"C89","","",18,null],[13,"C","","",18,null],[13,"Ada83","","",18,null],[13,"C_plus_plus","","",18,null],[13,"Cobol74","","",18,null],[13,"Cobol85","","",18,null],[13,"Fortran77","","",18,null],[13,"Fortran90","","",18,null],[13,"Pascal83","","",18,null],[13,"Modula2","","",18,null],[13,"Java","","",18,null],[13,"C99","","",18,null],[13,"Ada95","","",18,null],[13,"Fortran95","","",18,null],[13,"PLI","","",18,null],[13,"ObjC","","",18,null],[13,"ObjC_plus_plus","","",18,null],[13,"UPC","","",18,null],[13,"D","","",18,null],[13,"Python","","",18,null],[13,"OpenCL","","",18,null],[13,"Go","","",18,null],[13,"Modula3","","",18,null],[13,"Haskell","","",18,null],[13,"C_plus_plus_03","","",18,null],[13,"C_plus_plus_11","","",18,null],[13,"OCaml","","",18,null],[13,"Rust","","",18,null],[13,"C11","","",18,null],[13,"Swift","","",18,null],[13,"Julia","","",18,null],[13,"Dylan","","",18,null],[13,"C_plus_plus_14","","",18,null],[13,"Fortran03","","",18,null],[13,"Fortran08","","",18,null],[13,"MipsAssembler","","",18,null],[13,"ExtRenderScript","","",18,null],[13,"NumLanguageTypes","","",18,null],[4,"InstrumentationRuntimeType","","",null,null],[13,"AddressSanitizer","","",19,null],[13,"ThreadSanitizer","","",19,null],[13,"NumInstrumentationRuntimeTypes","","",19,null],[4,"DynamicValueType","","",null,null],[13,"NoDynamicValues","","",20,null],[13,"DynamicCanRunTarget","","",20,null],[13,"DynamicDontRunTarget","","",20,null],[4,"AccessType","","",null,null],[13,"None","","",21,null],[13,"Public","","",21,null],[13,"Private","","",21,null],[13,"Protected","","",21,null],[13,"Package","","",21,null],[4,"CommandArgumentType","","",null,null],[13,"Address","","",22,null],[13,"AddressOrExpression","","",22,null],[13,"AliasName","","",22,null],[13,"AliasOptions","","",22,null],[13,"Architecture","","",22,null],[13,"Boolean","","",22,null],[13,"BreakpointID","","",22,null],[13,"BreakpointIDRange","","",22,null],[13,"BreakpointName","","",22,null],[13,"ByteSize","","",22,null],[13,"ClassName","","",22,null],[13,"CommandName","","",22,null],[13,"Count","","",22,null],[13,"DescriptionVerbosity","","",22,null],[13,"DirectoryName","","",22,null],[13,"DisassemblyFlavor","","",22,null],[13,"EndAddress","","",22,null],[13,"Expression","","",22,null],[13,"ExpressionPath","","",22,null],[13,"ExprFormat","","",22,null],[13,"Filename","","",22,null],[13,"Format","","",22,null],[13,"FrameIndex","","",22,null],[13,"FullName","","",22,null],[13,"FunctionName","","",22,null],[13,"FunctionOrSymbol","","",22,null],[13,"GDBFormat","","",22,null],[13,"HelpText","","",22,null],[13,"Index","","",22,null],[13,"Language","","",22,null],[13,"LineNum","","",22,null],[13,"LogCategory","","",22,null],[13,"LogChannel","","",22,null],[13,"Method","","",22,null],[13,"Name","","",22,null],[13,"NewPathPrefix","","",22,null],[13,"NumLines","","",22,null],[13,"NumberPerLine","","",22,null],[13,"Offset","","",22,null],[13,"OldPathPrefix","","",22,null],[13,"OneLiner","","",22,null],[13,"Path","","",22,null],[13,"PermissionsNumber","","",22,null],[13,"PermissionsString","","",22,null],[13,"Pid","","",22,null],[13,"Plugin","","",22,null],[13,"ProcessName","","",22,null],[13,"PythonClass","","",22,null],[13,"PythonFunction","","",22,null],[13,"PythonScript","","",22,null],[13,"QueueName","","",22,null],[13,"RegisterName","","",22,null],[13,"RegularExpression","","",22,null],[13,"RunArgs","","",22,null],[13,"RunMode","","",22,null],[13,"ScriptedCommandSynchronicity","","",22,null],[13,"ScriptLang","","",22,null],[13,"SearchWord","","",22,null],[13,"Selector","","",22,null],[13,"SettingIndex","","",22,null],[13,"SettingKey","","",22,null],[13,"SettingPrefix","","",22,null],[13,"SettingVariableName","","",22,null],[13,"ShlibName","","",22,null],[13,"SourceFile","","",22,null],[13,"SortOrder","","",22,null],[13,"StartAddress","","",22,null],[13,"SummaryString","","",22,null],[13,"Symbol","","",22,null],[13,"ThreadID","","",22,null],[13,"ThreadIndex","","",22,null],[13,"ThreadName","","",22,null],[13,"TypeName","","",22,null],[13,"UnsignedInteger","","",22,null],[13,"UnixSignal","","",22,null],[13,"VarName","","",22,null],[13,"Value","","",22,null],[13,"Width","","",22,null],[13,"None","","",22,null],[13,"Platform","","",22,null],[13,"WatchpointID","","",22,null],[13,"WatchpointIDRange","","",22,null],[13,"WatchType","","",22,null],[13,"LastArg","","",22,null],[4,"SymbolType","","",null,null],[13,"Any","","",23,null],[13,"Absolute","","",23,null],[13,"Code","","",23,null],[13,"Resolver","","",23,null],[13,"Data","","",23,null],[13,"Trampoline","","",23,null],[13,"Runtime","","",23,null],[13,"Exception","","",23,null],[13,"SourceFile","","",23,null],[13,"HeaderFile","","",23,null],[13,"ObjectFile","","",23,null],[13,"CommonBlock","","",23,null],[13,"Block","","",23,null],[13,"Local","","",23,null],[13,"Param","","",23,null],[13,"Variable","","",23,null],[13,"VariableType","","",23,null],[13,"LineEntry","","",23,null],[13,"LineHeader","","",23,null],[13,"ScopeBegin","","",23,null],[13,"ScopeEnd","","",23,null],[13,"Additional","","",23,null],[13,"Compiler","","",23,null],[13,"Instrumentation","","",23,null],[13,"Undefined","","",23,null],[13,"ObjCClass","","",23,null],[13,"ObjCMetaClass","","",23,null],[13,"ObjCIVar","","",23,null],[13,"ReExported","","",23,null],[4,"SectionType","","",null,null],[13,"Invalid","","",24,null],[13,"Code","","",24,null],[13,"Container","","",24,null],[13,"Data","","",24,null],[13,"DataCString","","",24,null],[13,"DataCStringPointers","","",24,null],[13,"DataSymbolAddress","","",24,null],[13,"Data4","","",24,null],[13,"Data8","","",24,null],[13,"Data16","","",24,null],[13,"DataPointers","","",24,null],[13,"Debug","","",24,null],[13,"ZeroFill","","",24,null],[13,"DataObjCMessageRefs","","",24,null],[13,"DataObjCCFStrings","","",24,null],[13,"DWARFDebugAbbrev","","",24,null],[13,"DWARFDebugAddr","","",24,null],[13,"DWARFDebugAranges","","",24,null],[13,"DWARFDebugFrame","","",24,null],[13,"DWARFDebugInfo","","",24,null],[13,"DWARFDebugLine","","",24,null],[13,"DWARFDebugLoc","","",24,null],[13,"DWARFDebugMacInfo","","",24,null],[13,"DWARFDebugMacro","","",24,null],[13,"DWARFDebugPubNames","","",24,null],[13,"DWARFDebugPubTypes","","",24,null],[13,"DWARFDebugRanges","","",24,null],[13,"DWARFDebugStr","","",24,null],[13,"DWARFDebugStrOffsets","","",24,null],[13,"DWARFAppleNames","","",24,null],[13,"DWARFAppleTypes","","",24,null],[13,"DWARFAppleNamespaces","","",24,null],[13,"DWARFAppleObjC","","",24,null],[13,"ELFSymbolTable","","",24,null],[13,"ELFDynamicSymbols","","",24,null],[13,"ELFRelocationEntries","","",24,null],[13,"ELFDynamicLinkInfo","","",24,null],[13,"EHFrame","","",24,null],[13,"ARMexidx","","",24,null],[13,"ARMextab","","",24,null],[13,"CompactUnwind","","",24,null],[13,"GoSymtab","","",24,null],[13,"AbsoluteAddress","","",24,null],[13,"Other","","",24,null],[4,"EmulateInstructionOptions","","",null,null],[13,"None","","",25,null],[13,"AutoAdvancePC","","",25,null],[13,"IgnoreConditions","","",25,null],[4,"FunctionNameType","","",null,null],[13,"None","","",26,null],[13,"Auto","","",26,null],[13,"Full","","",26,null],[13,"Base","","",26,null],[13,"Method","","",26,null],[13,"Selector","","",26,null],[4,"BasicType","","",null,null],[13,"Invalid","","",27,null],[13,"Void","","",27,null],[13,"Char","","",27,null],[13,"SignedChar","","",27,null],[13,"UnsignedChar","","",27,null],[13,"WChar","","",27,null],[13,"SignedWChar","","",27,null],[13,"UnsignedWChar","","",27,null],[13,"Char16","","",27,null],[13,"Char32","","",27,null],[13,"Short","","",27,null],[13,"UnsignedShort","","",27,null],[13,"Int","","",27,null],[13,"UnsignedInt","","",27,null],[13,"Long","","",27,null],[13,"UnsignedLong","","",27,null],[13,"LongLong","","",27,null],[13,"UnsignedLongLong","","",27,null],[13,"Int128","","",27,null],[13,"UnsignedInt128","","",27,null],[13,"Bool","","",27,null],[13,"Half","","",27,null],[13,"Float","","",27,null],[13,"Double","","",27,null],[13,"LongDouble","","",27,null],[13,"FloatComplex","","",27,null],[13,"DoubleComplex","","",27,null],[13,"LongDoubleComplex","","",27,null],[13,"ObjCID","","",27,null],[13,"ObjCClass","","",27,null],[13,"ObjCSel","","",27,null],[13,"NullPtr","","",27,null],[13,"Other","","",27,null],[4,"TemplateArgumentKind","","",null,null],[13,"Null","","",28,null],[13,"Type","","",28,null],[13,"Declaration","","",28,null],[13,"Integral","","",28,null],[13,"Template","","",28,null],[13,"TemplateExpansion","","",28,null],[13,"Expression","","",28,null],[13,"Pack","","",28,null],[4,"TypeOptions","","",null,null],[13,"None","","",29,null],[13,"Cascade","","",29,null],[13,"SkipPointers","","",29,null],[13,"SkipReferences","","",29,null],[13,"HideChildren","","",29,null],[13,"HideValue","","",29,null],[13,"ShowOneLiner","","",29,null],[13,"HideNames","","",29,null],[13,"NonCacheable","","",29,null],[13,"HideEmptyAggregates","","",29,null],[4,"FrameComparison","","",null,null],[13,"Invalid","","",30,null],[13,"Unknown","","",30,null],[13,"Equal","","",30,null],[13,"SameParent","","",30,null],[13,"Younger","","",30,null],[13,"Older","","",30,null],[4,"AddressClass","","",null,null],[13,"Invalid","","",31,null],[13,"Unknown","","",31,null],[13,"Code","","",31,null],[13,"CodeAlternateISA","","",31,null],[13,"Data","","",31,null],[13,"Debug","","",31,null],[13,"Runtime","","",31,null],[4,"QueueItemKind","","",null,null],[13,"Unknown","","",32,null],[13,"Function","","",32,null],[13,"Block","","",32,null],[4,"QueueKind","","",null,null],[13,"Unknown","","",33,null],[13,"Serial","","",33,null],[13,"Concurrent","","",33,null],[4,"ExpressionEvaluationPhase","","",null,null],[13,"EvaluationParse","","",34,null],[13,"EvaluationIRGen","","",34,null],[13,"EvaluationExecution","","",34,null],[13,"EvaluationComplete","","",34,null],[4,"WatchpointKind","","",null,null],[13,"eWatchpointKindRead","","",35,null],[13,"eWatchpointKindWrite","","",35,null],[4,"GdbSignal","","",null,null],[13,"BadAccess","","",36,null],[13,"BadInstruction","","",36,null],[13,"Arithmetic","","",36,null],[13,"Emulation","","",36,null],[13,"Software","","",36,null],[13,"Breakpoint","","",36,null],[4,"PathType","","",null,null],[13,"LLDBShlibDir","","",37,null],[13,"SupportExecutableDir","","",37,null],[13,"HeaderDir","","",37,null],[13,"PythonDir","","",37,null],[13,"LLDBSystemPlugins","","",37,null],[13,"LLDBUserPlugins","","",37,null],[13,"LLDBTempSystemDir","","",37,null],[13,"GlobalLLDBTempSystemDir","","",37,null],[13,"ClangDir","","",37,null],[4,"MemberFunctionKind","","",null,null],[13,"Unknown","","",38,null],[13,"Constructor","","",38,null],[13,"Destructor","","",38,null],[13,"InstanceMethod","","",38,null],[13,"StaticMethod","","",38,null],[4,"MatchType","","",null,null],[13,"Normal","","",39,null],[13,"Regex","","",39,null],[13,"StartsWith","","",39,null],[4,"TypeFlags","","",null,null],[13,"HasChildren","","",40,null],[13,"HasValue","","",40,null],[13,"IsArray","","",40,null],[13,"IsBlock","","",40,null],[13,"IsBuiltIn","","",40,null],[13,"IsClass","","",40,null],[13,"IsCPlusPlus","","",40,null],[13,"IsEnumeration","","",40,null],[13,"IsFuncPrototype","","",40,null],[13,"IsMember","","",40,null],[13,"IsObjC","","",40,null],[13,"IsPointer","","",40,null],[13,"IsReference","","",40,null],[13,"IsStructUnion","","",40,null],[13,"IsTemplate","","",40,null],[13,"IsTypedef","","",40,null],[13,"IsVector","","",40,null],[13,"IsScalar","","",40,null],[13,"IsInteger","","",40,null],[13,"IsFloat","","",40,null],[13,"IsComplex","","",40,null],[13,"IsSigned","","",40,null],[13,"InstanceIsPointer","","",40,null],[4,"CommandFlags","","",null,null],[13,"RequiresTarget","","",41,null],[13,"RequiresProcess","","",41,null],[13,"RequiresThread","","",41,null],[13,"RequiresFrame","","",41,null],[13,"RequiresRegContext","","",41,null],[13,"TryTargetAPILock","","",41,null],[13,"ProcessMustBeLaunched","","",41,null],[13,"ProcessMustBePaused","","",41,null],[4,"TypeSummaryCapping","","",null,null],[13,"SummaryCapped","","",42,null],[13,"SummaryUncapped","","",42,null],[5,"CreateSBAddress","","",null,null],[5,"CreateSBAddress2","","",null,null],[5,"CreateSBAddress3","","",null,null],[5,"DisposeSBAddress","","",null,null],[5,"SBAddressIsValid","","",null,null],[5,"SBAddressClear","","",null,null],[5,"SBAddressGetFileAddress","","",null,null],[5,"SBAddressGetLoadAddress","","",null,null],[5,"SBAddressSetAddress","","",null,null],[5,"SBAddressSetLoadAddress","","",null,null],[5,"SBAddressOffsetAddress","","",null,null],[5,"SBAddressGetDescription","","",null,null],[5,"SBAddressGetSymbolContext","","",null,null],[5,"SBAddressGetSection","","",null,null],[5,"SBAddressGetOffset","","",null,null],[5,"SBAddressGetModule","","",null,null],[5,"SBAddressGetCompileUnit","","",null,null],[5,"SBAddressGetFunction","","",null,null],[5,"SBAddressGetBlock","","",null,null],[5,"SBAddressGetSymbol","","",null,null],[5,"SBAddressGetLineEntry","","",null,null],[5,"SBAddressGetAddressClass","","",null,null],[5,"CreateSBAttachInfo","","",null,null],[5,"CreateSBAttachInfo2","","",null,null],[5,"CreateSBAttachInfo3","","",null,null],[5,"DisposeSBAttachInfo","","",null,null],[5,"SBAttachInfoGetProcessID","","",null,null],[5,"SBAttachInfoSetProcessID","","",null,null],[5,"SBAttachInfoSetExecutable","","",null,null],[5,"SBAttachInfoSetExecutable2","","",null,null],[5,"SBAttachInfoGetWaitForLaunch","","",null,null],[5,"SBAttachInfoSetWaitForLaunch","","",null,null],[5,"SBAttachInfoGetIgnoreExisting","","",null,null],[5,"SBAttachInfoSetIgnoreExisting","","",null,null],[5,"SBAttachInfoGetResumeCount","","",null,null],[5,"SBAttachInfoSetResumeCount","","",null,null],[5,"SBAttachInfoGetProcessPluginName","","",null,null],[5,"SBAttachInfoSetProcessPluginName","","",null,null],[5,"SBAttachInfoGetUserID","","",null,null],[5,"SBAttachInfoGetGroupID","","",null,null],[5,"SBAttachInfoUserIDIsValid","","",null,null],[5,"SBAttachInfoGroupIDIsValid","","",null,null],[5,"SBAttachInfoSetUserID","","",null,null],[5,"SBAttachInfoSetGroupID","","",null,null],[5,"SBAttachInfoGetEffectiveUserID","","",null,null],[5,"SBAttachInfoGetEffectiveGroupID","","",null,null],[5,"SBAttachInfoEffectiveUserIDIsValid","","",null,null],[5,"SBAttachInfoEffectiveGroupIDIsValid","","",null,null],[5,"SBAttachInfoSetEffectiveUserID","","",null,null],[5,"SBAttachInfoSetEffectiveGroupID","","",null,null],[5,"SBAttachInfoGetParentProcessID","","",null,null],[5,"SBAttachInfoSetParentProcessID","","",null,null],[5,"SBAttachInfoParentProcessIDIsValid","","",null,null],[5,"SBAttachInfoGetListener","","",null,null],[5,"SBAttachInfoSetListener","","",null,null],[5,"CreateSBBlock","","",null,null],[5,"DisposeSBBlock","","",null,null],[5,"SBBlockIsInlined","","",null,null],[5,"SBBlockIsValid","","",null,null],[5,"SBBlockGetInlinedName","","",null,null],[5,"SBBlockGetInlinedCallSiteFile","","",null,null],[5,"SBBlockGetInlinedCallSiteLine","","",null,null],[5,"SBBlockGetInlinedCallSiteColumn","","",null,null],[5,"SBBlockGetParent","","",null,null],[5,"SBBlockGetSibling","","",null,null],[5,"SBBlockGetFirstChild","","",null,null],[5,"SBBlockGetNumRanges","","",null,null],[5,"SBBlockGetRangeStartAddress","","",null,null],[5,"SBBlockGetRangeEndAddress","","",null,null],[5,"SBBlockGetRangeIndexForBlockAddress","","",null,null],[5,"SBBlockGetVariables","","",null,null],[5,"SBBlockGetVariables2","","",null,null],[5,"SBBlockGetContainingInlinedBlock","","",null,null],[5,"SBBlockGetDescription","","",null,null],[5,"CreateSBBreakpoint","","",null,null],[5,"DisposeSBBreakpoint","","",null,null],[5,"SBBreakpointGetID","","",null,null],[5,"SBBreakpointIsValid","","",null,null],[5,"SBBreakpointClearAllBreakpointSites","","",null,null],[5,"SBBreakpointFindLocationByAddress","","",null,null],[5,"SBBreakpointFindLocationIDByAddress","","",null,null],[5,"SBBreakpointFindLocationByID","","",null,null],[5,"SBBreakpointGetLocationAtIndex","","",null,null],[5,"SBBreakpointSetEnabled","","",null,null],[5,"SBBreakpointIsEnabled","","",null,null],[5,"SBBreakpointSetOneShot","","",null,null],[5,"SBBreakpointIsOneShot","","",null,null],[5,"SBBreakpointIsInternal","","",null,null],[5,"SBBreakpointGetHitCount","","",null,null],[5,"SBBreakpointSetIgnoreCount","","",null,null],[5,"SBBreakpointGetIgnoreCount","","",null,null],[5,"SBBreakpointSetCondition","","",null,null],[5,"SBBreakpointGetCondition","","",null,null],[5,"SBBreakpointSetThreadID","","",null,null],[5,"SBBreakpointGetThreadID","","",null,null],[5,"SBBreakpointSetThreadIndex","","",null,null],[5,"SBBreakpointGetThreadIndex","","",null,null],[5,"SBBreakpointSetThreadName","","",null,null],[5,"SBBreakpointGetThreadName","","",null,null],[5,"SBBreakpointSetQueueName","","",null,null],[5,"SBBreakpointGetQueueName","","",null,null],[5,"SBBreakpointSetScriptCallbackFunction","","",null,null],[5,"SBBreakpointSetScriptCallbackBody","","",null,null],[5,"SBBreakpointAddName","","",null,null],[5,"SBBreakpointRemoveName","","",null,null],[5,"SBBreakpointMatchesName","","",null,null],[5,"SBBreakpointGetNames","","",null,null],[5,"SBBreakpointGetNumResolvedLocations","","",null,null],[5,"SBBreakpointGetNumLocations","","",null,null],[5,"SBBreakpointGetDescription","","",null,null],[5,"SBBreakpointEventIsBreakpointEvent","","",null,null],[5,"SBBreakpointGetBreakpointEventTypeFromEvent","","",null,null],[5,"SBBreakpointGetBreakpointFromEvent","","",null,null],[5,"SBBreakpointGetBreakpointLocationAtIndexFromEvent","","",null,null],[5,"SBBreakpointGetNumBreakpointLocationsFromEvent","","",null,null],[5,"CreateSBBreakpointLocation","","",null,null],[5,"DisposeSBBreakpointLocation","","",null,null],[5,"SBBreakpointLocationGetID","","",null,null],[5,"SBBreakpointLocationIsValid","","",null,null],[5,"SBBreakpointLocationGetAddress","","",null,null],[5,"SBBreakpointLocationGetLoadAddress","","",null,null],[5,"SBBreakpointLocationSetEnabled","","",null,null],[5,"SBBreakpointLocationIsEnabled","","",null,null],[5,"SBBreakpointLocationGetIgnoreCount","","",null,null],[5,"SBBreakpointLocationSetIgnoreCount","","",null,null],[5,"SBBreakpointLocationSetCondition","","",null,null],[5,"SBBreakpointLocationGetCondition","","",null,null],[5,"SBBreakpointLocationSetScriptCallbackFunction","","",null,null],[5,"SBBreakpointLocationSetScriptCallbackBody","","",null,null],[5,"SBBreakpointLocationSetThreadID","","",null,null],[5,"SBBreakpointLocationGetThreadID","","",null,null],[5,"SBBreakpointLocationSetThreadIndex","","",null,null],[5,"SBBreakpointLocationGetThreadIndex","","",null,null],[5,"SBBreakpointLocationSetThreadName","","",null,null],[5,"SBBreakpointLocationGetThreadName","","",null,null],[5,"SBBreakpointLocationSetQueueName","","",null,null],[5,"SBBreakpointLocationGetQueueName","","",null,null],[5,"SBBreakpointLocationIsResolved","","",null,null],[5,"SBBreakpointLocationGetDescription","","",null,null],[5,"SBBreakpointLocationGetBreakpoint","","",null,null],[5,"CreateSBBroadcaster","","",null,null],[5,"CreateSBBroadcaster2","","",null,null],[5,"DisposeSBBroadcaster","","",null,null],[5,"SBBroadcasterIsValid","","",null,null],[5,"SBBroadcasterClear","","",null,null],[5,"SBBroadcasterBroadcastEventByType","","",null,null],[5,"SBBroadcasterBroadcastEvent","","",null,null],[5,"SBBroadcasterAddInitialEventsToListener","","",null,null],[5,"SBBroadcasterAddListener","","",null,null],[5,"SBBroadcasterGetName","","",null,null],[5,"SBBroadcasterEventTypeHasListeners","","",null,null],[5,"SBBroadcasterRemoveListener","","",null,null],[5,"CreateSBCommandInterpreterRunOptions","","",null,null],[5,"DisposeSBCommandInterpreterRunOptions","","",null,null],[5,"SBCommandInterpreterRunOptionsGetStopOnContinue","","",null,null],[5,"SBCommandInterpreterRunOptionsSetStopOnContinue","","",null,null],[5,"SBCommandInterpreterRunOptionsGetStopOnError","","",null,null],[5,"SBCommandInterpreterRunOptionsSetStopOnError","","",null,null],[5,"SBCommandInterpreterRunOptionsGetStopOnCrash","","",null,null],[5,"SBCommandInterpreterRunOptionsSetStopOnCrash","","",null,null],[5,"SBCommandInterpreterRunOptionsGetEchoCommands","","",null,null],[5,"SBCommandInterpreterRunOptionsSetEchoCommands","","",null,null],[5,"SBCommandInterpreterRunOptionsGetPrintResults","","",null,null],[5,"SBCommandInterpreterRunOptionsSetPrintResults","","",null,null],[5,"SBCommandInterpreterRunOptionsGetAddToHistory","","",null,null],[5,"SBCommandInterpreterRunOptionsSetAddToHistory","","",null,null],[5,"CreateSBCommandInterpreterRunOptions2","","",null,null],[5,"DisposeSBCommandInterpreter","","",null,null],[5,"SBCommandInterpreterGetArgumentTypeAsCString","","",null,null],[5,"SBCommandInterpreterGetArgumentDescriptionAsCString","","",null,null],[5,"SBCommandInterpreterEventIsCommandInterpreterEvent","","",null,null],[5,"SBCommandInterpreterIsValid","","",null,null],[5,"SBCommandInterpreterCommandExists","","",null,null],[5,"SBCommandInterpreterAliasExists","","",null,null],[5,"SBCommandInterpreterGetBroadcaster","","",null,null],[5,"SBCommandInterpreterGetBroadcasterClass","","",null,null],[5,"SBCommandInterpreterHasCommands","","",null,null],[5,"SBCommandInterpreterHasAliases","","",null,null],[5,"SBCommandInterpreterHasAliasOptions","","",null,null],[5,"SBCommandInterpreterGetProcess","","",null,null],[5,"SBCommandInterpreterGetDebugger","","",null,null],[5,"SBCommandInterpreterAddMultiwordCommand","","",null,null],[5,"SBCommandInterpreterAddCommand","","",null,null],[5,"SBCommandInterpreterSourceInitFileInHomeDirectory","","",null,null],[5,"SBCommandInterpreterSourceInitFileInCurrentWorkingDirectory","","",null,null],[5,"SBCommandInterpreterHandleCommand","","",null,null],[5,"SBCommandInterpreterHandleCommand2","","",null,null],[5,"SBCommandInterpreterHandleCommandsFromFile","","",null,null],[5,"SBCommandInterpreterHandleCompletion","","",null,null],[5,"SBCommandInterpreterHandleCompletion2","","",null,null],[5,"SBCommandInterpreterIsActive","","",null,null],[5,"SBCommandInterpreterGetIOHandlerControlSequence","","",null,null],[5,"SBCommandInterpreterGetPromptOnQuit","","",null,null],[5,"SBCommandInterpreterSetPromptOnQuit","","",null,null],[5,"SBCommandPluginInterfaceDoExecute","","",null,null],[5,"DisposeSBCommandPluginInterface","","",null,null],[5,"CreateSBCommand","","",null,null],[5,"SBCommandIsValid","","",null,null],[5,"SBCommandGetName","","",null,null],[5,"SBCommandGetHelp","","",null,null],[5,"SBCommandGetHelpLong","","",null,null],[5,"SBCommandSetHelp","","",null,null],[5,"SBCommandSetHelpLong","","",null,null],[5,"SBCommandAddMultiwordCommand","","",null,null],[5,"SBCommandAddCommand","","",null,null],[5,"DisposeSBCommand","","",null,null],[5,"CreateSBCommandReturnObject","","",null,null],[5,"SBCommandReturnObjectRelease","","",null,null],[5,"DisposeSBCommandReturnObject","","",null,null],[5,"SBCommandReturnObjectIsValid","","",null,null],[5,"SBCommandReturnObjectGetOutput","","",null,null],[5,"SBCommandReturnObjectGetError","","",null,null],[5,"SBCommandReturnObjectPutOutput","","",null,null],[5,"SBCommandReturnObjectGetOutputSize","","",null,null],[5,"SBCommandReturnObjectGetErrorSize","","",null,null],[5,"SBCommandReturnObjectPutError","","",null,null],[5,"SBCommandReturnObjectClear","","",null,null],[5,"SBCommandReturnObjectGetStatus","","",null,null],[5,"SBCommandReturnObjectSetStatus","","",null,null],[5,"SBCommandReturnObjectSucceeded","","",null,null],[5,"SBCommandReturnObjectHasResult","","",null,null],[5,"SBCommandReturnObjectAppendMessage","","",null,null],[5,"SBCommandReturnObjectAppendWarning","","",null,null],[5,"SBCommandReturnObjectGetDescription","","",null,null],[5,"SBCommandReturnObjectSetImmediateOutputFile","","",null,null],[5,"SBCommandReturnObjectSetImmediateErrorFile","","",null,null],[5,"SBCommandReturnObjectPutCString","","",null,null],[5,"SBCommandReturnObjectPrintf","","",null,null],[5,"SBCommandReturnObjectGetOutput2","","",null,null],[5,"SBCommandReturnObjectGetError2","","",null,null],[5,"SBCommandReturnObjectSetError","","",null,null],[5,"SBCommandReturnObjectSetError2","","",null,null],[5,"CreateSBCommunication","","",null,null],[5,"CreateSBCommunication2","","",null,null],[5,"DisposeSBCommunication","","",null,null],[5,"SBCommunicationIsValid","","",null,null],[5,"SBCommunicationGetBroadcaster","","",null,null],[5,"SBCommunicationGetBroadcasterClass","","",null,null],[5,"SBCommunicationAdoptFileDesriptor","","",null,null],[5,"SBCommunicationConnect","","",null,null],[5,"SBCommunicationDisconnect","","",null,null],[5,"SBCommunicationIsConnected","","",null,null],[5,"SBCommunicationGetCloseOnEOF","","",null,null],[5,"SBCommunicationSetCloseOnEOF","","",null,null],[5,"SBCommunicationRead","","",null,null],[5,"SBCommunicationWrite","","",null,null],[5,"SBCommunicationReadThreadStart","","",null,null],[5,"SBCommunicationReadThreadStop","","",null,null],[5,"SBCommunicationReadThreadIsRunning","","",null,null],[5,"SBCommunicationSetReadThreadBytesReceivedCallback","","",null,null],[5,"CreateSBCompileUnit","","",null,null],[5,"DisposeSBCompileUnit","","",null,null],[5,"SBCompileUnitIsValid","","",null,null],[5,"SBCompileUnitGetFileSpec","","",null,null],[5,"SBCompileUnitGetNumLineEntries","","",null,null],[5,"SBCompileUnitGetLineEntryAtIndex","","",null,null],[5,"SBCompileUnitFindLineEntryIndex","","",null,null],[5,"SBCompileUnitFindLineEntryIndex2","","",null,null],[5,"SBCompileUnitGetSupportFileAtIndex","","",null,null],[5,"SBCompileUnitGetNumSupportFiles","","",null,null],[5,"SBCompileUnitFindSupportFileIndex","","",null,null],[5,"SBCompileUnitGetTypes","","",null,null],[5,"SBCompileUnitGetLanguage","","",null,null],[5,"SBCompileUnitGetDescription","","",null,null],[5,"CreateSBData","","",null,null],[5,"DisposeSBData","","",null,null],[5,"SBDataGetAddressByteSize","","",null,null],[5,"SBDataSetAddressByteSize","","",null,null],[5,"SBDataClear","","",null,null],[5,"SBDataIsValid","","",null,null],[5,"SBDataGetByteSize","","",null,null],[5,"SBDataGetByteOrder","","",null,null],[5,"SBDataSetByteOrder","","",null,null],[5,"SBDataGetFloat","","",null,null],[5,"SBDataGetDouble","","",null,null],[5,"SBDataGetLongDouble","","",null,null],[5,"SBDataGetAddress","","",null,null],[5,"SBDataGetUnsignedInt8","","",null,null],[5,"SBDataGetUnsignedInt16","","",null,null],[5,"SBDataGetUnsignedInt32","","",null,null],[5,"SBDataGetUnsignedInt64","","",null,null],[5,"SBDataGetSignedInt8","","",null,null],[5,"SBDataGetSignedInt16","","",null,null],[5,"SBDataGetSignedInt32","","",null,null],[5,"SBDataGetSignedInt64","","",null,null],[5,"SBDataGetString","","",null,null],[5,"SBDataReadRawData","","",null,null],[5,"SBDataGetDescription","","",null,null],[5,"SBDataSetData","","",null,null],[5,"SBDataAppend","","",null,null],[5,"SBDataCreateDataFromCString","","",null,null],[5,"SBDataCreateDataFromUInt64Array","","",null,null],[5,"SBDataCreateDataFromUInt32Array","","",null,null],[5,"SBDataCreateDataFromSInt64Array","","",null,null],[5,"SBDataCreateDataFromSInt32Array","","",null,null],[5,"SBDataCreateDataFromDoubleArray","","",null,null],[5,"SBDataSetDataFromCString","","",null,null],[5,"SBDataSetDataFromUInt64Array","","",null,null],[5,"SBDataSetDataFromUInt32Array","","",null,null],[5,"SBDataSetDataFromSInt64Array","","",null,null],[5,"SBDataSetDataFromSInt32Array","","",null,null],[5,"SBDataSetDataFromDoubleArray","","",null,null],[5,"CreateSBInputReader","","",null,null],[5,"DisposeSBInputReader","","",null,null],[5,"SBInputReaderSetIsDone","","",null,null],[5,"SBInputReaderIsActive","","",null,null],[5,"SBDebuggerInitialize","","",null,null],[5,"SBDebuggerTerminate","","",null,null],[5,"SBDebuggerCreate","","",null,null],[5,"SBDebuggerCreate2","","",null,null],[5,"SBDebuggerDestroy","","",null,null],[5,"SBDebuggerMemoryPressureDetected","","",null,null],[5,"CreateSBDebugger","","",null,null],[5,"DisposeSBDebugger","","",null,null],[5,"SBDebuggerIsValid","","",null,null],[5,"SBDebuggerClear","","",null,null],[5,"SBDebuggerSetAsync","","",null,null],[5,"SBDebuggerGetAsync","","",null,null],[5,"SBDebuggerSkipLLDBInitFiles","","",null,null],[5,"SBDebuggerSkipAppInitFiles","","",null,null],[5,"SBDebuggerSetInputFileHandle","","",null,null],[5,"SBDebuggerSetOutputFileHandle","","",null,null],[5,"SBDebuggerSetErrorFileHandle","","",null,null],[5,"SBDebuggerGetInputFileHandle","","",null,null],[5,"SBDebuggerGetOutputFileHandle","","",null,null],[5,"SBDebuggerGetErrorFileHandle","","",null,null],[5,"SBDebuggerSaveInputTerminalState","","",null,null],[5,"SBDebuggerRestoreInputTerminalState","","",null,null],[5,"SBDebuggerGetCommandInterpreter","","",null,null],[5,"SBDebuggerHandleCommand","","",null,null],[5,"SBDebuggerGetListener","","",null,null],[5,"SBDebuggerHandleProcessEvent","","",null,null],[5,"SBDebuggerCreateTarget","","",null,null],[5,"SBDebuggerCreateTargetWithFileAndTargetTriple","","",null,null],[5,"SBDebuggerCreateTargetWithFileAndArch","","",null,null],[5,"SBDebuggerCreateTarget2","","",null,null],[5,"SBDebuggerDeleteTarget","","",null,null],[5,"SBDebuggerGetTargetAtIndex","","",null,null],[5,"SBDebuggerGetIndexOfTarget","","",null,null],[5,"SBDebuggerFindTargetWithProcessID","","",null,null],[5,"SBDebuggerFindTargetWithFileAndArch","","",null,null],[5,"SBDebuggerGetNumTargets","","",null,null],[5,"SBDebuggerGetSelectedTarget","","",null,null],[5,"SBDebuggerSetSelectedTarget","","",null,null],[5,"SBDebuggerGetSelectedPlatform","","",null,null],[5,"SBDebuggerSetSelectedPlatform","","",null,null],[5,"SBDebuggerGetSourceManager","","",null,null],[5,"SBDebuggerSetCurrentPlatform","","",null,null],[5,"SBDebuggerSetCurrentPlatformSDKRoot","","",null,null],[5,"SBDebuggerSetUseExternalEditor","","",null,null],[5,"SBDebuggerGetUseExternalEditor","","",null,null],[5,"SBDebuggerSetUseColor","","",null,null],[5,"SBDebuggerGetUseColor","","",null,null],[5,"SBDebuggerGetDefaultArchitecture","","",null,null],[5,"SBDebuggerSetDefaultArchitecture","","",null,null],[5,"SBDebuggerGetScriptingLanguage","","",null,null],[5,"SBDebuggerGetVersionString","","",null,null],[5,"SBDebuggerStateAsCString","","",null,null],[5,"SBDebuggerStateIsRunningState","","",null,null],[5,"SBDebuggerStateIsStoppedState","","",null,null],[5,"SBDebuggerEnableLog","","",null,null],[5,"SBDebuggerDispatchInput","","",null,null],[5,"SBDebuggerDispatchInput2","","",null,null],[5,"SBDebuggerDispatchInputInterrupt","","",null,null],[5,"SBDebuggerDispatchInputEndOfFile","","",null,null],[5,"SBDebuggerPushInputReader","","",null,null],[5,"SBDebuggerGetInstanceName","","",null,null],[5,"SBDebuggerFindDebuggerWithID","","",null,null],[5,"SBDebuggerSetInternalVariable","","",null,null],[5,"SBDebuggerGetInternalVariableValue","","",null,null],[5,"SBDebuggerGetDescription","","",null,null],[5,"SBDebuggerGetTerminalWidth","","",null,null],[5,"SBDebuggerSetTerminalWidth","","",null,null],[5,"SBDebuggerGetID","","",null,null],[5,"SBDebuggerGetPrompt","","",null,null],[5,"SBDebuggerSetPrompt","","",null,null],[5,"SBDebuggerGetScriptLanguage","","",null,null],[5,"SBDebuggerSetScriptLanguage","","",null,null],[5,"SBDebuggerGetCloseInputOnEOF","","",null,null],[5,"SBDebuggerSetCloseInputOnEOF","","",null,null],[5,"SBDebuggerGetCategory","","",null,null],[5,"SBDebuggerCreateCategory","","",null,null],[5,"SBDebuggerDeleteCategory","","",null,null],[5,"SBDebuggerGetNumCategories","","",null,null],[5,"SBDebuggerGetCategoryAtIndex","","",null,null],[5,"SBDebuggerGetDefaultCategory","","",null,null],[5,"SBDebuggerGetFormatForType","","",null,null],[5,"SBDebuggerGetSummaryForType","","",null,null],[5,"SBDebuggerGetFilterForType","","",null,null],[5,"SBDebuggerGetSyntheticForType","","",null,null],[5,"SBDebuggerRunCommandInterpreter","","",null,null],[5,"SBDebuggerRunCommandInterpreter2","","",null,null],[5,"CreateSBDeclaration","","",null,null],[5,"DisposeSBDeclaration","","",null,null],[5,"SBDeclarationIsValid","","",null,null],[5,"SBDeclarationGetFileSpec","","",null,null],[5,"SBDeclarationGetLine","","",null,null],[5,"SBDeclarationGetColumn","","",null,null],[5,"SBDeclarationSetFileSpec","","",null,null],[5,"SBDeclarationSetLine","","",null,null],[5,"SBDeclarationSetColumn","","",null,null],[5,"SBDeclarationGetDescription","","",null,null],[5,"CreateSBError","","",null,null],[5,"DisposeSBError","","",null,null],[5,"SBErrorGetCString","","",null,null],[5,"SBErrorClear","","",null,null],[5,"SBErrorFail","","",null,null],[5,"SBErrorSuccess","","",null,null],[5,"SBErrorGetError","","",null,null],[5,"SBErrorGetType","","",null,null],[5,"SBErrorSetError","","",null,null],[5,"SBErrorSetErrorToErrno","","",null,null],[5,"SBErrorSetErrorToGenericError","","",null,null],[5,"SBErrorSetErrorString","","",null,null],[5,"SBErrorSetErrorStringWithFormat","","",null,null],[5,"SBErrorIsValid","","",null,null],[5,"SBErrorGetDescription","","",null,null],[5,"CreateSBEvent","","",null,null],[5,"CreateSBEvent2","","",null,null],[5,"DisposeSBEvent","","",null,null],[5,"SBEventIsValid","","",null,null],[5,"SBEventGetDataFlavor","","",null,null],[5,"SBEventGetType","","",null,null],[5,"SBEventGetBroadcaster","","",null,null],[5,"SBEventGetBroadcasterClass","","",null,null],[5,"SBEventBroadcasterMatchesPtr","","",null,null],[5,"SBEventBroadcasterMatchesRef","","",null,null],[5,"SBEventClear","","",null,null],[5,"SBEventGetCStringFromEvent","","",null,null],[5,"SBEventGetDescription","","",null,null],[5,"CreateSBExecutionContext","","",null,null],[5,"CreateSBExecutionContext2","","",null,null],[5,"CreateSBExecutionContext3","","",null,null],[5,"CreateSBExecutionContext4","","",null,null],[5,"CreateSBExecutionContext5","","",null,null],[5,"DisposeSBExecutionContext","","",null,null],[5,"SBExecutionContextGetTarget","","",null,null],[5,"SBExecutionContextGetProcess","","",null,null],[5,"SBExecutionContextGetThread","","",null,null],[5,"SBExecutionContextGetFrame","","",null,null],[5,"CreateSBExpressionOptions","","",null,null],[5,"DisposeSBExpressionOptions","","",null,null],[5,"SBExpressionOptionsGetCoerceResultToId","","",null,null],[5,"SBExpressionOptionsSetCoerceResultToId","","",null,null],[5,"SBExpressionOptionsGetUnwindOnError","","",null,null],[5,"SBExpressionOptionsSetUnwindOnError","","",null,null],[5,"SBExpressionOptionsGetIgnoreBreakpoints","","",null,null],[5,"SBExpressionOptionsSetIgnoreBreakpoints","","",null,null],[5,"SBExpressionOptionsGetFetchDynamicValue","","",null,null],[5,"SBExpressionOptionsSetFetchDynamicValue","","",null,null],[5,"SBExpressionOptionsGetTimeoutInMicroSeconds","","",null,null],[5,"SBExpressionOptionsSetTimeoutInMicroSeconds","","",null,null],[5,"SBExpressionOptionsGetOneThreadTimeoutInMicroSeconds","","",null,null],[5,"SBExpressionOptionsSetOneThreadTimeoutInMicroSeconds","","",null,null],[5,"SBExpressionOptionsGetTryAllThreads","","",null,null],[5,"SBExpressionOptionsSetTryAllThreads","","",null,null],[5,"SBExpressionOptionsGetStopOthers","","",null,null],[5,"SBExpressionOptionsSetStopOthers","","",null,null],[5,"SBExpressionOptionsGetTrapExceptions","","",null,null],[5,"SBExpressionOptionsSetTrapExceptions","","",null,null],[5,"SBExpressionOptionsSetLanguage","","",null,null],[5,"SBExpressionOptionsGetGenerateDebugInfo","","",null,null],[5,"SBExpressionOptionsSetGenerateDebugInfo","","",null,null],[5,"SBExpressionOptionsGetSuppressPersistentResult","","",null,null],[5,"SBExpressionOptionsSetSuppressPersistentResult","","",null,null],[5,"CreateSBFileSpec","","",null,null],[5,"CreateSBFileSpec2","","",null,null],[5,"CreateSBFileSpec3","","",null,null],[5,"DisposeSBFileSpec","","",null,null],[5,"SBFileSpecIsValid","","",null,null],[5,"SBFileSpecExists","","",null,null],[5,"SBFileSpecResolveExecutableLocation","","",null,null],[5,"SBFileSpecGetFilename","","",null,null],[5,"SBFileSpecGetDirectory","","",null,null],[5,"SBFileSpecSetFilename","","",null,null],[5,"SBFileSpecSetDirectory","","",null,null],[5,"SBFileSpecGetPath","","",null,null],[5,"SBFileSpecResolvePath","","",null,null],[5,"SBFileSpecGetDescription","","",null,null],[5,"CreateSBFileSpecList","","",null,null],[5,"DisposeSBFileSpecList","","",null,null],[5,"SBFileSpecListGetSize","","",null,null],[5,"SBFileSpecListGetDescription","","",null,null],[5,"SBFileSpecListAppend","","",null,null],[5,"SBFileSpecListAppendIfUnique","","",null,null],[5,"SBFileSpecListClear","","",null,null],[5,"SBFileSpecListFindFileIndex","","",null,null],[5,"SBFileSpecListGetFileSpecAtIndex","","",null,null],[5,"CreateSBFrame","","",null,null],[5,"DisposeSBFrame","","",null,null],[5,"SBFrameIsEqual","","",null,null],[5,"SBFrameIsValid","","",null,null],[5,"SBFrameGetFrameID","","",null,null],[5,"SBFrameGetCFA","","",null,null],[5,"SBFrameGetPC","","",null,null],[5,"SBFrameSetPC","","",null,null],[5,"SBFrameGetSP","","",null,null],[5,"SBFrameGetFP","","",null,null],[5,"SBFrameGetPCAddress","","",null,null],[5,"SBFrameGetSymbolContext","","",null,null],[5,"SBFrameGetModule","","",null,null],[5,"SBFrameGetCompileUnit","","",null,null],[5,"SBFrameGetFunction","","",null,null],[5,"SBFrameGetSymbol","","",null,null],[5,"SBFrameGetBlock","","",null,null],[5,"SBFrameGetFunctionName","","",null,null],[5,"SBFrameGetDisplayFunctionName","","",null,null],[5,"SBFrameIsInlined","","",null,null],[5,"SBFrameEvaluateExpression","","",null,null],[5,"SBFrameGetFrameBlock","","",null,null],[5,"SBFrameGetLineEntry","","",null,null],[5,"SBFrameGetThread","","",null,null],[5,"SBFrameDisassemble","","",null,null],[5,"SBFrameClear","","",null,null],[5,"SBFrameGetVariables","","",null,null],[5,"SBFrameGetRegisters","","",null,null],[5,"SBFrameFindRegister","","",null,null],[5,"SBFrameFindVariable","","",null,null],[5,"SBFrameFindVariable2","","",null,null],[5,"SBFrameGetValueForVariablePath","","",null,null],[5,"SBFrameGetValueForVariablePath2","","",null,null],[5,"SBFrameFindValue","","",null,null],[5,"SBFrameFindValue2","","",null,null],[5,"SBFrameGetDescription","","",null,null],[5,"CreateSBFunction","","",null,null],[5,"DisposeSBFunction","","",null,null],[5,"SBFunctionIsValid","","",null,null],[5,"SBFunctionGetName","","",null,null],[5,"SBFunctionGetDisplayName","","",null,null],[5,"SBFunctionGetMangledName","","",null,null],[5,"SBFunctionGetInstructions","","",null,null],[5,"SBFunctionGetInstructions2","","",null,null],[5,"SBFunctionGetStartAddress","","",null,null],[5,"SBFunctionGetEndAddress","","",null,null],[5,"SBFunctionGetPrologueByteSize","","",null,null],[5,"SBFunctionGetType","","",null,null],[5,"SBFunctionGetBlock","","",null,null],[5,"SBFunctionGetLanguage","","",null,null],[5,"SBFunctionGetIsOptimized","","",null,null],[5,"SBFunctionGetDescription","","",null,null],[5,"SBHostOSGetProgramFileSpec","","",null,null],[5,"SBHostOSGetLLDBPythonPath","","",null,null],[5,"SBHostOSGetLLDBPath","","",null,null],[5,"CreateSBInstruction","","",null,null],[5,"DisposeSBInstruction","","",null,null],[5,"SBInstructionIsValid","","",null,null],[5,"SBInstructionGetAddress","","",null,null],[5,"SBInstructionGetAddressClass","","",null,null],[5,"SBInstructionGetMnemonic","","",null,null],[5,"SBInstructionGetOperands","","",null,null],[5,"SBInstructionGetComment","","",null,null],[5,"SBInstructionGetData","","",null,null],[5,"SBInstructionGetByteSize","","",null,null],[5,"SBInstructionDoesBranch","","",null,null],[5,"SBInstructionPrint","","",null,null],[5,"SBInstructionGetDescription","","",null,null],[5,"SBInstructionEmulateWithFrame","","",null,null],[5,"SBInstructionDumpEmulation","","",null,null],[5,"SBInstructionTestEmulation","","",null,null],[5,"CreateSBInstructionList","","",null,null],[5,"DisposeSBInstructionList","","",null,null],[5,"SBInstructionListIsValid","","",null,null],[5,"SBInstructionListGetSize","","",null,null],[5,"SBInstructionListGetInstructionAtIndex","","",null,null],[5,"SBInstructionListClear","","",null,null],[5,"SBInstructionListAppendInstruction","","",null,null],[5,"SBInstructionListPrint","","",null,null],[5,"SBInstructionListGetDescription","","",null,null],[5,"SBInstructionListDumpEmulationForAllInstructions","","",null,null],[5,"CreateSBLaunchInfo","","",null,null],[5,"DisposeSBLaunchInfo","","",null,null],[5,"SBLaunchInfoGetProcessID","","",null,null],[5,"SBLaunchInfoGetUserID","","",null,null],[5,"SBLaunchInfoGetGroupID","","",null,null],[5,"SBLaunchInfoUserIDIsValid","","",null,null],[5,"SBLaunchInfoGroupIDIsValid","","",null,null],[5,"SBLaunchInfoSetUserID","","",null,null],[5,"SBLaunchInfoSetGroupID","","",null,null],[5,"SBLaunchInfoGetExecutableFile","","",null,null],[5,"SBLaunchInfoSetExecutableFile","","",null,null],[5,"SBLaunchInfoGetListener","","",null,null],[5,"SBLaunchInfoSetListener","","",null,null],[5,"SBLaunchInfoGetNumArguments","","",null,null],[5,"SBLaunchInfoGetArgumentAtIndex","","",null,null],[5,"SBLaunchInfoSetArguments","","",null,null],[5,"SBLaunchInfoGetNumEnvironmentEntries","","",null,null],[5,"SBLaunchInfoGetEnvironmentEntryAtIndex","","",null,null],[5,"SBLaunchInfoSetEnvironmentEntries","","",null,null],[5,"SBLaunchInfoClear","","",null,null],[5,"SBLaunchInfoGetWorkingDirectory","","",null,null],[5,"SBLaunchInfoSetWorkingDirectory","","",null,null],[5,"SBLaunchInfoGetLaunchFlags","","",null,null],[5,"SBLaunchInfoSetLaunchFlags","","",null,null],[5,"SBLaunchInfoGetProcessPluginName","","",null,null],[5,"SBLaunchInfoSetProcessPluginName","","",null,null],[5,"SBLaunchInfoGetShell","","",null,null],[5,"SBLaunchInfoSetShell","","",null,null],[5,"SBLaunchInfoGetShellExpandArguments","","",null,null],[5,"SBLaunchInfoSetShellExpandArguments","","",null,null],[5,"SBLaunchInfoGetResumeCount","","",null,null],[5,"SBLaunchInfoSetResumeCount","","",null,null],[5,"SBLaunchInfoAddCloseFileAction","","",null,null],[5,"SBLaunchInfoAddDuplicateFileAction","","",null,null],[5,"SBLaunchInfoAddOpenFileAction","","",null,null],[5,"SBLaunchInfoAddSuppressFileAction","","",null,null],[5,"SBLaunchInfoSetLaunchEventData","","",null,null],[5,"SBLaunchInfoGetLaunchEventData","","",null,null],[5,"SBLaunchInfoGetDetachOnError","","",null,null],[5,"SBLaunchInfoSetDetachOnError","","",null,null],[5,"CreateSBLineEntry","","",null,null],[5,"DisposeSBLineEntry","","",null,null],[5,"SBLineEntryGetStartAddress","","",null,null],[5,"SBLineEntryGetEndAddress","","",null,null],[5,"SBLineEntryIsValid","","",null,null],[5,"SBLineEntryGetFileSpec","","",null,null],[5,"SBLineEntryGetLine","","",null,null],[5,"SBLineEntryGetColumn","","",null,null],[5,"SBLineEntrySetFileSpec","","",null,null],[5,"SBLineEntrySetLine","","",null,null],[5,"SBLineEntrySetColumn","","",null,null],[5,"SBLineEntryGetDescription","","",null,null],[5,"CreateSBListener","","",null,null],[5,"CreateSBListener2","","",null,null],[5,"DisposeSBListener","","",null,null],[5,"SBListenerAddEvent","","",null,null],[5,"SBListenerClear","","",null,null],[5,"SBListenerIsValid","","",null,null],[5,"SBListenerStartListeningForEventClass","","",null,null],[5,"SBListenerStopListeningForEventClass","","",null,null],[5,"SBListenerStartListeningForEvents","","",null,null],[5,"SBListenerStopListeningForEvents","","",null,null],[5,"SBListenerWaitForEvent","","",null,null],[5,"SBListenerWaitForEventForBroadcaster","","",null,null],[5,"SBListenerWaitForEventForBroadcasterWithType","","",null,null],[5,"SBListenerPeekAtNextEvent","","",null,null],[5,"SBListenerPeekAtNextEventForBroadcaster","","",null,null],[5,"SBListenerPeekAtNextEventForBroadcasterWithType","","",null,null],[5,"SBListenerGetNextEvent","","",null,null],[5,"SBListenerGetNextEventForBroadcaster","","",null,null],[5,"SBListenerGetNextEventForBroadcasterWithType","","",null,null],[5,"SBListenerHandleBroadcastEvent","","",null,null],[5,"CreateSBModule","","",null,null],[5,"CreateSBModule2","","",null,null],[5,"CreateSBModule3","","",null,null],[5,"DisposeSBModule","","",null,null],[5,"SBModuleIsValid","","",null,null],[5,"SBModuleClear","","",null,null],[5,"SBModuleGetFileSpec","","",null,null],[5,"SBModuleGetPlatformFileSpec","","",null,null],[5,"SBModuleSetPlatformFileSpec","","",null,null],[5,"SBModuleGetRemoteInstallFileSpec","","",null,null],[5,"SBModuleSetRemoteInstallFileSpec","","",null,null],[5,"SBModuleGetByteOrder","","",null,null],[5,"SBModuleGetAddressByteSize","","",null,null],[5,"SBModuleGetTriple","","",null,null],[5,"SBModuleGetUUIDBytes","","",null,null],[5,"SBModuleGetUUIDString","","",null,null],[5,"SBModuleFindSection","","",null,null],[5,"SBModuleResolveFileAddress","","",null,null],[5,"SBModuleResolveSymbolContextForAddress","","",null,null],[5,"SBModuleGetDescription","","",null,null],[5,"SBModuleGetNumCompileUnits","","",null,null],[5,"SBModuleGetCompileUnitAtIndex","","",null,null],[5,"SBModuleGetNumSymbols","","",null,null],[5,"SBModuleGetSymbolAtIndex","","",null,null],[5,"SBModuleFindSymbol","","",null,null],[5,"SBModuleFindSymbols","","",null,null],[5,"SBModuleGetNumSections","","",null,null],[5,"SBModuleGetSectionAtIndex","","",null,null],[5,"SBModuleFindFunctions","","",null,null],[5,"SBModuleFindGlobalVariables","","",null,null],[5,"SBModuleFindFirstGlobalVariable","","",null,null],[5,"SBModuleFindFirstType","","",null,null],[5,"SBModuleFindTypes","","",null,null],[5,"SBModuleGetTypeByID","","",null,null],[5,"SBModuleGetBasicType","","",null,null],[5,"SBModuleGetTypes","","",null,null],[5,"SBModuleGetVersion","","",null,null],[5,"SBModuleGetSymbolFileSpec","","",null,null],[5,"SBModuleGetObjectFileHeaderAddress","","",null,null],[5,"CreateSBModuleSpec","","",null,null],[5,"DisposeSBModuleSpec","","",null,null],[5,"SBModuleSpecIsValid","","",null,null],[5,"SBModuleSpecClear","","",null,null],[5,"SBModuleSpecGetFileSpec","","",null,null],[5,"SBModuleSpecSetFileSpec","","",null,null],[5,"SBModuleSpecGetPlatformFileSpec","","",null,null],[5,"SBModuleSpecSetPlatformFileSpec","","",null,null],[5,"SBModuleSpecGetSymbolFileSpec","","",null,null],[5,"SBModuleSpecSetSymbolFileSpec","","",null,null],[5,"SBModuleSpecGetObjectName","","",null,null],[5,"SBModuleSpecSetObjectName","","",null,null],[5,"SBModuleSpecGetTriple","","",null,null],[5,"SBModuleSpecSetTriple","","",null,null],[5,"SBModuleSpecGetUUIDBytes","","",null,null],[5,"SBModuleSpecGetUUIDLength","","",null,null],[5,"SBModuleSpecSetUUIDBytes","","",null,null],[5,"SBModuleSpecGetDescription","","",null,null],[5,"CreateSBModuleSpecList","","",null,null],[5,"DisposeSBModuleSpecList","","",null,null],[5,"SBModuleSpecListGetModuleSpecifications","","",null,null],[5,"SBModuleSpecListAppend","","",null,null],[5,"SBModuleSpecListAppend2","","",null,null],[5,"SBModuleSpecListFindFirstMatchingSpec","","",null,null],[5,"SBModuleSpecListFindMatchingSpecs","","",null,null],[5,"SBModuleSpecListGetSize","","",null,null],[5,"SBModuleSpecListGetSpecAtIndex","","",null,null],[5,"SBModuleSpecListGetDescription","","",null,null],[5,"CreateSBPlatformConnectOptions","","",null,null],[5,"DisposeSBPlatformConnectOptions","","",null,null],[5,"SBPlatformConnectOptionsGetURL","","",null,null],[5,"SBPlatformConnectOptionsSetURL","","",null,null],[5,"SBPlatformConnectOptionsGetRsyncEnabled","","",null,null],[5,"SBPlatformConnectOptionsEnableRsync","","",null,null],[5,"SBPlatformConnectOptionsDisableRsync","","",null,null],[5,"SBPlatformConnectOptionsGetLocalCacheDirectory","","",null,null],[5,"SBPlatformConnectOptionsSetLocalCacheDirectory","","",null,null],[5,"CreateSBPlatformShellCommand","","",null,null],[5,"DisposeSBPlatformShellCommand","","",null,null],[5,"SBPlatformShellCommandClear","","",null,null],[5,"SBPlatformShellCommandGetCommand","","",null,null],[5,"SBPlatformShellCommandSetCommand","","",null,null],[5,"SBPlatformShellCommandGetWorkingDirectory","","",null,null],[5,"SBPlatformShellCommandSetWorkingDirectory","","",null,null],[5,"SBPlatformShellCommandGetTimeoutSeconds","","",null,null],[5,"SBPlatformShellCommandSetTimeoutSeconds","","",null,null],[5,"SBPlatformShellCommandGetSignal","","",null,null],[5,"SBPlatformShellCommandGetStatus","","",null,null],[5,"SBPlatformShellCommandGetOutput","","",null,null],[5,"CreateSBPlatform","","",null,null],[5,"CreateSBPlatform2","","",null,null],[5,"DisposeSBPlatform","","",null,null],[5,"SBPlatformIsValid","","",null,null],[5,"SBPlatformClear","","",null,null],[5,"SBPlatformGetWorkingDirectory","","",null,null],[5,"SBPlatformSetWorkingDirectory","","",null,null],[5,"SBPlatformGetName","","",null,null],[5,"SBPlatformConnectRemote","","",null,null],[5,"SBPlatformDisconnectRemote","","",null,null],[5,"SBPlatformIsConnected","","",null,null],[5,"SBPlatformGetTriple","","",null,null],[5,"SBPlatformGetHostname","","",null,null],[5,"SBPlatformGetOSBuild","","",null,null],[5,"SBPlatformGetOSDescription","","",null,null],[5,"SBPlatformGetOSMajorVersion","","",null,null],[5,"SBPlatformGetOSMinorVersion","","",null,null],[5,"SBPlatformGetOSUpdateVersion","","",null,null],[5,"SBPlatformPut","","",null,null],[5,"SBPlatformGet","","",null,null],[5,"SBPlatformInstall","","",null,null],[5,"SBPlatformRun","","",null,null],[5,"SBPlatformLaunch","","",null,null],[5,"SBPlatformKill","","",null,null],[5,"SBPlatformMakeDirectory","","",null,null],[5,"SBPlatformGetFilePermissions","","",null,null],[5,"SBPlatformSetFilePermissions","","",null,null],[5,"CreateSBProcess","","",null,null],[5,"DisposeSBProcess","","",null,null],[5,"SBProcessGetBroadcasterClassName","","",null,null],[5,"SBProcessGetPluginName","","",null,null],[5,"SBProcessGetShortPluginName","","",null,null],[5,"SBProcessClear","","",null,null],[5,"SBProcessIsValid","","",null,null],[5,"SBProcessGetTarget","","",null,null],[5,"SBProcessGetByteOrder","","",null,null],[5,"SBProcessPutSTDIN","","",null,null],[5,"SBProcessGetSTDOUT","","",null,null],[5,"SBProcessGetSTDERR","","",null,null],[5,"SBProcessGetAsyncProfileData","","",null,null],[5,"SBProcessReportEventState","","",null,null],[5,"SBProcessAppendEventStateReport","","",null,null],[5,"SBProcessRemoteAttachToProcessWithID","","",null,null],[5,"SBProcessRemoteLaunch","","",null,null],[5,"SBProcessGetNumThreads","","",null,null],[5,"SBProcessGetThreadAtIndex","","",null,null],[5,"SBProcessGetThreadByID","","",null,null],[5,"SBProcessGetThreadByIndexID","","",null,null],[5,"SBProcessGetSelectedThread","","",null,null],[5,"SBProcessCreateOSPluginThread","","",null,null],[5,"SBProcessSetSelectedThread","","",null,null],[5,"SBProcessSetSelectedThreadByID","","",null,null],[5,"SBProcessSetSelectedThreadByIndexID","","",null,null],[5,"SBProcessGetNumQueues","","",null,null],[5,"SBProcessGetQueueAtIndex","","",null,null],[5,"SBProcessGetState","","",null,null],[5,"SBProcessGetExitStatus","","",null,null],[5,"SBProcessGetExitDescription","","",null,null],[5,"SBProcessGetProcessID","","",null,null],[5,"SBProcessGetUniqueID","","",null,null],[5,"SBProcessGetAddressByteSize","","",null,null],[5,"SBProcessDestroy","","",null,null],[5,"SBProcessContinue","","",null,null],[5,"SBProcessStop","","",null,null],[5,"SBProcessKill","","",null,null],[5,"SBProcessDetach","","",null,null],[5,"SBProcessDetach2","","",null,null],[5,"SBProcessSignal","","",null,null],[5,"SBProcessGetUnixSignals","","",null,null],[5,"SBProcessSendAsyncInterrupt","","",null,null],[5,"SBProcessGetStopID","","",null,null],[5,"SBProcessReadMemory","","",null,null],[5,"SBProcessWriteMemory","","",null,null],[5,"SBProcessReadCStringFromMemory","","",null,null],[5,"SBProcessReadUnsignedFromMemory","","",null,null],[5,"SBProcessReadPointerFromMemory","","",null,null],[5,"SBProcessGetStateFromEvent","","",null,null],[5,"SBProcessGetRestartedFromEvent","","",null,null],[5,"SBProcessGetNumRestartedReasonsFromEvent","","",null,null],[5,"SBProcessGetRestartedReasonAtIndexFromEvent","","",null,null],[5,"SBProcessGetProcessFromEvent","","",null,null],[5,"SBProcessGetInterruptedFromEvent","","",null,null],[5,"SBProcessEventIsProcessEvent","","",null,null],[5,"SBProcessGetBroadcaster","","",null,null],[5,"SBProcessGetBroadcasterClass","","",null,null],[5,"SBProcessGetDescription","","",null,null],[5,"SBProcessGetNumSupportedHardwareWatchpoints","","",null,null],[5,"SBProcessLoadImage","","",null,null],[5,"SBProcessUnloadImage","","",null,null],[5,"SBProcessSendEventData","","",null,null],[5,"SBProcessGetNumExtendedBacktraceTypes","","",null,null],[5,"SBProcessGetExtendedBacktraceTypeAtIndex","","",null,null],[5,"SBProcessGetHistoryThreads","","",null,null],[5,"SBProcessIsInstrumentationRuntimePresent","","",null,null],[5,"CreateSBQueue","","",null,null],[5,"DisposeSBQueue","","",null,null],[5,"SBQueueIsValid","","",null,null],[5,"SBQueueClear","","",null,null],[5,"SBQueueGetProcess","","",null,null],[5,"SBQueueGetQueueID","","",null,null],[5,"SBQueueGetName","","",null,null],[5,"SBQueueGetIndexID","","",null,null],[5,"SBQueueGetNumThreads","","",null,null],[5,"SBQueueGetThreadAtIndex","","",null,null],[5,"SBQueueGetNumPendingItems","","",null,null],[5,"SBQueueGetPendingItemAtIndex","","",null,null],[5,"SBQueueGetNumRunningItems","","",null,null],[5,"SBQueueGetKind","","",null,null],[5,"CreateSBQueueItem","","",null,null],[5,"DisposeSBQueueItem","","",null,null],[5,"SBQueueItemIsValid","","",null,null],[5,"SBQueueItemClear","","",null,null],[5,"SBQueueItemGetKind","","",null,null],[5,"SBQueueItemSetKind","","",null,null],[5,"SBQueueItemGetAddress","","",null,null],[5,"SBQueueItemSetAddress","","",null,null],[5,"SBQueueItemGetExtendedBacktraceThread","","",null,null],[5,"CreateSBSection","","",null,null],[5,"DisposeSBSection","","",null,null],[5,"SBSectionIsValid","","",null,null],[5,"SBSectionGetName","","",null,null],[5,"SBSectionGetParent","","",null,null],[5,"SBSectionFindSubSection","","",null,null],[5,"SBSectionGetNumSubSections","","",null,null],[5,"SBSectionGetSubSectionAtIndex","","",null,null],[5,"SBSectionGetFileAddress","","",null,null],[5,"SBSectionGetLoadAddress","","",null,null],[5,"SBSectionGetByteSize","","",null,null],[5,"SBSectionGetFileOffset","","",null,null],[5,"SBSectionGetFileByteSize","","",null,null],[5,"SBSectionGetSectionData","","",null,null],[5,"SBSectionGetSectionData2","","",null,null],[5,"SBSectionGetSectionType","","",null,null],[5,"SBSectionGetTargetByteSize","","",null,null],[5,"SBSectionGetDescription","","",null,null],[5,"CreateSBSourceManager","","",null,null],[5,"CreateSBSourceManager2","","",null,null],[5,"DisposeSBSourceManager","","",null,null],[5,"SBSourceManagerDisplaySourceLinesWithLineNumbers","","",null,null],[5,"CreateSBStream","","",null,null],[5,"DisposeSBStream","","",null,null],[5,"SBStreamIsValid","","",null,null],[5,"SBStreamGetData","","",null,null],[5,"SBStreamGetSize","","",null,null],[5,"SBStreamPrintf","","",null,null],[5,"SBStreamRedirectToFile","","",null,null],[5,"SBStreamRedirectToFileHandle","","",null,null],[5,"SBStreamRedirectToFileDescriptor","","",null,null],[5,"SBStreamClear","","",null,null],[5,"CreateSBStringList","","",null,null],[5,"DisposeSBStringList","","",null,null],[5,"SBStringListIsValid","","",null,null],[5,"SBStringListAppendString","","",null,null],[5,"SBStringListAppendList","","",null,null],[5,"SBStringListAppendList2","","",null,null],[5,"SBStringListGetSize","","",null,null],[5,"SBStringListGetStringAtIndex","","",null,null],[5,"SBStringListClear","","",null,null],[5,"CreateSBSymbol","","",null,null],[5,"DisposeSBSymbol","","",null,null],[5,"SBSymbolIsValid","","",null,null],[5,"SBSymbolGetName","","",null,null],[5,"SBSymbolGetDisplayName","","",null,null],[5,"SBSymbolGetMangledName","","",null,null],[5,"SBSymbolGetInstructions","","",null,null],[5,"SBSymbolGetInstructions2","","",null,null],[5,"SBSymbolGetStartAddress","","",null,null],[5,"SBSymbolGetEndAddress","","",null,null],[5,"SBSymbolGetPrologueByteSize","","",null,null],[5,"SBSymbolGetType","","",null,null],[5,"SBSymbolGetDescription","","",null,null],[5,"SBSymbolIsExternal","","",null,null],[5,"SBSymbolIsSynthetic","","",null,null],[5,"CreateSBSymbolContext","","",null,null],[5,"DisposeSBSymbolContext","","",null,null],[5,"SBSymbolContextIsValid","","",null,null],[5,"SBSymbolContextGetModule","","",null,null],[5,"SBSymbolContextGetCompileUnit","","",null,null],[5,"SBSymbolContextGetFunction","","",null,null],[5,"SBSymbolContextGetBlock","","",null,null],[5,"SBSymbolContextGetLineEntry","","",null,null],[5,"SBSymbolContextGetSymbol","","",null,null],[5,"SBSymbolContextSetModule","","",null,null],[5,"SBSymbolContextSetCompileUnit","","",null,null],[5,"SBSymbolContextSetFunction","","",null,null],[5,"SBSymbolContextSetBlock","","",null,null],[5,"SBSymbolContextSetLineEntry","","",null,null],[5,"SBSymbolContextSetSymbol","","",null,null],[5,"SBSymbolContextGetParentOfInlinedScope","","",null,null],[5,"SBSymbolContextGetDescription","","",null,null],[5,"CreateSBSymbolContextList","","",null,null],[5,"DisposeSBSymbolContextList","","",null,null],[5,"SBSymbolContextListIsValid","","",null,null],[5,"SBSymbolContextListGetSize","","",null,null],[5,"SBSymbolContextListGetContextAtIndex","","",null,null],[5,"SBSymbolContextListGetDescription","","",null,null],[5,"SBSymbolContextListAppend","","",null,null],[5,"SBSymbolContextListAppend2","","",null,null],[5,"SBSymbolContextListClear","","",null,null],[5,"CreateSBTarget","","",null,null],[5,"DisposeSBTarget","","",null,null],[5,"SBTargetIsValid","","",null,null],[5,"SBTargetEventIsTargetEvent","","",null,null],[5,"SBTargetGetTargetFromEvent","","",null,null],[5,"SBTargetGetNumModulesFromEvent","","",null,null],[5,"SBTargetGetModuleAtIndexFromEvent","","",null,null],[5,"SBTargetGetBroadcasterClassName","","",null,null],[5,"SBTargetGetProcess","","",null,null],[5,"SBTargetGetPlatform","","",null,null],[5,"SBTargetInstall","","",null,null],[5,"SBTargetLaunch","","",null,null],[5,"SBTargetLaunchSimple","","",null,null],[5,"SBTargetLaunch2","","",null,null],[5,"SBTargetLoadCore","","",null,null],[5,"SBTargetAttach","","",null,null],[5,"SBTargetAttachToProcessWithID","","",null,null],[5,"SBTargetAttachToProcessWithName","","",null,null],[5,"SBTargetConnectRemote","","",null,null],[5,"SBTargetGetExecutable","","",null,null],[5,"SBTargetAddModule","","",null,null],[5,"SBTargetAddModuleSpec","","",null,null],[5,"SBTargetGetNumModules","","",null,null],[5,"SBTargetGetModuleAtIndex","","",null,null],[5,"SBTargetRemoveModule","","",null,null],[5,"SBTargetGetDebugger","","",null,null],[5,"SBTargetFindModule","","",null,null],[5,"SBTargetGetByteOrder","","",null,null],[5,"SBTargetGetAddressByteSize","","",null,null],[5,"SBTargetGetTriple","","",null,null],[5,"SBTargetGetDataByteSize","","",null,null],[5,"SBTargetGetCodeByteSize","","",null,null],[5,"SBTargetSetSectionLoadAddress","","",null,null],[5,"SBTargetClearSectionLoadAddress","","",null,null],[5,"SBTargetSetModuleLoadAddress","","",null,null],[5,"SBTargetClearModuleLoadAddress","","",null,null],[5,"SBTargetFindFunctions","","",null,null],[5,"SBTargetFindGlobalVariables","","",null,null],[5,"SBTargetFindFirstGlobalVariable","","",null,null],[5,"SBTargetFindGlobalVariables2","","",null,null],[5,"SBTargetFindGlobalFunctions","","",null,null],[5,"SBTargetClear","","",null,null],[5,"SBTargetResolveFileAddress","","",null,null],[5,"SBTargetResolveLoadAddress","","",null,null],[5,"SBTargetResolvePastLoadAddress","","",null,null],[5,"SBTargetResolveSymbolContextForAddress","","",null,null],[5,"SBTargetReadMemory","","",null,null],[5,"SBTargetBreakpointCreateByLocation","","",null,null],[5,"SBTargetBreakpointCreateByLocation2","","",null,null],[5,"SBTargetBreakpointCreateByName","","",null,null],[5,"SBTargetBreakpointCreateByName2","","",null,null],[5,"SBTargetBreakpointCreateByName3","","",null,null],[5,"SBTargetBreakpointCreateByNames","","",null,null],[5,"SBTargetBreakpointCreateByRegex","","",null,null],[5,"SBTargetBreakpointCreateByRegex2","","",null,null],[5,"SBTargetBreakpointCreateBySourceRegex","","",null,null],[5,"SBTargetBreakpointCreateBySourceRegex2","","",null,null],[5,"SBTargetBreakpointCreateForException","","",null,null],[5,"SBTargetBreakpointCreateByAddress","","",null,null],[5,"SBTargetGetNumBreakpoints","","",null,null],[5,"SBTargetGetBreakpointAtIndex","","",null,null],[5,"SBTargetBreakpointDelete","","",null,null],[5,"SBTargetFindBreakpointByID","","",null,null],[5,"SBTargetEnableAllBreakpoints","","",null,null],[5,"SBTargetDisableAllBreakpoints","","",null,null],[5,"SBTargetDeleteAllBreakpoints","","",null,null],[5,"SBTargetGetNumWatchpoints","","",null,null],[5,"SBTargetGetWatchpointAtIndex","","",null,null],[5,"SBTargetDeleteWatchpoint","","",null,null],[5,"SBTargetFindWatchpointByID","","",null,null],[5,"SBTargetWatchAddress","","",null,null],[5,"SBTargetEnableAllWatchpoints","","",null,null],[5,"SBTargetDisableAllWatchpoints","","",null,null],[5,"SBTargetDeleteAllWatchpoints","","",null,null],[5,"SBTargetGetBroadcaster","","",null,null],[5,"SBTargetFindFirstType","","",null,null],[5,"SBTargetFindTypes","","",null,null],[5,"SBTargetGetBasicType","","",null,null],[5,"SBTargetCreateValueFromAddress","","",null,null],[5,"SBTargetCreateValueFromData","","",null,null],[5,"SBTargetCreateValueFromExpression","","",null,null],[5,"SBTargetGetSourceManager","","",null,null],[5,"SBTargetReadInstructions","","",null,null],[5,"SBTargetReadInstructions2","","",null,null],[5,"SBTargetGetInstructions","","",null,null],[5,"SBTargetGetInstructionsWithFlavor","","",null,null],[5,"SBTargetGetInstructions2","","",null,null],[5,"SBTargetGetInstructionsWithFlavor2","","",null,null],[5,"SBTargetFindSymbols","","",null,null],[5,"SBTargetGetDescription","","",null,null],[5,"SBTargetEvaluateExpression","","",null,null],[5,"SBTargetGetStackRedZoneSize","","",null,null],[5,"SBTargetGetLaunchInfo","","",null,null],[5,"SBTargetSetLaunchInfo","","",null,null],[5,"SBThreadGetBroadcasterClassName","","",null,null],[5,"CreateSBThread","","",null,null],[5,"DisposeSBThread","","",null,null],[5,"SBThreadGetQueue","","",null,null],[5,"SBThreadIsValid","","",null,null],[5,"SBThreadClear","","",null,null],[5,"SBThreadGetStopReason","","",null,null],[5,"SBThreadGetStopReasonDataCount","","",null,null],[5,"SBThreadGetStopReasonDataAtIndex","","",null,null],[5,"SBThreadGetStopReasonExtendedInfoAsJSON","","",null,null],[5,"SBThreadGetStopDescription","","",null,null],[5,"SBThreadGetStopReturnValue","","",null,null],[5,"SBThreadGetThreadID","","",null,null],[5,"SBThreadGetIndexID","","",null,null],[5,"SBThreadGetName","","",null,null],[5,"SBThreadGetQueueName","","",null,null],[5,"SBThreadGetQueueID","","",null,null],[5,"SBThreadGetInfoItemByPathAsString","","",null,null],[5,"SBThreadStepOver","","",null,null],[5,"SBThreadStepInto","","",null,null],[5,"SBThreadStepInto2","","",null,null],[5,"SBThreadStepOut","","",null,null],[5,"SBThreadStepOutOfFrame","","",null,null],[5,"SBThreadStepInstruction","","",null,null],[5,"SBThreadStepOverUntil","","",null,null],[5,"SBThreadStepUsingScriptedThreadPlan","","",null,null],[5,"SBThreadJumpToLine","","",null,null],[5,"SBThreadRunToAddress","","",null,null],[5,"SBThreadReturnFromFrame","","",null,null],[5,"SBThreadSuspend","","",null,null],[5,"SBThreadResume","","",null,null],[5,"SBThreadIsSuspended","","",null,null],[5,"SBThreadIsStopped","","",null,null],[5,"SBThreadGetNumFrames","","",null,null],[5,"SBThreadGetFrameAtIndex","","",null,null],[5,"SBThreadGetSelectedFrame","","",null,null],[5,"SBThreadSetSelectedFrame","","",null,null],[5,"SBThreadEventIsThreadEvent","","",null,null],[5,"SBThreadGetStackFrameFromEvent","","",null,null],[5,"SBThreadGetThreadFromEvent","","",null,null],[5,"SBThreadGetProcess","","",null,null],[5,"SBThreadGetDescription","","",null,null],[5,"SBThreadGetStatus","","",null,null],[5,"SBThreadGetExtendedBacktraceThread","","",null,null],[5,"SBThreadGetExtendedBacktraceOriginatingIndexID","","",null,null],[5,"SBThreadSafeToCallFunctions","","",null,null],[5,"CreateSBThreadCollection","","",null,null],[5,"DisposeSBThreadCollection","","",null,null],[5,"SBThreadCollectionIsValid","","",null,null],[5,"SBThreadCollectionGetSize","","",null,null],[5,"SBThreadCollectionGetThreadAtIndex","","",null,null],[5,"CreateSBThreadPlan","","",null,null],[5,"CreateSBThreadPlan2","","",null,null],[5,"DisposeSBThreadPlan","","",null,null],[5,"SBThreadPlanIsValid","","",null,null],[5,"SBThreadPlanClear","","",null,null],[5,"SBThreadPlanGetStopReason","","",null,null],[5,"SBThreadPlanGetStopReasonDataCount","","",null,null],[5,"SBThreadPlanGetStopReasonDataAtIndex","","",null,null],[5,"SBThreadPlanGetThread","","",null,null],[5,"SBThreadPlanGetDescription","","",null,null],[5,"SBThreadPlanSetPlanComplete","","",null,null],[5,"SBThreadPlanIsPlanComplete","","",null,null],[5,"SBThreadPlanQueueThreadPlanForStepOverRange","","",null,null],[5,"SBThreadPlanQueueThreadPlanForStepInRange","","",null,null],[5,"SBThreadPlanQueueThreadPlanForStepOut","","",null,null],[5,"SBThreadPlanQueueThreadPlanForRunToAddress","","",null,null],[5,"CreateSBTypeMember","","",null,null],[5,"DisposeSBTypeMember","","",null,null],[5,"SBTypeMemberIsValid","","",null,null],[5,"SBTypeMemberGetName","","",null,null],[5,"SBTypeMemberGetType","","",null,null],[5,"SBTypeMemberGetOffsetInBytes","","",null,null],[5,"SBTypeMemberGetOffsetInBits","","",null,null],[5,"SBTypeMemberIsBitfield","","",null,null],[5,"SBTypeMemberGetBitfieldSizeInBits","","",null,null],[5,"SBTypeMemberGetDescription","","",null,null],[5,"CreateSBTypeMemberFunction","","",null,null],[5,"CreateSBTypeMemberFunction2","","",null,null],[5,"DisposeSBTypeMemberFunction","","",null,null],[5,"SBTypeMemberFunctionIsValid","","",null,null],[5,"SBTypeMemberFunctionGetName","","",null,null],[5,"SBTypeMemberFunctionGetType","","",null,null],[5,"SBTypeMemberFunctionGetReturnType","","",null,null],[5,"SBTypeMemberFunctionGetNumberOfArguments","","",null,null],[5,"SBTypeMemberFunctionGetArgumentTypeAtIndex","","",null,null],[5,"SBTypeMemberFunctionGetKind","","",null,null],[5,"SBTypeMemberFunctionGetDescription","","",null,null],[5,"CreateSBType","","",null,null],[5,"DisposeSBType","","",null,null],[5,"SBTypeIsValid","","",null,null],[5,"SBTypeGetByteSize","","",null,null],[5,"SBTypeIsPointerType","","",null,null],[5,"SBTypeIsReferenceType","","",null,null],[5,"SBTypeIsFunctionType","","",null,null],[5,"SBTypeIsPolymorphicClass","","",null,null],[5,"SBTypeIsArrayType","","",null,null],[5,"SBTypeIsVectorType","","",null,null],[5,"SBTypeIsTypedefType","","",null,null],[5,"SBTypeGetPointerType","","",null,null],[5,"SBTypeGetPointeeType","","",null,null],[5,"SBTypeGetReferenceType","","",null,null],[5,"SBTypeGetTypedefedType","","",null,null],[5,"SBTypeGetDereferencedType","","",null,null],[5,"SBTypeGetUnqualifiedType","","",null,null],[5,"SBTypeGetArrayElementType","","",null,null],[5,"SBTypeGetVectorElementType","","",null,null],[5,"SBTypeGetCanonicalType","","",null,null],[5,"SBTypeGetBasicType","","",null,null],[5,"SBTypeGetBasicType2","","",null,null],[5,"SBTypeGetNumberOfFields","","",null,null],[5,"SBTypeGetNumberOfDirectBaseClasses","","",null,null],[5,"SBTypeGetNumberOfVirtualBaseClasses","","",null,null],[5,"SBTypeGetFieldAtIndex","","",null,null],[5,"SBTypeGetDirectBaseClassAtIndex","","",null,null],[5,"SBTypeGetVirtualBaseClassAtIndex","","",null,null],[5,"SBTypeGetEnumMembers","","",null,null],[5,"SBTypeGetNumberOfTemplateArguments","","",null,null],[5,"SBTypeGetTemplateArgumentType","","",null,null],[5,"SBTypeGetTemplateArgumentKind","","",null,null],[5,"SBTypeGetFunctionReturnType","","",null,null],[5,"SBTypeGetFunctionArgumentTypes","","",null,null],[5,"SBTypeGetNumberOfMemberFunctions","","",null,null],[5,"SBTypeGetMemberFunctionAtIndex","","",null,null],[5,"SBTypeGetName","","",null,null],[5,"SBTypeGetDisplayTypeName","","",null,null],[5,"SBTypeGetTypeClass","","",null,null],[5,"SBTypeIsTypeComplete","","",null,null],[5,"SBTypeGetTypeFlags","","",null,null],[5,"SBTypeGetDescription","","",null,null],[5,"CreateSBTypeList","","",null,null],[5,"DisposeSBTypeList","","",null,null],[5,"SBTypeListIsValid","","",null,null],[5,"SBTypeListAppend","","",null,null],[5,"SBTypeListGetTypeAtIndex","","",null,null],[5,"SBTypeListGetSize","","",null,null],[5,"CreateSBTypeCategory","","",null,null],[5,"DisposeSBTypeCategory","","",null,null],[5,"SBTypeCategoryIsValid","","",null,null],[5,"SBTypeCategoryGetEnabled","","",null,null],[5,"SBTypeCategorySetEnabled","","",null,null],[5,"SBTypeCategoryGetName","","",null,null],[5,"SBTypeCategoryGetDescription","","",null,null],[5,"SBTypeCategoryGetNumFormats","","",null,null],[5,"SBTypeCategoryGetNumSummaries","","",null,null],[5,"SBTypeCategoryGetNumFilters","","",null,null],[5,"SBTypeCategoryGetNumSynthetics","","",null,null],[5,"SBTypeCategoryGetTypeNameSpecifierForFilterAtIndex","","",null,null],[5,"SBTypeCategoryGetTypeNameSpecifierForFormatAtIndex","","",null,null],[5,"SBTypeCategoryGetTypeNameSpecifierForSummaryAtIndex","","",null,null],[5,"SBTypeCategoryGetTypeNameSpecifierForSyntheticAtIndex","","",null,null],[5,"SBTypeCategoryGetFilterForType","","",null,null],[5,"SBTypeCategoryGetFormatForType","","",null,null],[5,"SBTypeCategoryGetSummaryForType","","",null,null],[5,"SBTypeCategoryGetSyntheticForType","","",null,null],[5,"SBTypeCategoryGetFilterAtIndex","","",null,null],[5,"SBTypeCategoryGetFormatAtIndex","","",null,null],[5,"SBTypeCategoryGetSummaryAtIndex","","",null,null],[5,"SBTypeCategoryGetSyntheticAtIndex","","",null,null],[5,"SBTypeCategoryAddTypeFormat","","",null,null],[5,"SBTypeCategoryDeleteTypeFormat","","",null,null],[5,"SBTypeCategoryAddTypeSummary","","",null,null],[5,"SBTypeCategoryDeleteTypeSummary","","",null,null],[5,"SBTypeCategoryAddTypeFilter","","",null,null],[5,"SBTypeCategoryDeleteTypeFilter","","",null,null],[5,"SBTypeCategoryAddTypeSynthetic","","",null,null],[5,"SBTypeCategoryDeleteTypeSynthetic","","",null,null],[5,"CreateSBTypeEnumMember","","",null,null],[5,"DisposeSBTypeEnumMember","","",null,null],[5,"SBTypeEnumMemberIsValid","","",null,null],[5,"SBTypeEnumMemberGetValueAsSigned","","",null,null],[5,"SBTypeEnumMemberGetValueAsUnsigned","","",null,null],[5,"SBTypeEnumMemberGetName","","",null,null],[5,"SBTypeEnumMemberGetType","","",null,null],[5,"SBTypeEnumMemberGetDescription","","",null,null],[5,"CreateSBTypeEnumMemberList","","",null,null],[5,"DisposeSBTypeEnumMemberList","","",null,null],[5,"SBTypeEnumMemberListIsValid","","",null,null],[5,"SBTypeEnumMemberListAppend","","",null,null],[5,"SBTypeEnumMemberListGetTypeEnumMemberAtIndex","","",null,null],[5,"SBTypeEnumMemberListGetSize","","",null,null],[5,"CreateSBTypeFilter","","",null,null],[5,"CreateSBTypeFilter2","","",null,null],[5,"DisposeSBTypeFilter","","",null,null],[5,"SBTypeFilterIsValid","","",null,null],[5,"SBTypeFilterGetNumberOfExpressionPaths","","",null,null],[5,"SBTypeFilterGetExpressionPathAtIndex","","",null,null],[5,"SBTypeFilterReplaceExpressionPathAtIndex","","",null,null],[5,"SBTypeFilterAppendExpressionPath","","",null,null],[5,"SBTypeFilterClear","","",null,null],[5,"SBTypeFilterGetOptions","","",null,null],[5,"SBTypeFilterSetOptions","","",null,null],[5,"SBTypeFilterGetDescription","","",null,null],[5,"SBTypeFilterIsEqualTo","","",null,null],[5,"CreateSBTypeFormat","","",null,null],[5,"CreateSBTypeFormat2","","",null,null],[5,"CreateSBTypeFormat3","","",null,null],[5,"DisposeSBTypeFormat","","",null,null],[5,"SBTypeFormatIsValid","","",null,null],[5,"SBTypeFormatGetFormat","","",null,null],[5,"SBTypeFormatGetTypeName","","",null,null],[5,"SBTypeFormatGetOptions","","",null,null],[5,"SBTypeFormatSetFormat","","",null,null],[5,"SBTypeFormatSetTypeName","","",null,null],[5,"SBTypeFormatSetOptions","","",null,null],[5,"SBTypeFormatGetDescription","","",null,null],[5,"SBTypeFormatIsEqualTo","","",null,null],[5,"CreateSBTypeNameSpecifier","","",null,null],[5,"CreateSBTypeNameSpecifier2","","",null,null],[5,"CreateSBTypeNameSpecifier3","","",null,null],[5,"DisposeSBTypeNameSpecifier","","",null,null],[5,"SBTypeNameSpecifierIsValid","","",null,null],[5,"SBTypeNameSpecifierGetName","","",null,null],[5,"SBTypeNameSpecifierGetType","","",null,null],[5,"SBTypeNameSpecifierIsRegex","","",null,null],[5,"SBTypeNameSpecifierGetDescription","","",null,null],[5,"SBTypeNameSpecifierIsEqualTo","","",null,null],[5,"CreateSBTypeSummaryOptions","","",null,null],[5,"DisposeSBTypeSummaryOptions","","",null,null],[5,"SBTypeSummaryOptionsIsValid","","",null,null],[5,"SBTypeSummaryOptionsGetLanguage","","",null,null],[5,"SBTypeSummaryOptionsGetCapping","","",null,null],[5,"SBTypeSummaryOptionsSetLanguage","","",null,null],[5,"SBTypeSummaryOptionsSetCapping","","",null,null],[5,"CreateSBTypeSummary","","",null,null],[5,"SBTypeSummaryCreateWithSummaryString","","",null,null],[5,"SBTypeSummaryCreateWithFunctionName","","",null,null],[5,"SBTypeSummaryCreateWithScriptCode","","",null,null],[5,"DisposeSBTypeSummary","","",null,null],[5,"SBTypeSummaryIsValid","","",null,null],[5,"SBTypeSummaryIsFunctionCode","","",null,null],[5,"SBTypeSummaryIsFunctionName","","",null,null],[5,"SBTypeSummaryIsSummaryString","","",null,null],[5,"SBTypeSummaryGetData","","",null,null],[5,"SBTypeSummarySetSummaryString","","",null,null],[5,"SBTypeSummarySetFunctionName","","",null,null],[5,"SBTypeSummarySetFunctionCode","","",null,null],[5,"SBTypeSummaryGetOptions","","",null,null],[5,"SBTypeSummarySetOptions","","",null,null],[5,"SBTypeSummaryGetDescription","","",null,null],[5,"SBTypeSummaryIsEqualTo","","",null,null],[5,"CreateSBTypeSynthetic","","",null,null],[5,"SBTypeSyntheticCreateWithClassName","","",null,null],[5,"SBTypeSyntheticCreateWithScriptCode","","",null,null],[5,"DisposeSBTypeSynthetic","","",null,null],[5,"SBTypeSyntheticIsValid","","",null,null],[5,"SBTypeSyntheticIsClassCode","","",null,null],[5,"SBTypeSyntheticIsClassName","","",null,null],[5,"SBTypeSyntheticGetData","","",null,null],[5,"SBTypeSyntheticSetClassName","","",null,null],[5,"SBTypeSyntheticSetClassCode","","",null,null],[5,"SBTypeSyntheticGetOptions","","",null,null],[5,"SBTypeSyntheticSetOptions","","",null,null],[5,"SBTypeSyntheticGetDescription","","",null,null],[5,"SBTypeSyntheticIsEqualTo","","",null,null],[5,"CreateSBUnixSignals","","",null,null],[5,"DisposeSBUnixSignals","","",null,null],[5,"SBUnixSignalsClear","","",null,null],[5,"SBUnixSignalsIsValid","","",null,null],[5,"SBUnixSignalsGetSignalAsCString","","",null,null],[5,"SBUnixSignalsGetSignalNumberFromName","","",null,null],[5,"SBUnixSignalsGetShouldSuppress","","",null,null],[5,"SBUnixSignalsSetShouldSuppress","","",null,null],[5,"SBUnixSignalsGetShouldStop","","",null,null],[5,"SBUnixSignalsSetShouldStop","","",null,null],[5,"SBUnixSignalsGetShouldNotify","","",null,null],[5,"SBUnixSignalsSetShouldNotify","","",null,null],[5,"SBUnixSignalsGetNumSignals","","",null,null],[5,"SBUnixSignalsGetSignalAtIndex","","",null,null],[5,"CreateSBValue","","",null,null],[5,"DisposeSBValue","","",null,null],[5,"SBValueIsValid","","",null,null],[5,"SBValueClear","","",null,null],[5,"SBValueGetError","","",null,null],[5,"SBValueGetID","","",null,null],[5,"SBValueGetName","","",null,null],[5,"SBValueGetTypeName","","",null,null],[5,"SBValueGetDisplayTypeName","","",null,null],[5,"SBValueGetByteSize","","",null,null],[5,"SBValueIsInScope","","",null,null],[5,"SBValueGetFormat","","",null,null],[5,"SBValueSetFormat","","",null,null],[5,"SBValueGetValue","","",null,null],[5,"SBValueGetValueAsSigned","","",null,null],[5,"SBValueGetValueAsUnsigned","","",null,null],[5,"SBValueGetValueAsSigned2","","",null,null],[5,"SBValueGetValueAsUnsigned2","","",null,null],[5,"SBValueGetValueType","","",null,null],[5,"SBValueGetValueDidChange","","",null,null],[5,"SBValueGetSummary","","",null,null],[5,"SBValueGetSummary2","","",null,null],[5,"SBValueGetObjectDescription","","",null,null],[5,"SBValueGetTypeValidatorResult","","",null,null],[5,"SBValueGetDynamicValue","","",null,null],[5,"SBValueGetStaticValue","","",null,null],[5,"SBValueGetNonSyntheticValue","","",null,null],[5,"SBValueGetPreferDynamicValue","","",null,null],[5,"SBValueSetPreferDynamicValue","","",null,null],[5,"SBValueGetPreferSyntheticValue","","",null,null],[5,"SBValueSetPreferSyntheticValue","","",null,null],[5,"SBValueIsDynamic","","",null,null],[5,"SBValueIsSynthetic","","",null,null],[5,"SBValueGetLocation","","",null,null],[5,"SBValueSetValueFromCString","","",null,null],[5,"SBValueSetValueFromCString2","","",null,null],[5,"SBValueGetTypeFormat","","",null,null],[5,"SBValueGetTypeSummary","","",null,null],[5,"SBValueGetTypeFilter","","",null,null],[5,"SBValueGetTypeSynthetic","","",null,null],[5,"SBValueGetChildAtIndex","","",null,null],[5,"SBValueCreateChildAtOffset","","",null,null],[5,"SBValueCast","","",null,null],[5,"SBValueCreateValueFromExpression","","",null,null],[5,"SBValueCreateValueFromExpression2","","",null,null],[5,"SBValueCreateValueFromAddress","","",null,null],[5,"SBValueCreateValueFromData","","",null,null],[5,"SBValueGetChildAtIndex2","","",null,null],[5,"SBValueGetIndexOfChildWithName","","",null,null],[5,"SBValueGetChildMemberWithName","","",null,null],[5,"SBValueGetChildMemberWithName2","","",null,null],[5,"SBValueGetValueForExpressionPath","","",null,null],[5,"SBValueAddressOf","","",null,null],[5,"SBValueGetLoadAddress","","",null,null],[5,"SBValueGetAddress","","",null,null],[5,"SBValueGetPointeeData","","",null,null],[5,"SBValueGetData","","",null,null],[5,"SBValueSetData","","",null,null],[5,"SBValueGetDeclaration","","",null,null],[5,"SBValueMightHaveChildren","","",null,null],[5,"SBValueIsRuntimeSupportValue","","",null,null],[5,"SBValueGetNumChildren","","",null,null],[5,"SBValueGetOpaqueType","","",null,null],[5,"SBValueGetTarget","","",null,null],[5,"SBValueGetProcess","","",null,null],[5,"SBValueGetThread","","",null,null],[5,"SBValueGetFrame","","",null,null],[5,"SBValueDereference","","",null,null],[5,"SBValueTypeIsPointerType","","",null,null],[5,"SBValueGetType","","",null,null],[5,"SBValuePersist","","",null,null],[5,"SBValueGetDescription","","",null,null],[5,"SBValueGetExpressionPath","","",null,null],[5,"SBValueGetExpressionPath2","","",null,null],[5,"SBValueWatch","","",null,null],[5,"SBValueWatch2","","",null,null],[5,"SBValueWatchPointee","","",null,null],[5,"CreateSBValueList","","",null,null],[5,"DisposeSBValueList","","",null,null],[5,"SBValueListIsValid","","",null,null],[5,"SBValueListClear","","",null,null],[5,"SBValueListAppend","","",null,null],[5,"SBValueListAppend2","","",null,null],[5,"SBValueListGetSize","","",null,null],[5,"SBValueListGetValueAtIndex","","",null,null],[5,"SBValueListGetFirstValueByName","","",null,null],[5,"SBValueListFindValueObjectByUID","","",null,null],[5,"CreateSBVariablesOptions","","",null,null],[5,"CreateSBVariablesOptions2","","",null,null],[5,"DisposeSBVariablesOptions","","",null,null],[5,"SBVariablesOptionsIsValid","","",null,null],[5,"SBVariablesOptionsGetIncludeArguments","","",null,null],[5,"SBVariablesOptionsSetIncludeArguments","","",null,null],[5,"SBVariablesOptionsGetIncludeLocals","","",null,null],[5,"SBVariablesOptionsSetIncludeLocals","","",null,null],[5,"SBVariablesOptionsGetIncludeStatics","","",null,null],[5,"SBVariablesOptionsSetIncludeStatics","","",null,null],[5,"SBVariablesOptionsGetInScopeOnly","","",null,null],[5,"SBVariablesOptionsSetInScopeOnly","","",null,null],[5,"SBVariablesOptionsGetIncludeRuntimeSupportValues","","",null,null],[5,"SBVariablesOptionsSetIncludeRuntimeSupportValues","","",null,null],[5,"SBVariablesOptionsGetUseDynamic","","",null,null],[5,"SBVariablesOptionsSetUseDynamic","","",null,null],[5,"CreateSBWatchpoint","","",null,null],[5,"DisposeSBWatchpoint","","",null,null],[5,"SBWatchpointIsValid","","",null,null],[5,"SBWatchpointGetError","","",null,null],[5,"SBWatchpointGetID","","",null,null],[5,"SBWatchpointGetHardwareIndex","","",null,null],[5,"SBWatchpointGetWatchAddress","","",null,null],[5,"SBWatchpointGetWatchSize","","",null,null],[5,"SBWatchpointSetEnabled","","",null,null],[5,"SBWatchpointIsEnabled","","",null,null],[5,"SBWatchpointGetHitCount","","",null,null],[5,"SBWatchpointGetIgnoreCount","","",null,null],[5,"SBWatchpointSetIgnoreCount","","",null,null],[5,"SBWatchpointGetCondition","","",null,null],[5,"SBWatchpointSetCondition","","",null,null],[5,"SBWatchpointGetDescription","","",null,null],[5,"SBWatchpointClear","","",null,null],[5,"SBWatchpointEventIsWatchpointEvent","","",null,null],[5,"SBWatchpointGetWatchpointEventTypeFromEvent","","",null,null],[5,"SBWatchpointGetWatchpointFromEvent","","",null,null],[11,"clone","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",43,null],[11,"cmp","","",43,null],[11,"partial_cmp","","",43,null],[11,"lt","","",43,null],[11,"le","","",43,null],[11,"gt","","",43,null],[11,"ge","","",43,null],[11,"clone","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",43,null],[11,"empty","","Returns an empty set of flags.",43,{"inputs":[],"output":{"name":"launchflags"}}],[11,"all","","Returns the set containing all flags.",43,{"inputs":[],"output":{"name":"launchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",43,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",43,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",43,{"inputs":[{"name":"u32"}],"output":{"name":"launchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,null],[11,"is_all","","Returns `true` if all flags are currently set.",43,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,null],[11,"insert","","Inserts the specified flags in-place.",43,null],[11,"remove","","Removes the specified flags in-place.",43,null],[11,"toggle","","Toggles the specified flags in-place.",43,null],[11,"bitor","","Returns the union of the two sets of flags.",43,null],[11,"bitor_assign","","Adds the set of flags.",43,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,null],[11,"bitxor_assign","","Toggles the set of flags.",43,null],[11,"bitand","","Returns the intersection between the two sets of flags.",43,null],[11,"bitand_assign","","Disables all flags disabled in the set.",43,null],[11,"sub","","Returns the set difference of the two sets of flags.",43,null],[11,"sub_assign","","Disables all flags enabled in the set.",43,null],[11,"not","","Returns the complement of this set of flags.",43,null],[11,"extend","","",43,null],[11,"from_iter","","",43,{"inputs":[{"name":"t"}],"output":{"name":"launchflags"}}],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",2,null],[11,"fmt","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",6,null],[11,"fmt","","",6,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"hash","","",44,null],[11,"cmp","","",44,null],[11,"partial_cmp","","",44,null],[11,"lt","","",44,null],[11,"le","","",44,null],[11,"gt","","",44,null],[11,"ge","","",44,null],[11,"clone","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"fmt","","",44,null],[11,"empty","","Returns an empty set of flags.",44,{"inputs":[],"output":{"name":"symbolcontextitem"}}],[11,"all","","Returns the set containing all flags.",44,{"inputs":[],"output":{"name":"symbolcontextitem"}}],[11,"bits","","Returns the raw value of the flags currently stored.",44,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",44,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",44,{"inputs":[{"name":"u32"}],"output":{"name":"symbolcontextitem"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,null],[11,"is_all","","Returns `true` if all flags are currently set.",44,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",44,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",44,null],[11,"insert","","Inserts the specified flags in-place.",44,null],[11,"remove","","Removes the specified flags in-place.",44,null],[11,"toggle","","Toggles the specified flags in-place.",44,null],[11,"bitor","","Returns the union of the two sets of flags.",44,null],[11,"bitor_assign","","Adds the set of flags.",44,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",44,null],[11,"bitxor_assign","","Toggles the set of flags.",44,null],[11,"bitand","","Returns the intersection between the two sets of flags.",44,null],[11,"bitand_assign","","Disables all flags disabled in the set.",44,null],[11,"sub","","Returns the set difference of the two sets of flags.",44,null],[11,"sub_assign","","Disables all flags enabled in the set.",44,null],[11,"not","","Returns the complement of this set of flags.",44,null],[11,"extend","","",44,null],[11,"from_iter","","",44,{"inputs":[{"name":"t"}],"output":{"name":"symbolcontextitem"}}],[11,"hash","","",45,null],[11,"cmp","","",45,null],[11,"partial_cmp","","",45,null],[11,"lt","","",45,null],[11,"le","","",45,null],[11,"gt","","",45,null],[11,"ge","","",45,null],[11,"clone","","",45,null],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"fmt","","",45,null],[11,"empty","","Returns an empty set of flags.",45,{"inputs":[],"output":{"name":"permissions"}}],[11,"all","","Returns the set containing all flags.",45,{"inputs":[],"output":{"name":"permissions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",45,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",45,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",45,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,null],[11,"is_all","","Returns `true` if all flags are currently set.",45,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",45,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",45,null],[11,"insert","","Inserts the specified flags in-place.",45,null],[11,"remove","","Removes the specified flags in-place.",45,null],[11,"toggle","","Toggles the specified flags in-place.",45,null],[11,"bitor","","Returns the union of the two sets of flags.",45,null],[11,"bitor_assign","","Adds the set of flags.",45,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",45,null],[11,"bitxor_assign","","Toggles the set of flags.",45,null],[11,"bitand","","Returns the intersection between the two sets of flags.",45,null],[11,"bitand_assign","","Disables all flags disabled in the set.",45,null],[11,"sub","","Returns the set difference of the two sets of flags.",45,null],[11,"sub_assign","","Disables all flags enabled in the set.",45,null],[11,"not","","Returns the complement of this set of flags.",45,null],[11,"extend","","",45,null],[11,"from_iter","","",45,{"inputs":[{"name":"t"}],"output":{"name":"permissions"}}],[11,"clone","","",15,null],[11,"fmt","","",15,null],[11,"clone","","",16,null],[11,"fmt","","",16,null],[11,"clone","","",17,null],[11,"fmt","","",17,null],[11,"clone","","",18,null],[11,"fmt","","",18,null],[11,"clone","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",20,null],[11,"fmt","","",20,null],[11,"clone","","",21,null],[11,"fmt","","",21,null],[11,"clone","","",22,null],[11,"fmt","","",22,null],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"clone","","",24,null],[11,"fmt","","",24,null],[11,"clone","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",27,null],[11,"fmt","","",27,null],[11,"hash","","",46,null],[11,"cmp","","",46,null],[11,"partial_cmp","","",46,null],[11,"lt","","",46,null],[11,"le","","",46,null],[11,"gt","","",46,null],[11,"ge","","",46,null],[11,"clone","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"fmt","","",46,null],[11,"empty","","Returns an empty set of flags.",46,{"inputs":[],"output":{"name":"typeclass"}}],[11,"all","","Returns the set containing all flags.",46,{"inputs":[],"output":{"name":"typeclass"}}],[11,"bits","","Returns the raw value of the flags currently stored.",46,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",46,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",46,{"inputs":[{"name":"u32"}],"output":{"name":"typeclass"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,null],[11,"is_all","","Returns `true` if all flags are currently set.",46,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,null],[11,"insert","","Inserts the specified flags in-place.",46,null],[11,"remove","","Removes the specified flags in-place.",46,null],[11,"toggle","","Toggles the specified flags in-place.",46,null],[11,"bitor","","Returns the union of the two sets of flags.",46,null],[11,"bitor_assign","","Adds the set of flags.",46,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,null],[11,"bitxor_assign","","Toggles the set of flags.",46,null],[11,"bitand","","Returns the intersection between the two sets of flags.",46,null],[11,"bitand_assign","","Disables all flags disabled in the set.",46,null],[11,"sub","","Returns the set difference of the two sets of flags.",46,null],[11,"sub_assign","","Disables all flags enabled in the set.",46,null],[11,"not","","Returns the complement of this set of flags.",46,null],[11,"extend","","",46,null],[11,"from_iter","","",46,{"inputs":[{"name":"t"}],"output":{"name":"typeclass"}}],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"fmt","","",29,null],[11,"clone","","",30,null],[11,"fmt","","",30,null],[11,"clone","","",31,null],[11,"fmt","","",31,null],[11,"hash","","",47,null],[11,"cmp","","",47,null],[11,"partial_cmp","","",47,null],[11,"lt","","",47,null],[11,"le","","",47,null],[11,"gt","","",47,null],[11,"ge","","",47,null],[11,"clone","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"fmt","","",47,null],[11,"empty","","Returns an empty set of flags.",47,{"inputs":[],"output":{"name":"filepermissions"}}],[11,"all","","Returns the set containing all flags.",47,{"inputs":[],"output":{"name":"filepermissions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",47,null],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",47,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",47,{"inputs":[{"name":"u32"}],"output":{"name":"filepermissions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,null],[11,"is_all","","Returns `true` if all flags are currently set.",47,null],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",47,null],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",47,null],[11,"insert","","Inserts the specified flags in-place.",47,null],[11,"remove","","Removes the specified flags in-place.",47,null],[11,"toggle","","Toggles the specified flags in-place.",47,null],[11,"bitor","","Returns the union of the two sets of flags.",47,null],[11,"bitor_assign","","Adds the set of flags.",47,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",47,null],[11,"bitxor_assign","","Toggles the set of flags.",47,null],[11,"bitand","","Returns the intersection between the two sets of flags.",47,null],[11,"bitand_assign","","Disables all flags disabled in the set.",47,null],[11,"sub","","Returns the set difference of the two sets of flags.",47,null],[11,"sub_assign","","Disables all flags enabled in the set.",47,null],[11,"not","","Returns the complement of this set of flags.",47,null],[11,"extend","","",47,null],[11,"from_iter","","",47,{"inputs":[{"name":"t"}],"output":{"name":"filepermissions"}}],[11,"clone","","",32,null],[11,"fmt","","",32,null],[11,"clone","","",33,null],[11,"fmt","","",33,null],[11,"clone","","",34,null],[11,"fmt","","",34,null],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"clone","","",36,null],[11,"fmt","","",36,null],[11,"clone","","",37,null],[11,"fmt","","",37,null],[11,"clone","","",38,null],[11,"fmt","","",38,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"clone","","",40,null],[11,"fmt","","",40,null],[11,"clone","","",41,null],[11,"fmt","","",41,null],[11,"clone","","",42,null],[11,"fmt","","",42,null],[6,"lldb_addr_t","","Storage for the value of an address.",null,null],[6,"lldb_user_id_t","","Storage for an OS user ID.",null,null],[6,"lldb_pid_t","","Storage for an OS process ID.",null,null],[6,"lldb_tid_t","","Storage for an OS thread ID.",null,null],[6,"lldb_offset_t","","Storage for an offset between 2 addresses in memory.",null,null],[6,"SBAddressRef","","",null,null],[6,"SBAttachInfoRef","","",null,null],[6,"SBBlockRef","","",null,null],[6,"SBBreakpointRef","","",null,null],[6,"SBBreakpointLocationRef","","",null,null],[6,"SBBroadcasterRef","","",null,null],[6,"SBCommandRef","","",null,null],[6,"SBCommandInterpreterRef","","",null,null],[6,"SBCommandInterpreterRunOptionsRef","","",null,null],[6,"SBCommandPluginInterfaceRef","","",null,null],[6,"SBCommandReturnObjectRef","","",null,null],[6,"SBCommunicationRef","","",null,null],[6,"SBCompileUnitRef","","",null,null],[6,"SBDataRef","","",null,null],[6,"SBDebuggerRef","","",null,null],[6,"SBDeclarationRef","","",null,null],[6,"SBErrorRef","","",null,null],[6,"SBEventRef","","",null,null],[6,"SBEventListRef","","",null,null],[6,"SBExecutionContextRef","","",null,null],[6,"SBExpressionOptionsRef","","",null,null],[6,"SBFileSpecRef","","",null,null],[6,"SBFileSpecListRef","","",null,null],[6,"SBFrameRef","","",null,null],[6,"SBFunctionRef","","",null,null],[6,"SBHostOSRef","","",null,null],[6,"SBInstructionRef","","",null,null],[6,"SBInstructionListRef","","",null,null],[6,"SBLaunchInfoRef","","",null,null],[6,"SBLineEntryRef","","",null,null],[6,"SBListenerRef","","",null,null],[6,"SBModuleRef","","",null,null],[6,"SBModuleSpecRef","","",null,null],[6,"SBModuleSpecListRef","","",null,null],[6,"SBPlatformRef","","",null,null],[6,"SBProcessRef","","",null,null],[6,"SBQueueRef","","",null,null],[6,"SBQueueItemRef","","",null,null],[6,"SBSectionRef","","",null,null],[6,"SBSourceManagerRef","","",null,null],[6,"SBStreamRef","","",null,null],[6,"SBStringListRef","","",null,null],[6,"SBSymbolRef","","",null,null],[6,"SBSymbolContextRef","","",null,null],[6,"SBSymbolContextListRef","","",null,null],[6,"SBTargetRef","","",null,null],[6,"SBThreadRef","","",null,null],[6,"SBThreadCollectionRef","","",null,null],[6,"SBThreadPlanRef","","",null,null],[6,"SBTypeRef","","",null,null],[6,"SBTypeMemberRef","","",null,null],[6,"SBTypeCategoryRef","","",null,null],[6,"SBTypeEnumMemberRef","","",null,null],[6,"SBTypeEnumMemberListRef","","",null,null],[6,"SBTypeFilterRef","","",null,null],[6,"SBTypeFormatRef","","",null,null],[6,"SBTypeMemberFunctionRef","","",null,null],[6,"SBTypeNameSpecifierRef","","",null,null],[6,"SBTypeSummaryRef","","",null,null],[6,"SBTypeSummaryOptionsRef","","",null,null],[6,"SBInputReaderRef","","",null,null],[6,"SBPlatformConnectOptionsRef","","",null,null],[6,"SBPlatformShellCommandRef","","",null,null],[6,"SBTypeSyntheticRef","","",null,null],[6,"SBTypeListRef","","",null,null],[6,"SBValueRef","","",null,null],[6,"SBValueListRef","","",null,null],[6,"SBVariablesOptionsRef","","",null,null],[6,"SBWatchpointRef","","",null,null],[6,"SBUnixSignalsRef","","",null,null],[6,"ReadThreadBytesReceived","","",null,null],[17,"LAUNCH_FLAG_EXEC","","Exec when launching and turn the calling process into a new process.",null,null],[17,"LAUNCH_FLAG_DEBUG","","Stop as soon as the process launches to allow the process to be debugged.",null,null],[17,"LAUNCH_FLAG_STOP_AT_ENTRY","","Stop at the program entry point instead of auto-continuing when\nlaunching or attaching at entry point.",null,null],[17,"LAUNCH_FLAG_DISABLE_ASLR","","Disable address space layout randomization (ASLR).",null,null],[17,"LAUNCH_FLAG_DISABLE_STDIO","","Disable stdio for the inferior process (e.g. for a GUI app).",null,null],[17,"LAUNCH_FLAG_LAUNCH_IN_TTY","","Launch the process in a new TTY if supported by the host.",null,null],[17,"LAUNCH_FLAG_LAUNCH_IN_SHELL","","Launch the process inside a shell to get shell expansion.",null,null],[17,"LAUNCH_FLAG_LAUNCH_IN_SEPARATE_PROCESS_GROUP","","Launch the process in a separate process group.",null,null],[17,"LAUNCH_FLAG_DONT_SET_EXIT_STATUS","","If you are going to hand the process off (e.g. to debugserver),\nset this flag so that lldb and the handee don&#39;t race to set its\nexit status.",null,null],[17,"LAUNCH_FLAG_DETACH_ON_ERRROR","","If set, then the client stub should detach rather than\nkilling the debugee.",null,null],[17,"LAUNCH_FLAG_SHELL_EXPAND_ARGUMENTS","","Perform shell-style argument expansion.",null,null],[17,"LAUNCH_FLAG_CLOSE_TTY_ON_EXIT","","Close the open TTY on exit.",null,null],[17,"SYMBOL_CONTEXT_ITEM_TARGET","","Set when a target is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_MODULE","","Set when a module is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_COMPUNIT","","Set when a compilation unit is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_FUNCTION","","Set when a function is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_BLOCK","","Set when the deepest block is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_LINE_ENTRY","","Set when a line entry is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_SYMBOL","","Set when a symbol is requested from a query or was located\nin the query results.",null,null],[17,"SYMBOL_CONTEXT_ITEM_EVERYTHING","","Indicates to try and look everything up during a routine symbol\ncontext query. This doesn&#39;t actually include looking up a variable.",null,null],[17,"SYMBOL_CONTEXT_ITEM_VARIABLE","","Set when a global or static variable is requested from a query,\nor was located in the query results.",null,null],[17,"PERMISSIONS_WRITABLE","","",null,null],[17,"PERMISSIONS_READABLE","","",null,null],[17,"PERMISSIONS_EXECUTABLE","","",null,null],[17,"TYPE_CLASS_INVALID","","",null,null],[17,"TYPE_CLASS_ARRAY","","",null,null],[17,"TYPE_CLASS_BLOCKPOINTER","","",null,null],[17,"TYPE_CLASS_BUILTIN","","",null,null],[17,"TYPE_CLASS_CLASS","","",null,null],[17,"TYPE_CLASS_COMPLEX_FLOAT","","",null,null],[17,"TYPE_CLASS_COMPLEX_INTEGER","","",null,null],[17,"TYPE_CLASS_ENUMERATION","","",null,null],[17,"TYPE_CLASS_FUNCTION","","",null,null],[17,"TYPE_CLASS_MEMBER_POINTER","","",null,null],[17,"TYPE_CLASS_OBJC_OBJECT","","",null,null],[17,"TYPE_CLASS_OBJC_INTERFACE","","",null,null],[17,"TYPE_CLASS_OBJC_OBJECT_POINTER","","",null,null],[17,"TYPE_CLASS_POINTER","","",null,null],[17,"TYPE_CLASS_REFERENCE","","",null,null],[17,"TYPE_CLASS_STRUCT","","",null,null],[17,"TYPE_CLASS_TYPEDEF","","",null,null],[17,"TYPE_CLASS_UNION","","",null,null],[17,"TYPE_CLASS_VECTOR","","",null,null],[17,"TYPE_CLASS_OTHER","","",null,null],[17,"TYPE_CLASS_ANY","","",null,null],[17,"FILE_PERMISSIONS_WORLD_EXECUTE","","",null,null],[17,"FILE_PERMISSIONS_WORLD_WRITE","","",null,null],[17,"FILE_PERMISSIONS_WORLD_READ","","",null,null],[17,"FILE_PERMISSIONS_GROUP_EXECUTE","","",null,null],[17,"FILE_PERMISSIONS_GROUP_WRITE","","",null,null],[17,"FILE_PERMISSIONS_GROUP_READ","","",null,null],[17,"FILE_PERMISSIONS_USER_EXECUTE","","",null,null],[17,"FILE_PERMISSIONS_USER_WRITE","","",null,null],[17,"FILE_PERMISSIONS_USER_READ","","",null,null],[17,"FILE_PERMISSIONS_WORLD_RX","","",null,null],[17,"FILE_PERMISSIONS_WORLD_RW","","",null,null],[17,"FILE_PERMISSIONS_WORLD_RWX","","",null,null],[17,"FILE_PERMISSIONS_GROUP_RX","","",null,null],[17,"FILE_PERMISSIONS_GROUP_RW","","",null,null],[17,"FILE_PERMISSIONS_GROUP_RWX","","",null,null],[17,"FILE_PERMISSIONS_USER_RX","","",null,null],[17,"FILE_PERMISSIONS_USER_RW","","",null,null],[17,"FILE_PERMISSIONS_USER_RWX","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_R","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_W","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_X","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_RW","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_RX","","",null,null],[17,"FILE_PERMISSIONS_EVERYONE_RWX","","",null,null],[17,"FILE_PERMISSIONS_FILE_DEFAULT","","",null,null],[17,"FILE_PERMISSIONS_DIRECTORY_DEFAULT","","",null,null]],"paths":[[4,"StateType"],[4,"RunMode"],[4,"ByteOrder"],[4,"Encoding"],[4,"Format"],[4,"DescriptionLevel"],[4,"ScriptLanguage"],[4,"RegisterKind"],[4,"StopReason"],[4,"ReturnStatus"],[4,"ExpressionResults"],[4,"ConnectionStatus"],[4,"ErrorType"],[4,"ValueType"],[4,"InputReaderGranularity"],[4,"InputReaderAction"],[4,"BreakpointEventType"],[4,"WatchpointEventType"],[4,"LanguageType"],[4,"InstrumentationRuntimeType"],[4,"DynamicValueType"],[4,"AccessType"],[4,"CommandArgumentType"],[4,"SymbolType"],[4,"SectionType"],[4,"EmulateInstructionOptions"],[4,"FunctionNameType"],[4,"BasicType"],[4,"TemplateArgumentKind"],[4,"TypeOptions"],[4,"FrameComparison"],[4,"AddressClass"],[4,"QueueItemKind"],[4,"QueueKind"],[4,"ExpressionEvaluationPhase"],[4,"WatchpointKind"],[4,"GdbSignal"],[4,"PathType"],[4,"MemberFunctionKind"],[4,"MatchType"],[4,"TypeFlags"],[4,"CommandFlags"],[4,"TypeSummaryCapping"],[3,"LaunchFlags"],[3,"SymbolContextItem"],[3,"Permissions"],[3,"TypeClass"],[3,"FilePermissions"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"winsize","","",null,null],[12,"ws_row","","",12,null],[12,"ws_col","","",12,null],[12,"ws_xpixel","","",12,null],[12,"ws_ypixel","","",12,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",13,null],[12,"sa_family","","",13,null],[12,"sa_data","","",13,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",14,null],[12,"sin6_family","","",14,null],[12,"sin6_port","","",14,null],[12,"sin6_flowinfo","","",14,null],[12,"sin6_addr","","",14,null],[12,"sin6_scope_id","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",15,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"passwd","","",null,null],[12,"pw_name","","",16,null],[12,"pw_passwd","","",16,null],[12,"pw_uid","","",16,null],[12,"pw_gid","","",16,null],[12,"pw_change","","",16,null],[12,"pw_class","","",16,null],[12,"pw_gecos","","",16,null],[12,"pw_dir","","",16,null],[12,"pw_shell","","",16,null],[12,"pw_expire","","",16,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",17,null],[12,"ifa_name","","",17,null],[12,"ifa_flags","","",17,null],[12,"ifa_addr","","",17,null],[12,"ifa_netmask","","",17,null],[12,"ifa_dstaddr","","",17,null],[12,"ifa_data","","",17,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",18,null],[12,"tm_min","","",18,null],[12,"tm_hour","","",18,null],[12,"tm_mday","","",18,null],[12,"tm_mon","","",18,null],[12,"tm_year","","",18,null],[12,"tm_wday","","",18,null],[12,"tm_yday","","",18,null],[12,"tm_isdst","","",18,null],[12,"tm_gmtoff","","",18,null],[12,"tm_zone","","",18,null],[3,"utsname","","",null,null],[12,"sysname","","",19,null],[12,"nodename","","",19,null],[12,"release","","",19,null],[12,"version","","",19,null],[12,"machine","","",19,null],[3,"msghdr","","",null,null],[12,"msg_name","","",20,null],[12,"msg_namelen","","",20,null],[12,"msg_iov","","",20,null],[12,"msg_iovlen","","",20,null],[12,"msg_control","","",20,null],[12,"msg_controllen","","",20,null],[12,"msg_flags","","",20,null],[3,"fsid_t","","",null,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",21,null],[12,"gl_offs","","",21,null],[12,"gl_pathv","","",21,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",22,null],[12,"ss_family","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_next","","",23,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",24,null],[12,"denom","","",24,null],[3,"stat","","",null,null],[12,"st_dev","","",25,null],[12,"st_mode","","",25,null],[12,"st_nlink","","",25,null],[12,"st_ino","","",25,null],[12,"st_uid","","",25,null],[12,"st_gid","","",25,null],[12,"st_rdev","","",25,null],[12,"st_atime","","",25,null],[12,"st_atime_nsec","","",25,null],[12,"st_mtime","","",25,null],[12,"st_mtime_nsec","","",25,null],[12,"st_ctime","","",25,null],[12,"st_ctime_nsec","","",25,null],[12,"st_birthtime","","",25,null],[12,"st_birthtime_nsec","","",25,null],[12,"st_size","","",25,null],[12,"st_blocks","","",25,null],[12,"st_blksize","","",25,null],[12,"st_flags","","",25,null],[12,"st_gen","","",25,null],[12,"st_lspare","","",25,null],[12,"st_qspare","","",25,null],[3,"dirent","","",null,null],[12,"d_ino","","",26,null],[12,"d_seekoff","","",26,null],[12,"d_reclen","","",26,null],[12,"d_namlen","","",26,null],[12,"d_type","","",26,null],[12,"d_name","","",26,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",27,null],[12,"si_errno","","",27,null],[12,"si_code","","",27,null],[12,"si_pid","","",27,null],[12,"si_uid","","",27,null],[12,"si_status","","",27,null],[12,"si_addr","","",27,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",28,null],[12,"sa_mask","","",28,null],[12,"sa_flags","","",28,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",29,null],[12,"ss_size","","",29,null],[12,"ss_flags","","",29,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",30,null],[12,"fst_posmode","","",30,null],[12,"fst_offset","","",30,null],[12,"fst_length","","",30,null],[12,"fst_bytesalloc","","",30,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",31,null],[12,"ra_count","","",31,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",32,null],[12,"f_frsize","","",32,null],[12,"f_blocks","","",32,null],[12,"f_bfree","","",32,null],[12,"f_bavail","","",32,null],[12,"f_files","","",32,null],[12,"f_ffree","","",32,null],[12,"f_favail","","",32,null],[12,"f_fsid","","",32,null],[12,"f_flag","","",32,null],[12,"f_namemax","","",32,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",33,null],[12,"dli_fbase","","",33,null],[12,"dli_sname","","",33,null],[12,"dli_saddr","","",33,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",34,null],[12,"sin_family","","",34,null],[12,"sin_port","","",34,null],[12,"sin_addr","","",34,null],[12,"sin_zero","","",34,null],[3,"statfs","","",null,null],[12,"f_bsize","","",35,null],[12,"f_iosize","","",35,null],[12,"f_blocks","","",35,null],[12,"f_bfree","","",35,null],[12,"f_bavail","","",35,null],[12,"f_files","","",35,null],[12,"f_ffree","","",35,null],[12,"f_fsid","","",35,null],[12,"f_owner","","",35,null],[12,"f_type","","",35,null],[12,"f_flags","","",35,null],[12,"f_fssubtype","","",35,null],[12,"f_fstypename","","",35,null],[12,"f_mntonname","","",35,null],[12,"f_mntfromname","","",35,null],[12,"f_reserved","","",35,null],[3,"kevent","","",null,null],[12,"ident","","",36,null],[12,"filter","","",36,null],[12,"flags","","",36,null],[12,"fflags","","",36,null],[12,"data","","",36,null],[12,"udata","","",36,null],[3,"kevent64_s","","",null,null],[12,"ident","","",37,null],[12,"filter","","",37,null],[12,"flags","","",37,null],[12,"fflags","","",37,null],[12,"data","","",37,null],[12,"udata","","",37,null],[12,"ext","","",37,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",38,null],[12,"dqb_bsoftlimit","","",38,null],[12,"dqb_curbytes","","",38,null],[12,"dqb_ihardlimit","","",38,null],[12,"dqb_isoftlimit","","",38,null],[12,"dqb_curinodes","","",38,null],[12,"dqb_btime","","",38,null],[12,"dqb_itime","","",38,null],[12,"dqb_id","","",38,null],[12,"dqb_spare","","",38,null],[3,"termios","","",null,null],[12,"c_iflag","","",39,null],[12,"c_oflag","","",39,null],[12,"c_cflag","","",39,null],[12,"c_lflag","","",39,null],[12,"c_cc","","",39,null],[12,"c_ispeed","","",39,null],[12,"c_ospeed","","",39,null],[3,"flock","","",null,null],[12,"l_start","","",40,null],[12,"l_len","","",40,null],[12,"l_pid","","",40,null],[12,"l_type","","",40,null],[12,"l_whence","","",40,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",41,null],[12,"hdr_cnt","","",41,null],[12,"trailers","","",41,null],[12,"trl_cnt","","",41,null],[3,"lconv","","",null,null],[12,"decimal_point","","",42,null],[12,"thousands_sep","","",42,null],[12,"grouping","","",42,null],[12,"int_curr_symbol","","",42,null],[12,"currency_symbol","","",42,null],[12,"mon_decimal_point","","",42,null],[12,"mon_thousands_sep","","",42,null],[12,"mon_grouping","","",42,null],[12,"positive_sign","","",42,null],[12,"negative_sign","","",42,null],[12,"int_frac_digits","","",42,null],[12,"frac_digits","","",42,null],[12,"p_cs_precedes","","",42,null],[12,"p_sep_by_space","","",42,null],[12,"n_cs_precedes","","",42,null],[12,"n_sep_by_space","","",42,null],[12,"p_sign_posn","","",42,null],[12,"n_sign_posn","","",42,null],[12,"int_p_cs_precedes","","",42,null],[12,"int_n_cs_precedes","","",42,null],[12,"int_p_sep_by_space","","",42,null],[12,"int_n_sep_by_space","","",42,null],[12,"int_p_sign_posn","","",42,null],[12,"int_n_sign_posn","","",42,null],[3,"pthread_attr_t","","",null,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"_WSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwuid_r","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"shm_open","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",43,null],[11,"is_none","","Returns `true` if the option is a `None` value",43,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",43,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",43,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",43,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",43,null],[11,"unwrap_or","","Returns the contained value or a default.",43,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",43,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",43,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",43,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",43,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",43,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",43,null],[11,"iter","","Returns an iterator over the possibly contained value.",43,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",43,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",43,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",43,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",43,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",43,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",43,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",43,null],[11,"unwrap_or_default","","Returns the contained value or a default",43,null],[11,"hash","core::num","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",44,null],[11,"cmp","","",44,null],[11,"partial_cmp","","",44,null],[11,"lt","","",44,null],[11,"le","","",44,null],[11,"gt","","",44,null],[11,"ge","","",44,null],[11,"eq","","",44,null],[11,"ne","","",44,null],[11,"fmt","","",44,null],[11,"fmt","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"shl","","",44,null],[11,"shl_assign","","",44,null],[11,"shr","","",44,null],[11,"shr_assign","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"add","","",44,null],[11,"add_assign","","",44,null],[11,"sub","","",44,null],[11,"sub_assign","","",44,null],[11,"mul","","",44,null],[11,"mul_assign","","",44,null],[11,"div","","",44,null],[11,"div_assign","","",44,null],[11,"rem","","",44,null],[11,"rem_assign","","",44,null],[11,"not","","",44,null],[11,"bitxor","","",44,null],[11,"bitxor_assign","","",44,null],[11,"bitor","","",44,null],[11,"bitor_assign","","",44,null],[11,"bitand","","",44,null],[11,"bitand_assign","","",44,null],[11,"neg","","",44,null],[11,"eq","core::num::dec2flt","",45,null],[11,"ne","","",45,null],[11,"clone","","",45,null],[11,"fmt","","",45,null],[11,"fmt","","",45,null],[11,"fmt","core::num","",46,null],[11,"eq","","",46,null],[11,"clone","","",46,null],[11,"clone","","",47,null],[11,"fmt","","",47,null],[11,"fmt","","",47,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"clone","","",48,null],[11,"fmt","","",48,null],[11,"fmt","","",48,null],[11,"hash","core::nonzero","",49,null],[11,"fmt","","",49,null],[11,"partial_cmp","","",49,null],[11,"lt","","",49,null],[11,"le","","",49,null],[11,"gt","","",49,null],[11,"ge","","",49,null],[11,"cmp","","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"clone","","",49,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",49,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",49,null],[11,"new","core::ptr","Creates a new `Unique`.",50,null],[11,"get","","Dereferences the content.",50,null],[11,"get_mut","","Mutably dereferences the content.",50,null],[11,"deref","","",50,null],[11,"fmt","","",50,null],[11,"new","","Creates a new `Shared`.",51,null],[11,"clone","","",51,null],[11,"deref","","",51,null],[11,"fmt","","",51,null],[11,"hash","core::marker","",52,null],[11,"eq","","",52,null],[11,"partial_cmp","","",52,null],[11,"cmp","","",52,null],[11,"clone","","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",53,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"eq","","",54,null],[11,"ne","","",54,null],[11,"clone","","",54,null],[11,"fmt","","",54,null],[11,"contains","","# Examples",54,null],[11,"eq","","",55,null],[11,"ne","","",55,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"contains","","# Examples",55,null],[11,"eq","","",56,null],[11,"ne","","",56,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"contains","","# Examples",56,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"from","","",57,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",57,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"fmt","","",58,null],[11,"contains","","# Examples",58,null],[11,"hash","core::cmp","",59,null],[11,"fmt","","",59,null],[11,"eq","","",59,null],[11,"clone","","",59,null],[11,"reverse","","Reverse the `Ordering`.",59,null],[11,"cmp","","",59,null],[11,"partial_cmp","","",59,null],[11,"fmt","libc","",60,null],[11,"fmt","","",60,null],[11,"is","","Returns true if the boxed type is the same as `T`",60,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",60,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",60,null],[11,"is","","Forwards to the method defined on the type `Any`.",60,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",60,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",60,null],[11,"hash","core::any","",61,null],[11,"fmt","","",61,null],[11,"eq","","",61,null],[11,"ne","","",61,null],[11,"clone","","",61,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",61,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",62,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",63,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",64,null],[11,"clone","","",64,null],[11,"new","","Creates a new `AtomicBool`.",62,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",62,null],[11,"store","","Stores a value into the bool.",62,null],[11,"swap","","Stores a value into the bool, returning the old value.",62,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",62,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",62,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",62,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",62,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",62,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",62,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",62,null],[11,"new","","Creates a new `AtomicPtr`.",63,null],[11,"load","","Loads a value from the pointer.",63,null],[11,"store","","Stores a value into the pointer.",63,null],[11,"swap","","Stores a value into the pointer, returning the old value.",63,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",63,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",63,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",63,null],[11,"default","","",65,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",65,null],[11,"new","","Creates a new atomic integer.",65,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",65,null],[11,"store","","Stores a value into the atomic integer.",65,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",65,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",65,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",65,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",65,null],[11,"fetch_add","","Add to the current value, returning the previous value.",65,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",65,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",65,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",65,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",65,null],[11,"default","","",66,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",66,null],[11,"new","","Creates a new atomic integer.",66,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",66,null],[11,"store","","Stores a value into the atomic integer.",66,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",66,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",66,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",66,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",66,null],[11,"fetch_add","","Add to the current value, returning the previous value.",66,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",66,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",66,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",66,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",66,null],[11,"default","","",67,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",67,null],[11,"new","","Creates a new atomic integer.",67,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",67,null],[11,"store","","Stores a value into the atomic integer.",67,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",67,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",67,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",67,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",67,null],[11,"fetch_add","","Add to the current value, returning the previous value.",67,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",67,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",67,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",67,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",67,null],[11,"default","","",68,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",68,null],[11,"new","","Creates a new atomic integer.",68,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",68,null],[11,"store","","Stores a value into the atomic integer.",68,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",68,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",68,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",68,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",68,null],[11,"fetch_add","","Add to the current value, returning the previous value.",68,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",68,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",68,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",68,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",68,null],[11,"default","","",69,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",69,null],[11,"new","","Creates a new atomic integer.",69,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",69,null],[11,"store","","Stores a value into the atomic integer.",69,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",69,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",69,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",69,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",69,null],[11,"fetch_add","","Add to the current value, returning the previous value.",69,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",69,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",69,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",69,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",69,null],[11,"default","","",70,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",70,null],[11,"new","","Creates a new atomic integer.",70,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",70,null],[11,"store","","Stores a value into the atomic integer.",70,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",70,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",70,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",70,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",70,null],[11,"fetch_add","","Add to the current value, returning the previous value.",70,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",70,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",70,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",70,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",70,null],[11,"default","","",71,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",71,null],[11,"new","","Creates a new atomic integer.",71,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",71,null],[11,"store","","Stores a value into the atomic integer.",71,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",71,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",71,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",71,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",71,null],[11,"fetch_add","","Add to the current value, returning the previous value.",71,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",71,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",71,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",71,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",71,null],[11,"default","","",72,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",72,null],[11,"new","","Creates a new atomic integer.",72,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",72,null],[11,"store","","Stores a value into the atomic integer.",72,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",72,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",72,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",72,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",72,null],[11,"fetch_add","","Add to the current value, returning the previous value.",72,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",72,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",72,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",72,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",72,null],[11,"default","","",73,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",73,null],[11,"new","","Creates a new atomic integer.",73,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",73,null],[11,"store","","Stores a value into the atomic integer.",73,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",73,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",73,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",73,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",73,null],[11,"fetch_add","","Add to the current value, returning the previous value.",73,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",73,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",73,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",73,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",73,null],[11,"default","","",74,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",74,null],[11,"new","","Creates a new atomic integer.",74,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",74,null],[11,"store","","Stores a value into the atomic integer.",74,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",74,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",74,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",74,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",74,null],[11,"fetch_add","","Add to the current value, returning the previous value.",74,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",74,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",74,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",74,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",74,null],[11,"fmt","","",62,null],[11,"fmt","","",63,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",75,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",75,null],[11,"set","","Sets the contained value.",75,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",75,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",75,null],[11,"clone","","",75,null],[11,"default","","",75,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",75,null],[11,"partial_cmp","","",75,null],[11,"lt","","",75,null],[11,"le","","",75,null],[11,"gt","","",75,null],[11,"ge","","",75,null],[11,"cmp","","",75,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"clone","","",76,null],[11,"new","","Creates a new `RefCell` containing `value`.",77,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",77,null],[11,"borrow_state","","Query the current state of this `RefCell`",77,null],[11,"borrow","","Immutably borrows the wrapped value.",77,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",77,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",77,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",77,null],[11,"clone","","",77,null],[11,"default","","",77,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",77,null],[11,"partial_cmp","","",77,null],[11,"lt","","",77,null],[11,"le","","",77,null],[11,"gt","","",77,null],[11,"ge","","",77,null],[11,"cmp","","",77,null],[11,"deref","","",78,null],[11,"clone","","Copies a `Ref`.",78,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",78,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",78,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",79,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",79,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",79,null],[11,"deref_mut","","",79,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",80,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",80,null],[11,"get","","Gets a mutable pointer to the wrapped value.",80,null],[11,"default","","",80,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"last","","",81,null],[11,"fmt","","",82,null],[11,"clone","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"fmt","","",83,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"fmt","","",84,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",84,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"fmt","core::iter::range","",85,null],[11,"clone","","",85,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",55,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",54,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",57,null],[11,"next","core::iter::range","",85,null],[11,"size_hint","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"next","core::ops","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"next","","",55,null],[11,"next","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","core::iter::sources","",86,null],[11,"clone","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"next_back","","",86,null],[11,"fmt","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"next_back","","",87,null],[11,"len","","",87,null],[11,"clone","","",87,null],[11,"default","","",87,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"next","","",88,null],[11,"size_hint","","",88,null],[11,"next_back","","",88,null],[11,"len","","",88,null],[11,"fmt","core::iter","",89,null],[11,"clone","","",89,null],[11,"next","","",89,null],[11,"size_hint","","",89,null],[11,"next_back","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"count","","",92,null],[11,"nth","","",92,null],[11,"find","","",92,null],[11,"last","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"clone","","",94,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"size_hint","","",94,null],[11,"next_back","","",94,null],[11,"clone","","",95,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"size_hint","","",95,null],[11,"next_back","","",95,null],[11,"clone","","",96,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"next_back","","",96,null],[11,"fmt","","",97,null],[11,"clone","","",97,null],[11,"next","","# Overflow Behavior",97,null],[11,"size_hint","","",97,null],[11,"nth","","",97,null],[11,"count","","",97,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"clone","","",98,null],[11,"next","","",98,null],[11,"count","","",98,null],[11,"nth","","",98,null],[11,"last","","",98,null],[11,"size_hint","","",98,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",98,null],[11,"is_empty","","Checks if the iterator has finished iterating.",98,null],[11,"clone","","",99,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"clone","","",100,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"fmt","","",101,null],[11,"clone","","",101,null],[11,"next","","",101,null],[11,"nth","","",101,null],[11,"count","","",101,null],[11,"last","","",101,null],[11,"size_hint","","",101,null],[11,"next_back","","",101,null],[11,"fmt","","",102,null],[11,"clone","","",102,null],[11,"next","","",102,null],[11,"nth","","",102,null],[11,"size_hint","","",102,null],[11,"clone","","",103,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"size_hint","","",103,null],[11,"clone","","",104,null],[11,"fmt","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"nth","","",105,null],[11,"last","","",105,null],[11,"count","","",105,null],[11,"size_hint","","",105,null],[11,"next_back","","",105,null],[11,"clone","","",106,null],[11,"fmt","","",106,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"next_back","","",106,null],[11,"hash","core::option","",43,null],[11,"fmt","","",43,null],[11,"cmp","","",43,null],[11,"partial_cmp","","",43,null],[11,"lt","","",43,null],[11,"le","","",43,null],[11,"gt","","",43,null],[11,"ge","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",43,null],[11,"fmt","","",107,null],[11,"next","","",107,null],[11,"size_hint","","",107,null],[11,"next_back","","",107,null],[11,"clone","","",107,null],[11,"fmt","","",108,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"next_back","","",108,null],[11,"fmt","","",109,null],[11,"clone","","",109,null],[11,"next","","",109,null],[11,"size_hint","","",109,null],[11,"next_back","","",109,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",43,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",110,null],[11,"clone","","",111,null],[11,"hash","core::result","",112,null],[11,"fmt","","",112,null],[11,"cmp","","",112,null],[11,"partial_cmp","","",112,null],[11,"lt","","",112,null],[11,"le","","",112,null],[11,"gt","","",112,null],[11,"ge","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"clone","","",112,null],[11,"is_ok","","Returns true if the result is `Ok`",112,null],[11,"is_err","","Returns true if the result is `Err`",112,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",112,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",112,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",112,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",112,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",112,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",112,null],[11,"iter","","Returns an iterator over the possibly contained value.",112,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",112,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",112,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",112,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",112,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",112,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",112,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",112,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",112,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",112,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",112,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",112,null],[11,"fmt","","",113,null],[11,"next","","",113,null],[11,"size_hint","","",113,null],[11,"next_back","","",113,null],[11,"clone","","",113,null],[11,"fmt","","",114,null],[11,"next","","",114,null],[11,"size_hint","","",114,null],[11,"next_back","","",114,null],[11,"fmt","","",115,null],[11,"next","","",115,null],[11,"size_hint","","",115,null],[11,"next_back","","",115,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",112,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",116,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",116,null],[11,"next","","",116,null],[11,"size_hint","","",116,null],[11,"count","","",116,null],[11,"nth","","",116,null],[11,"last","","",116,null],[11,"next_back","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",117,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",117,null],[11,"next","","",117,null],[11,"size_hint","","",117,null],[11,"count","","",117,null],[11,"nth","","",117,null],[11,"last","","",117,null],[11,"next_back","","",117,null],[11,"fmt","","",118,null],[11,"clone","","",118,null],[11,"next","","",118,null],[11,"size_hint","","",118,null],[11,"next_back","","",118,null],[11,"fmt","","",119,null],[11,"next","","",119,null],[11,"size_hint","","",119,null],[11,"next_back","","",119,null],[11,"fmt","","",120,null],[11,"fmt","","",121,null],[11,"fmt","","",122,null],[11,"fmt","","",123,null],[11,"next","","",120,null],[11,"size_hint","","",120,null],[11,"next","","",121,null],[11,"size_hint","","",121,null],[11,"next","","",122,null],[11,"size_hint","","",122,null],[11,"next","","",123,null],[11,"size_hint","","",123,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"next","","",124,null],[11,"size_hint","","",124,null],[11,"count","","",124,null],[11,"nth","","",124,null],[11,"last","","",124,null],[11,"next_back","","",124,null],[11,"fmt","","",125,null],[11,"clone","","",125,null],[11,"next","","",125,null],[11,"size_hint","","",125,null],[11,"count","","",125,null],[11,"nth","","",125,null],[11,"last","","",125,null],[11,"next_back","","",125,null],[11,"fmt","","",126,null],[11,"next","","",126,null],[11,"size_hint","","",126,null],[11,"count","","",126,null],[11,"nth","","",126,null],[11,"last","","",126,null],[11,"next_back","","",126,null],[11,"fmt","core::str::pattern","",127,null],[11,"eq","","",127,null],[11,"ne","","",127,null],[11,"clone","","",127,null],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"haystack","","",128,null],[11,"next","","",128,null],[11,"next_match","","",128,null],[11,"next_reject","","",128,null],[11,"next_back","","",128,null],[11,"next_match_back","","",128,null],[11,"next_reject_back","","",128,null],[11,"fmt","","",129,null],[11,"clone","","",129,null],[11,"haystack","","",129,null],[11,"next","","",129,null],[11,"next_match","","",129,null],[11,"next_reject","","",129,null],[11,"next_back","","",129,null],[11,"next_match_back","","",129,null],[11,"next_reject_back","","",129,null],[11,"clone","","",130,null],[11,"fmt","","",130,null],[11,"haystack","","",130,null],[11,"next","","",130,null],[11,"next_match","","",130,null],[11,"next_reject","","",130,null],[11,"next_back","","",130,null],[11,"next_match_back","","",130,null],[11,"next_reject_back","","",130,null],[11,"fmt","","",131,null],[11,"clone","","",131,null],[11,"haystack","","",131,null],[11,"next","","",131,null],[11,"next_match","","",131,null],[11,"next_back","","",131,null],[11,"next_match_back","","",131,null],[11,"eq","core::str","",132,null],[11,"ne","","",132,null],[11,"clone","","",132,null],[11,"fmt","","",132,null],[11,"fmt","","",132,null],[11,"fmt","","",133,null],[11,"clone","","",133,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",133,null],[11,"fmt","","",133,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"next","","",134,null],[11,"size_hint","","",134,null],[11,"next_back","","",134,null],[11,"as_str","","View the underlying data as a subslice of the original data.",134,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"next","","",135,null],[11,"size_hint","","",135,null],[11,"next_back","","",135,null],[11,"as_str","","View the underlying data as a subslice of the original data.",135,null],[11,"fmt","","",136,null],[11,"clone","","",136,null],[11,"next","","",136,null],[11,"size_hint","","",136,null],[11,"count","","",136,null],[11,"last","","",136,null],[11,"nth","","",136,null],[11,"next_back","","",136,null],[11,"len","","",136,null],[11,"fmt","","",137,null],[11,"next","","",137,null],[11,"clone","","",137,null],[11,"fmt","","",138,null],[11,"next","","",138,null],[11,"clone","","",138,null],[11,"next_back","","",137,null],[11,"next_back","","",138,null],[11,"fmt","","",139,null],[11,"next","","",139,null],[11,"clone","","",139,null],[11,"fmt","","",140,null],[11,"next","","",140,null],[11,"clone","","",140,null],[11,"next_back","","",139,null],[11,"next_back","","",140,null],[11,"fmt","","",141,null],[11,"next","","",141,null],[11,"clone","","",141,null],[11,"fmt","","",142,null],[11,"next","","",142,null],[11,"clone","","",142,null],[11,"fmt","","",143,null],[11,"next","","",143,null],[11,"clone","","",143,null],[11,"fmt","","",144,null],[11,"next","","",144,null],[11,"clone","","",144,null],[11,"next_back","","",143,null],[11,"next_back","","",144,null],[11,"fmt","","",145,null],[11,"next","","",145,null],[11,"clone","","",145,null],[11,"fmt","","",146,null],[11,"next","","",146,null],[11,"clone","","",146,null],[11,"next_back","","",145,null],[11,"next_back","","",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"next","","",147,null],[11,"size_hint","","",147,null],[11,"next_back","","",147,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"next","","",148,null],[11,"size_hint","","",148,null],[11,"next_back","","",148,null],[11,"fmt","","",149,null],[11,"clone","","",149,null],[11,"fmt","core::hash::sip","",150,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",150,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",150,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",150,null],[11,"finish","","",150,null],[11,"clone","","",150,null],[11,"default","","",150,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",151,null],[11,"build_hasher","","",151,null],[11,"clone","","",151,null],[11,"default","","",151,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",152,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",153,null],[11,"finish","","Finishes output and returns any error encountered.",153,null],[11,"field","","Adds a new field to the generated tuple struct output.",154,null],[11,"finish","","Finishes output and returns any error encountered.",154,null],[11,"entry","","Adds a new entry to the set output.",155,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",155,null],[11,"finish","","Finishes output and returns any error encountered.",155,null],[11,"entry","","Adds a new entry to the list output.",156,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",156,null],[11,"finish","","Finishes output and returns any error encountered.",156,null],[11,"entry","","Adds a new entry to the map output.",157,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",157,null],[11,"finish","","Finishes output and returns any error encountered.",157,null],[11,"partial_cmp","core::fmt","",158,null],[11,"eq","","",158,null],[11,"cmp","","",158,null],[11,"hash","","",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",158,null],[11,"clone","","",158,null],[11,"clone","","",159,null],[11,"fmt","","",159,null],[11,"fmt","","",159,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",160,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",160,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",160,null],[11,"write_fmt","","Writes some formatted information into this instance",160,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",160,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",160,null],[11,"align","","Flag indicating what form of alignment was requested",160,null],[11,"width","","Optionally specified integer width that the output should be",160,null],[11,"precision","","Optionally specified precision for numeric types",160,null],[11,"sign_plus","","Determines if the `+` flag was specified.",160,null],[11,"sign_minus","","Determines if the `-` flag was specified.",160,null],[11,"alternate","","Determines if the `#` flag was specified.",160,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",160,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",160,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",160,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",160,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",160,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",160,null],[11,"write_str","","",160,null],[11,"write_char","","",160,null],[11,"write_fmt","","",160,null],[11,"fmt","","",158,null],[11,"fmt","core::marker","",52,null],[11,"fmt","core::cell","",75,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"fmt","","",80,null],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",161,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",161,null],[11,"clone","libc","",162,null],[11,"clone","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"clone","","",25,null],[11,"clone","","",26,null],[11,"clone","","",163,null],[11,"clone","","",164,null],[11,"clone","","",165,null],[11,"clone","","",166,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"clone","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"clone","","",32,null],[11,"clone","","",33,null],[11,"clone","","",34,null],[11,"clone","","",35,null],[11,"clone","","",36,null],[11,"clone","","",37,null],[11,"clone","","",38,null],[11,"clone","","",39,null],[11,"clone","","",40,null],[11,"clone","","",41,null],[11,"clone","","",42,null],[11,"clone","","",13,null],[11,"clone","","",14,null],[11,"clone","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"clone","","",167,null],[11,"clone","","",18,null],[11,"clone","","",19,null],[11,"clone","","",20,null],[11,"clone","","",168,null],[11,"clone","","",0,null],[11,"clone","","",1,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"clone","","",4,null],[11,"clone","","",5,null],[11,"clone","","",6,null],[11,"clone","","",7,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"clone","","",10,null],[11,"clone","","",11,null],[11,"clone","","",12,null],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NCCS","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"WNOHANG","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_SYSCOUNT","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_REPARENTED","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_REAP","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDENABLE_BG_TRACE","","",null,null],[17,"KERN_KDDISABLE_BG_TRACE","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"utsname"],[3,"msghdr"],[3,"glob_t"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"dirent"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"statfs"],[3,"kevent"],[3,"kevent64_s"],[3,"dqblk"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[4,"Option"],[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"pthread_mutex_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"pthread_rwlock_t"],[3,"fd_set"],[3,"fsid_t"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[0,"isize","bitflags::__core","The pointer-sized signed integer type.",null,null],[17,"MIN","bitflags::__core::isize","",null,null],[17,"MAX","","",null,null],[0,"i8","bitflags::__core","The 8-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i8","",null,null],[17,"MAX","","",null,null],[0,"i16","bitflags::__core","The 16-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i16","",null,null],[17,"MAX","","",null,null],[0,"i32","bitflags::__core","The 32-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i32","",null,null],[17,"MAX","","",null,null],[0,"i64","bitflags::__core","The 64-bit signed integer type.",null,null],[17,"MIN","bitflags::__core::i64","",null,null],[17,"MAX","","",null,null],[0,"usize","bitflags::__core","The pointer-sized unsigned integer type.",null,null],[17,"MIN","bitflags::__core::usize","",null,null],[17,"MAX","","",null,null],[0,"u8","bitflags::__core","The 8-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u8","",null,null],[17,"MAX","","",null,null],[0,"u16","bitflags::__core","The 16-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u16","",null,null],[17,"MAX","","",null,null],[0,"u32","bitflags::__core","The 32-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u32","",null,null],[17,"MAX","","",null,null],[0,"u64","bitflags::__core","The 64-bit unsigned integer type.",null,null],[17,"MIN","bitflags::__core::u64","",null,null],[17,"MAX","","",null,null],[0,"f32","bitflags::__core","Operations and constants for 32-bits floats (`f32` type)",null,null],[17,"RADIX","bitflags::__core::f32","",null,null],[17,"MANTISSA_DIGITS","","",null,null],[17,"DIGITS","","",null,null],[17,"EPSILON","","",null,null],[17,"MIN","","Smallest finite f32 value",null,null],[17,"MIN_POSITIVE","","Smallest positive, normalized f32 value",null,null],[17,"MAX","","Largest finite f32 value",null,null],[17,"MIN_EXP","","",null,null],[17,"MAX_EXP","","",null,null],[17,"MIN_10_EXP","","",null,null],[17,"MAX_10_EXP","","",null,null],[17,"NAN","","",null,null],[17,"INFINITY","","",null,null],[17,"NEG_INFINITY","","",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","bitflags::__core::f32::consts","Archimedes&#39; constant",null,null],[17,"FRAC_PI_2","","pi/2.0",null,null],[17,"FRAC_PI_3","","pi/3.0",null,null],[17,"FRAC_PI_4","","pi/4.0",null,null],[17,"FRAC_PI_6","","pi/6.0",null,null],[17,"FRAC_PI_8","","pi/8.0",null,null],[17,"FRAC_1_PI","","1.0/pi",null,null],[17,"FRAC_2_PI","","2.0/pi",null,null],[17,"FRAC_2_SQRT_PI","","2.0/sqrt(pi)",null,null],[17,"SQRT_2","","sqrt(2.0)",null,null],[17,"FRAC_1_SQRT_2","","1.0/sqrt(2.0)",null,null],[17,"E","","Euler&#39;s number",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2.0)",null,null],[17,"LN_10","","ln(10.0)",null,null],[0,"f64","bitflags::__core","Operations and constants for 64-bits floats (`f64` type)",null,null],[17,"RADIX","bitflags::__core::f64","",null,null],[17,"MANTISSA_DIGITS","","",null,null],[17,"DIGITS","","",null,null],[17,"EPSILON","","",null,null],[17,"MIN","","Smallest finite f64 value",null,null],[17,"MIN_POSITIVE","","Smallest positive, normalized f64 value",null,null],[17,"MAX","","Largest finite f64 value",null,null],[17,"MIN_EXP","","",null,null],[17,"MAX_EXP","","",null,null],[17,"MIN_10_EXP","","",null,null],[17,"MAX_10_EXP","","",null,null],[17,"NAN","","",null,null],[17,"INFINITY","","",null,null],[17,"NEG_INFINITY","","",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","bitflags::__core::f64::consts","Archimedes&#39; constant",null,null],[17,"FRAC_PI_2","","pi/2.0",null,null],[17,"FRAC_PI_3","","pi/3.0",null,null],[17,"FRAC_PI_4","","pi/4.0",null,null],[17,"FRAC_PI_6","","pi/6.0",null,null],[17,"FRAC_PI_8","","pi/8.0",null,null],[17,"FRAC_1_PI","","1.0/pi",null,null],[17,"FRAC_2_PI","","2.0/pi",null,null],[17,"FRAC_2_SQRT_PI","","2.0/sqrt(pi)",null,null],[17,"SQRT_2","","sqrt(2.0)",null,null],[17,"FRAC_1_SQRT_2","","1.0/sqrt(2.0)",null,null],[17,"E","","Euler&#39;s number",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2.0)",null,null],[17,"LN_10","","ln(10.0)",null,null],[0,"num","bitflags::__core","Numeric traits and functions for the built-in numeric types.",null,null],[11,"hash","core::num","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"gt","","",0,null],[11,"ge","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"shl","","",0,null],[11,"shl_assign","","",0,null],[11,"shr","","",0,null],[11,"shr_assign","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"add","","",0,null],[11,"add_assign","","",0,null],[11,"sub","","",0,null],[11,"sub_assign","","",0,null],[11,"mul","","",0,null],[11,"mul_assign","","",0,null],[11,"div","","",0,null],[11,"div_assign","","",0,null],[11,"rem","","",0,null],[11,"rem_assign","","",0,null],[11,"not","","",0,null],[11,"bitxor","","",0,null],[11,"bitxor_assign","","",0,null],[11,"bitor","","",0,null],[11,"bitor_assign","","",0,null],[11,"bitand","","",0,null],[11,"bitand_assign","","",0,null],[11,"neg","","",0,null],[11,"eq","core::num::dec2flt","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","core::num","",2,null],[11,"eq","","",2,null],[11,"clone","","",2,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"hash","core::nonzero","",5,null],[11,"fmt","","",5,null],[11,"partial_cmp","","",5,null],[11,"lt","","",5,null],[11,"le","","",5,null],[11,"gt","","",5,null],[11,"ge","","",5,null],[11,"cmp","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",5,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",5,null],[11,"new","core::ptr","Creates a new `Unique`.",6,null],[11,"get","","Dereferences the content.",6,null],[11,"get_mut","","Mutably dereferences the content.",6,null],[11,"deref","","",6,null],[11,"fmt","","",6,null],[11,"new","","Creates a new `Shared`.",7,null],[11,"clone","","",7,null],[11,"deref","","",7,null],[11,"fmt","","",7,null],[11,"hash","core::marker","",8,null],[11,"eq","","",8,null],[11,"partial_cmp","","",8,null],[11,"cmp","","",8,null],[11,"clone","","",8,null],[11,"default","","",8,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"contains","","# Examples",10,null],[11,"eq","","",11,null],[11,"ne","","",11,null],[11,"clone","","",11,null],[11,"fmt","","",11,null],[11,"contains","","# Examples",11,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"fmt","","",12,null],[11,"contains","","# Examples",12,null],[11,"eq","","",13,null],[11,"ne","","",13,null],[11,"clone","","",13,null],[11,"fmt","","",13,null],[11,"from","","",13,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",13,null],[11,"eq","","",14,null],[11,"ne","","",14,null],[11,"clone","","",14,null],[11,"fmt","","",14,null],[11,"contains","","# Examples",14,null],[11,"hash","core::cmp","",15,null],[11,"fmt","","",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"reverse","","Reverse the `Ordering`.",15,null],[11,"cmp","","",15,null],[11,"partial_cmp","","",15,null],[11,"fmt","bitflags::__core","",16,null],[11,"fmt","","",16,null],[11,"is","","Returns true if the boxed type is the same as `T`",16,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",16,null],[11,"is","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",16,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",16,null],[11,"hash","core::any","",17,null],[11,"fmt","","",17,null],[11,"eq","","",17,null],[11,"ne","","",17,null],[11,"clone","","",17,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",17,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",18,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",19,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",20,null],[11,"clone","","",20,null],[11,"new","","Creates a new `AtomicBool`.",18,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",18,null],[11,"store","","Stores a value into the bool.",18,null],[11,"swap","","Stores a value into the bool, returning the old value.",18,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",18,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",18,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",18,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",18,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",18,null],[11,"new","","Creates a new `AtomicPtr`.",19,null],[11,"load","","Loads a value from the pointer.",19,null],[11,"store","","Stores a value into the pointer.",19,null],[11,"swap","","Stores a value into the pointer, returning the old value.",19,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",19,null],[11,"default","","",21,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",21,null],[11,"new","","Creates a new atomic integer.",21,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",21,null],[11,"store","","Stores a value into the atomic integer.",21,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",21,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",21,null],[11,"fetch_add","","Add to the current value, returning the previous value.",21,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",21,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",21,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",21,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",21,null],[11,"default","","",22,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",22,null],[11,"new","","Creates a new atomic integer.",22,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",22,null],[11,"store","","Stores a value into the atomic integer.",22,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",22,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",22,null],[11,"fetch_add","","Add to the current value, returning the previous value.",22,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",22,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",22,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",22,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",22,null],[11,"default","","",23,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",23,null],[11,"new","","Creates a new atomic integer.",23,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",23,null],[11,"store","","Stores a value into the atomic integer.",23,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",23,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",23,null],[11,"fetch_add","","Add to the current value, returning the previous value.",23,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",23,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",23,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",23,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",23,null],[11,"default","","",24,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",24,null],[11,"new","","Creates a new atomic integer.",24,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",24,null],[11,"store","","Stores a value into the atomic integer.",24,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",24,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",24,null],[11,"fetch_add","","Add to the current value, returning the previous value.",24,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",24,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",24,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",24,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",24,null],[11,"default","","",25,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",25,null],[11,"new","","Creates a new atomic integer.",25,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",25,null],[11,"store","","Stores a value into the atomic integer.",25,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",25,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",25,null],[11,"fetch_add","","Add to the current value, returning the previous value.",25,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",25,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",25,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",25,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",25,null],[11,"default","","",26,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",26,null],[11,"new","","Creates a new atomic integer.",26,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",26,null],[11,"store","","Stores a value into the atomic integer.",26,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",26,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",26,null],[11,"fetch_add","","Add to the current value, returning the previous value.",26,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",26,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",26,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",26,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",26,null],[11,"default","","",27,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",27,null],[11,"new","","Creates a new atomic integer.",27,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",27,null],[11,"store","","Stores a value into the atomic integer.",27,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",27,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",27,null],[11,"fetch_add","","Add to the current value, returning the previous value.",27,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",27,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",27,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",27,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",27,null],[11,"default","","",28,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",28,null],[11,"new","","Creates a new atomic integer.",28,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",28,null],[11,"store","","Stores a value into the atomic integer.",28,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",28,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",28,null],[11,"fetch_add","","Add to the current value, returning the previous value.",28,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",28,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",28,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",28,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",28,null],[11,"default","","",29,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",29,null],[11,"new","","Creates a new atomic integer.",29,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",29,null],[11,"store","","Stores a value into the atomic integer.",29,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",29,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",29,null],[11,"fetch_add","","Add to the current value, returning the previous value.",29,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",29,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",29,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",29,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",29,null],[11,"default","","",30,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",30,null],[11,"new","","Creates a new atomic integer.",30,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",30,null],[11,"store","","Stores a value into the atomic integer.",30,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",30,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",30,null],[11,"fetch_add","","Add to the current value, returning the previous value.",30,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",30,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",30,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",30,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",30,null],[11,"fmt","","",18,null],[11,"fmt","","",19,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",31,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",31,null],[11,"set","","Sets the contained value.",31,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",31,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",31,null],[11,"clone","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",31,null],[11,"partial_cmp","","",31,null],[11,"lt","","",31,null],[11,"le","","",31,null],[11,"gt","","",31,null],[11,"ge","","",31,null],[11,"cmp","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"clone","","",32,null],[11,"new","","Creates a new `RefCell` containing `value`.",33,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",33,null],[11,"borrow_state","","Query the current state of this `RefCell`",33,null],[11,"borrow","","Immutably borrows the wrapped value.",33,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",33,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",33,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",33,null],[11,"clone","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",33,null],[11,"partial_cmp","","",33,null],[11,"lt","","",33,null],[11,"le","","",33,null],[11,"gt","","",33,null],[11,"ge","","",33,null],[11,"cmp","","",33,null],[11,"deref","","",34,null],[11,"clone","","Copies a `Ref`.",34,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",34,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",34,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",35,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",35,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",35,null],[11,"deref_mut","","",35,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",36,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",36,null],[11,"get","","Gets a mutable pointer to the wrapped value.",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::char","",37,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"last","","",37,null],[11,"fmt","","",38,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"count","","",38,null],[11,"nth","","",38,null],[11,"last","","",38,null],[11,"fmt","","",39,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"fmt","","",40,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"fmt","core::iter::range","",41,null],[11,"clone","","",41,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",11,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",10,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",13,null],[11,"next","core::iter::range","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","","",41,null],[11,"size_hint","","",41,null],[11,"next","core::ops","",10,null],[11,"size_hint","","",10,null],[11,"next_back","","",10,null],[11,"next","","",11,null],[11,"next","","",13,null],[11,"size_hint","","",13,null],[11,"next_back","","",13,null],[11,"fmt","core::iter::sources","",42,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"fmt","","",43,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"len","","",43,null],[11,"clone","","",43,null],[11,"default","","",43,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",44,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"len","","",44,null],[11,"fmt","core::iter","",45,null],[11,"clone","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"next","","",46,null],[11,"size_hint","","",46,null],[11,"next_back","","",46,null],[11,"fmt","","",47,null],[11,"clone","","",47,null],[11,"next","","",47,null],[11,"size_hint","","",47,null],[11,"fmt","","",48,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"count","","",48,null],[11,"nth","","",48,null],[11,"find","","",48,null],[11,"last","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"fmt","","",49,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"clone","","",50,null],[11,"fmt","","",50,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"clone","","",51,null],[11,"fmt","","",51,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"clone","","",52,null],[11,"fmt","","",52,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"fmt","","",53,null],[11,"clone","","",53,null],[11,"next","","# Overflow Behavior",53,null],[11,"size_hint","","",53,null],[11,"nth","","",53,null],[11,"count","","",53,null],[11,"next_back","","",53,null],[11,"fmt","","",54,null],[11,"clone","","",54,null],[11,"next","","",54,null],[11,"count","","",54,null],[11,"nth","","",54,null],[11,"last","","",54,null],[11,"size_hint","","",54,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",54,null],[11,"is_empty","","Checks if the iterator has finished iterating.",54,null],[11,"clone","","",55,null],[11,"fmt","","",55,null],[11,"next","","",55,null],[11,"size_hint","","",55,null],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"next","","",56,null],[11,"size_hint","","",56,null],[11,"fmt","","",57,null],[11,"clone","","",57,null],[11,"next","","",57,null],[11,"nth","","",57,null],[11,"count","","",57,null],[11,"last","","",57,null],[11,"size_hint","","",57,null],[11,"next_back","","",57,null],[11,"fmt","","",58,null],[11,"clone","","",58,null],[11,"next","","",58,null],[11,"nth","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"fmt","","",59,null],[11,"next","","",59,null],[11,"size_hint","","",59,null],[11,"clone","","",60,null],[11,"fmt","","",60,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"next_back","","",60,null],[11,"fmt","","",61,null],[11,"clone","","",61,null],[11,"next","","",61,null],[11,"nth","","",61,null],[11,"last","","",61,null],[11,"count","","",61,null],[11,"size_hint","","",61,null],[11,"next_back","","",61,null],[11,"clone","","",62,null],[11,"fmt","","",62,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"next_back","","",62,null],[11,"hash","core::option","",63,null],[11,"fmt","","",63,null],[11,"cmp","","",63,null],[11,"partial_cmp","","",63,null],[11,"lt","","",63,null],[11,"le","","",63,null],[11,"gt","","",63,null],[11,"ge","","",63,null],[11,"eq","","",63,null],[11,"ne","","",63,null],[11,"clone","","",63,null],[11,"is_some","","Returns `true` if the option is a `Some` value",63,null],[11,"is_none","","Returns `true` if the option is a `None` value",63,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",63,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",63,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",63,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",63,null],[11,"unwrap_or","","Returns the contained value or a default.",63,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",63,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",63,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",63,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",63,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",63,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",63,null],[11,"iter","","Returns an iterator over the possibly contained value.",63,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",63,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",63,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",63,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",63,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",63,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",63,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",63,null],[11,"unwrap_or_default","","Returns the contained value or a default",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",63,null],[11,"fmt","","",64,null],[11,"next","","",64,null],[11,"size_hint","","",64,null],[11,"next_back","","",64,null],[11,"clone","","",64,null],[11,"fmt","","",65,null],[11,"next","","",65,null],[11,"size_hint","","",65,null],[11,"next_back","","",65,null],[11,"fmt","","",66,null],[11,"clone","","",66,null],[11,"next","","",66,null],[11,"size_hint","","",66,null],[11,"next_back","","",66,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",63,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",67,null],[11,"clone","","",68,null],[11,"hash","core::result","",69,null],[11,"fmt","","",69,null],[11,"cmp","","",69,null],[11,"partial_cmp","","",69,null],[11,"lt","","",69,null],[11,"le","","",69,null],[11,"gt","","",69,null],[11,"ge","","",69,null],[11,"eq","","",69,null],[11,"ne","","",69,null],[11,"clone","","",69,null],[11,"is_ok","","Returns true if the result is `Ok`",69,null],[11,"is_err","","Returns true if the result is `Err`",69,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",69,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",69,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",69,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",69,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",69,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",69,null],[11,"iter","","Returns an iterator over the possibly contained value.",69,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",69,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",69,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",69,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",69,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",69,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",69,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",69,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",69,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",69,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",69,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",69,null],[11,"fmt","","",70,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"next_back","","",70,null],[11,"clone","","",70,null],[11,"fmt","","",71,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"next_back","","",71,null],[11,"fmt","","",72,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"next_back","","",72,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",69,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"fmt","core::slice","",73,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",73,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"count","","",73,null],[11,"nth","","",73,null],[11,"last","","",73,null],[11,"next_back","","",73,null],[11,"clone","","",73,null],[11,"fmt","","",74,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",74,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"count","","",74,null],[11,"nth","","",74,null],[11,"last","","",74,null],[11,"next_back","","",74,null],[11,"fmt","","",75,null],[11,"clone","","",75,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"next_back","","",75,null],[11,"fmt","","",76,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"next_back","","",76,null],[11,"fmt","","",77,null],[11,"fmt","","",78,null],[11,"fmt","","",79,null],[11,"fmt","","",80,null],[11,"next","","",77,null],[11,"size_hint","","",77,null],[11,"next","","",78,null],[11,"size_hint","","",78,null],[11,"next","","",79,null],[11,"size_hint","","",79,null],[11,"next","","",80,null],[11,"size_hint","","",80,null],[11,"fmt","","",81,null],[11,"clone","","",81,null],[11,"next","","",81,null],[11,"size_hint","","",81,null],[11,"count","","",81,null],[11,"nth","","",81,null],[11,"last","","",81,null],[11,"next_back","","",81,null],[11,"fmt","","",82,null],[11,"clone","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"count","","",82,null],[11,"nth","","",82,null],[11,"last","","",82,null],[11,"next_back","","",82,null],[11,"fmt","","",83,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"count","","",83,null],[11,"nth","","",83,null],[11,"last","","",83,null],[11,"next_back","","",83,null],[11,"fmt","core::str::pattern","",84,null],[11,"eq","","",84,null],[11,"ne","","",84,null],[11,"clone","","",84,null],[11,"fmt","","",85,null],[11,"clone","","",85,null],[11,"haystack","","",85,null],[11,"next","","",85,null],[11,"next_match","","",85,null],[11,"next_reject","","",85,null],[11,"next_back","","",85,null],[11,"next_match_back","","",85,null],[11,"next_reject_back","","",85,null],[11,"fmt","","",86,null],[11,"clone","","",86,null],[11,"haystack","","",86,null],[11,"next","","",86,null],[11,"next_match","","",86,null],[11,"next_reject","","",86,null],[11,"next_back","","",86,null],[11,"next_match_back","","",86,null],[11,"next_reject_back","","",86,null],[11,"clone","","",87,null],[11,"fmt","","",87,null],[11,"haystack","","",87,null],[11,"next","","",87,null],[11,"next_match","","",87,null],[11,"next_reject","","",87,null],[11,"next_back","","",87,null],[11,"next_match_back","","",87,null],[11,"next_reject_back","","",87,null],[11,"fmt","","",88,null],[11,"clone","","",88,null],[11,"haystack","","",88,null],[11,"next","","",88,null],[11,"next_match","","",88,null],[11,"next_back","","",88,null],[11,"next_match_back","","",88,null],[11,"eq","core::str","",89,null],[11,"ne","","",89,null],[11,"clone","","",89,null],[11,"fmt","","",89,null],[11,"fmt","","",89,null],[11,"fmt","","",90,null],[11,"clone","","",90,null],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",90,null],[11,"fmt","","",90,null],[11,"fmt","","",91,null],[11,"clone","","",91,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"as_str","","View the underlying data as a subslice of the original data.",91,null],[11,"fmt","","",92,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"as_str","","View the underlying data as a subslice of the original data.",92,null],[11,"fmt","","",93,null],[11,"clone","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"count","","",93,null],[11,"last","","",93,null],[11,"nth","","",93,null],[11,"next_back","","",93,null],[11,"len","","",93,null],[11,"fmt","","",94,null],[11,"next","","",94,null],[11,"clone","","",94,null],[11,"fmt","","",95,null],[11,"next","","",95,null],[11,"clone","","",95,null],[11,"next_back","","",94,null],[11,"next_back","","",95,null],[11,"fmt","","",96,null],[11,"next","","",96,null],[11,"clone","","",96,null],[11,"fmt","","",97,null],[11,"next","","",97,null],[11,"clone","","",97,null],[11,"next_back","","",96,null],[11,"next_back","","",97,null],[11,"fmt","","",98,null],[11,"next","","",98,null],[11,"clone","","",98,null],[11,"fmt","","",99,null],[11,"next","","",99,null],[11,"clone","","",99,null],[11,"fmt","","",100,null],[11,"next","","",100,null],[11,"clone","","",100,null],[11,"fmt","","",101,null],[11,"next","","",101,null],[11,"clone","","",101,null],[11,"next_back","","",100,null],[11,"next_back","","",101,null],[11,"fmt","","",102,null],[11,"next","","",102,null],[11,"clone","","",102,null],[11,"fmt","","",103,null],[11,"next","","",103,null],[11,"clone","","",103,null],[11,"next_back","","",102,null],[11,"next_back","","",103,null],[11,"fmt","","",104,null],[11,"clone","","",104,null],[11,"next","","",104,null],[11,"size_hint","","",104,null],[11,"next_back","","",104,null],[11,"fmt","","",105,null],[11,"clone","","",105,null],[11,"next","","",105,null],[11,"size_hint","","",105,null],[11,"next_back","","",105,null],[11,"fmt","","",106,null],[11,"clone","","",106,null],[11,"fmt","core::hash::sip","",107,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",107,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",107,null],[11,"finish","","",107,null],[11,"clone","","",107,null],[11,"default","","",107,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",108,null],[11,"build_hasher","","",108,null],[11,"clone","","",108,null],[11,"default","","",108,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"fmt","core::fmt","",109,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",110,null],[11,"finish","","Finishes output and returns any error encountered.",110,null],[11,"field","","Adds a new field to the generated tuple struct output.",111,null],[11,"finish","","Finishes output and returns any error encountered.",111,null],[11,"entry","","Adds a new entry to the set output.",112,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",112,null],[11,"finish","","Finishes output and returns any error encountered.",112,null],[11,"entry","","Adds a new entry to the list output.",113,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",113,null],[11,"finish","","Finishes output and returns any error encountered.",113,null],[11,"entry","","Adds a new entry to the map output.",114,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",114,null],[11,"finish","","Finishes output and returns any error encountered.",114,null],[11,"partial_cmp","core::fmt","",115,null],[11,"eq","","",115,null],[11,"cmp","","",115,null],[11,"hash","","",115,null],[11,"default","","",115,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",115,null],[11,"clone","","",115,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",117,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",117,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",117,null],[11,"write_fmt","","Writes some formatted information into this instance",117,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",117,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",117,null],[11,"align","","Flag indicating what form of alignment was requested",117,null],[11,"width","","Optionally specified integer width that the output should be",117,null],[11,"precision","","Optionally specified precision for numeric types",117,null],[11,"sign_plus","","Determines if the `+` flag was specified.",117,null],[11,"sign_minus","","Determines if the `-` flag was specified.",117,null],[11,"alternate","","Determines if the `#` flag was specified.",117,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",117,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",117,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",117,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",117,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",117,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",117,null],[11,"write_str","","",117,null],[11,"write_char","","",117,null],[11,"write_fmt","","",117,null],[11,"fmt","","",115,null],[11,"fmt","core::marker","",8,null],[11,"fmt","core::cell","",31,null],[11,"fmt","","",33,null],[11,"fmt","","",34,null],[11,"fmt","","",35,null],[11,"fmt","","",36,null],[3,"Wrapping","bitflags::__core::num","Provides intentionally-wrapped arithmetic on `T`.",null,null],[12,"0","","",0,null],[11,"explicit_sig_bits","bitflags::__core::num::dec2flt::rawfp","The number of bits in the singificand, *excluding* the hidden bit.",118,{"inputs":[],"output":{"name":"u8"}}],[11,"max_exp","","The maximum legal exponent in fractional representation.",118,{"inputs":[],"output":{"name":"i16"}}],[11,"min_exp","","The minimum legal exponent in fractional representation, excluding subnormals.",118,{"inputs":[],"output":{"name":"i16"}}],[11,"max_exp_int","","`MAX_EXP` for integral representation, i.e., with the shift applied.",118,{"inputs":[],"output":{"name":"i16"}}],[11,"max_encoded_exp","","`MAX_EXP` encoded (i.e., with offset bias)",118,{"inputs":[],"output":{"name":"i16"}}],[11,"min_exp_int","","`MIN_EXP` for integral representation, i.e., with the shift applied.",118,{"inputs":[],"output":{"name":"i16"}}],[11,"max_sig","","The maximum normalized singificand in integral representation.",118,{"inputs":[],"output":{"name":"u64"}}],[11,"min_sig","","The minimal normalized significand in integral representation.",118,{"inputs":[],"output":{"name":"u64"}}],[8,"Zero","bitflags::__core::num","Types that have a &quot;zero&quot; value.",null,null],[10,"zero","","The &quot;zero&quot; (usually, additive identity) for this type.",119,{"inputs":[],"output":{"name":"self"}}],[8,"One","","Types that have a &quot;one&quot; value.",null,null],[10,"one","","The &quot;one&quot; (usually, multiplicative identity) for this type.",120,{"inputs":[],"output":{"name":"self"}}],[4,"FpCategory","","A classification of floating point numbers.",null,null],[13,"Nan","","&quot;Not a Number&quot;, often obtained by dividing by zero",2,null],[13,"Infinite","","Positive or negative infinity",2,null],[13,"Zero","","Positive or negative zero",2,null],[13,"Subnormal","","De-normalized floating point representation (less precise than `Normal`)",2,null],[13,"Normal","","A regular floating point number",2,null],[3,"TryFromIntError","","The error type returned when a checked integral type conversion fails.",null,null],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[3,"ParseFloatError","","An error which can be returned when parsing a float.",null,null],[0,"prelude","bitflags::__core","The libcore prelude",null,null],[0,"v1","bitflags::__core::prelude","The core prelude",null,null],[8,"Ord","bitflags::__core::prelude::v1","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",121,null],[8,"Copy","","Types that can be copied by simply copying bits (i.e. `memcpy`).",null,null],[8,"IntoIterator","","Conversion into an `Iterator`.",null,null],[16,"Item","","The type of the elements being iterated over.",122,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",122,null],[10,"into_iter","","Creates an iterator from a value.",122,null],[8,"Sync","","Types that can be safely shared between threads when aliased.",null,null],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",123,null],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact number of times the iterator will iterate.",124,null],[8,"Sized","","Types with a constant size known at compile-time.",null,null],[8,"Clone","","A common trait for cloning an object.",null,null],[10,"clone","","Returns a copy of the value.",125,null],[11,"clone_from","","Performs copy-assignment from `source`.",125,null],[8,"AsRef","","A cheap, reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",126,null],[4,"Option","","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",63,null],[13,"Some","","Some value `T`",63,null],[5,"drop","","Disposes of a value.",null,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",127,null],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",127,null],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",127,null],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",127,null],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",127,null],[8,"SliceExt","","Extension methods for slices.",null,null],[16,"Item","","",128,null],[10,"split_at","","",128,null],[10,"iter","","",128,null],[10,"split","","",128,null],[10,"splitn","","",128,null],[10,"rsplitn","","",128,null],[10,"windows","","",128,null],[10,"chunks","","",128,null],[10,"get","","",128,null],[10,"first","","",128,null],[10,"split_first","","",128,null],[10,"split_last","","",128,null],[10,"last","","",128,null],[10,"get_unchecked","","",128,null],[10,"as_ptr","","",128,null],[10,"binary_search","","",128,null],[10,"binary_search_by","","",128,null],[10,"binary_search_by_key","","",128,null],[10,"len","","",128,null],[11,"is_empty","","",128,null],[10,"get_mut","","",128,null],[10,"iter_mut","","",128,null],[10,"first_mut","","",128,null],[10,"split_first_mut","","",128,null],[10,"split_last_mut","","",128,null],[10,"last_mut","","",128,null],[10,"split_mut","","",128,null],[10,"splitn_mut","","",128,null],[10,"rsplitn_mut","","",128,null],[10,"chunks_mut","","",128,null],[10,"swap","","",128,null],[10,"split_at_mut","","",128,null],[10,"reverse","","",128,null],[10,"get_unchecked_mut","","",128,null],[10,"as_mut_ptr","","",128,null],[10,"contains","","",128,null],[10,"starts_with","","",128,null],[10,"ends_with","","",128,null],[10,"clone_from_slice","","",128,null],[10,"copy_from_slice","","",128,null],[8,"Send","","Types that can be transferred across thread boundaries.",null,null],[8,"PartialEq","","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",129,null],[11,"ne","","This method tests for `!=`.",129,null],[8,"Default","","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the &quot;default value&quot; for a type.",130,{"inputs":[],"output":{"name":"self"}}],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",131,null],[10,"call_once","","This is called when the call operator is used.",131,null],[8,"Into","","A conversion that consumes `self`, which may or may not be expensive.",null,null],[10,"into","","Performs the conversion.",132,null],[8,"Iterator","","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",133,null],[10,"next","","Advances the iterator and returns the next value.",133,null],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",133,null],[11,"count","","Consumes the iterator, counting the number of iterations and returning it.",133,null],[11,"last","","Consumes the iterator, returning the last element.",133,null],[11,"nth","","Consumes the `n` first elements of the iterator, then returns the\n`next()` one.",133,null],[11,"chain","","Takes two iterators and creates a new iterator over both in sequence.",133,null],[11,"zip","","&#39;Zips up&#39; two iterators into a single iterator of pairs.",133,null],[11,"map","","Takes a closure and creates an iterator which calls that closure on each\nelement.",133,null],[11,"filter","","Creates an iterator which uses a closure to determine if an element\nshould be yielded.",133,null],[11,"filter_map","","Creates an iterator that both filters and maps.",133,null],[11,"enumerate","","Creates an iterator which gives the current iteration count as well as\nthe next value.",133,null],[11,"peekable","","Creates an iterator which can use `peek` to look at the next element of\nthe iterator without consuming it.",133,null],[11,"skip_while","","Creates an iterator that [`skip()`]s elements based on a predicate.",133,null],[11,"take_while","","Creates an iterator that yields elements based on a predicate.",133,null],[11,"skip","","Creates an iterator that skips the first `n` elements.",133,null],[11,"take","","Creates an iterator that yields its first `n` elements.",133,null],[11,"scan","","An iterator adaptor similar to [`fold()`] that holds internal state and\nproduces a new iterator.",133,null],[11,"flat_map","","Creates an iterator that works like map, but flattens nested structure.",133,null],[11,"fuse","","Creates an iterator which ends after the first `None`.",133,null],[11,"inspect","","Do something with each element of an iterator, passing the value on.",133,null],[11,"by_ref","","Borrows an iterator, rather than consuming it.",133,null],[11,"collect","","Transforms an iterator into a collection.",133,null],[11,"partition","","Consumes an iterator, creating two collections from it.",133,null],[11,"fold","","An iterator adaptor that applies a function, producing a single, final value.",133,null],[11,"all","","Tests if every element of the iterator matches a predicate.",133,null],[11,"any","","Tests if any element of the iterator matches a predicate.",133,null],[11,"find","","Searches for an element of an iterator that satisfies a predicate.",133,null],[11,"position","","Searches for an element in an iterator, returning its index.",133,null],[11,"rposition","","Searches for an element in an iterator from the right, returning its\nindex.",133,null],[11,"max","","Returns the maximum element of an iterator.",133,null],[11,"min","","Returns the minimum element of an iterator.",133,null],[11,"max_by_key","","Returns the element that gives the maximum value from the\nspecified function.",133,null],[11,"min_by_key","","Returns the element that gives the minimum value from the\nspecified function.",133,null],[11,"rev","","Reverses an iterator&#39;s direction.",133,null],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",133,null],[11,"cloned","","Creates an iterator which `clone()`s all of its elements.",133,null],[11,"cycle","","Repeats an iterator endlessly.",133,null],[11,"sum","","Sums the elements of an iterator.",133,null],[11,"product","","Iterates over the entire iterator, multiplying all the elements",133,null],[11,"cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",133,null],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",133,null],[11,"eq","","Determines if the elements of this `Iterator` are equal to those of\nanother.",133,null],[11,"ne","","Determines if the elements of this `Iterator` are unequal to those of\nanother.",133,null],[11,"lt","","Determines if the elements of this `Iterator` are lexicographically\nless than those of another.",133,null],[11,"le","","Determines if the elements of this `Iterator` are lexicographically\nless or equal to those of another.",133,null],[11,"gt","","Determines if the elements of this `Iterator` are lexicographically\ngreater than those of another.",133,null],[11,"ge","","Determines if the elements of this `Iterator` are lexicographically\ngreater than or equal to those of another.",133,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",134,null],[8,"From","","Construct `Self` via a conversion.",null,null],[10,"from","","Performs the conversion.",135,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Drop","","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",136,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",137,null],[4,"Result","","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",69,null],[13,"Err","","Contains the error value",69,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","An iterator able to yield elements from both ends.",138,null],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",139,null],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[0,"intrinsics","bitflags::__core","rustc compiler intrinsics.",null,null],[5,"atomic_cxchg","bitflags::__core::intrinsics","",null,null],[5,"atomic_cxchg_acq","","",null,null],[5,"atomic_cxchg_rel","","",null,null],[5,"atomic_cxchg_acqrel","","",null,null],[5,"atomic_cxchg_relaxed","","",null,null],[5,"atomic_cxchg_failrelaxed","","",null,null],[5,"atomic_cxchg_failacq","","",null,null],[5,"atomic_cxchg_acq_failrelaxed","","",null,null],[5,"atomic_cxchg_acqrel_failrelaxed","","",null,null],[5,"atomic_cxchgweak","","",null,null],[5,"atomic_cxchgweak_acq","","",null,null],[5,"atomic_cxchgweak_rel","","",null,null],[5,"atomic_cxchgweak_acqrel","","",null,null],[5,"atomic_cxchgweak_relaxed","","",null,null],[5,"atomic_cxchgweak_failrelaxed","","",null,null],[5,"atomic_cxchgweak_failacq","","",null,null],[5,"atomic_cxchgweak_acq_failrelaxed","","",null,null],[5,"atomic_cxchgweak_acqrel_failrelaxed","","",null,null],[5,"atomic_load","","",null,null],[5,"atomic_load_acq","","",null,null],[5,"atomic_load_relaxed","","",null,null],[5,"atomic_load_unordered","","",null,null],[5,"atomic_store","","",null,null],[5,"atomic_store_rel","","",null,null],[5,"atomic_store_relaxed","","",null,null],[5,"atomic_store_unordered","","",null,null],[5,"atomic_xchg","","",null,null],[5,"atomic_xchg_acq","","",null,null],[5,"atomic_xchg_rel","","",null,null],[5,"atomic_xchg_acqrel","","",null,null],[5,"atomic_xchg_relaxed","","",null,null],[5,"atomic_xadd","","",null,null],[5,"atomic_xadd_acq","","",null,null],[5,"atomic_xadd_rel","","",null,null],[5,"atomic_xadd_acqrel","","",null,null],[5,"atomic_xadd_relaxed","","",null,null],[5,"atomic_xsub","","",null,null],[5,"atomic_xsub_acq","","",null,null],[5,"atomic_xsub_rel","","",null,null],[5,"atomic_xsub_acqrel","","",null,null],[5,"atomic_xsub_relaxed","","",null,null],[5,"atomic_and","","",null,null],[5,"atomic_and_acq","","",null,null],[5,"atomic_and_rel","","",null,null],[5,"atomic_and_acqrel","","",null,null],[5,"atomic_and_relaxed","","",null,null],[5,"atomic_nand","","",null,null],[5,"atomic_nand_acq","","",null,null],[5,"atomic_nand_rel","","",null,null],[5,"atomic_nand_acqrel","","",null,null],[5,"atomic_nand_relaxed","","",null,null],[5,"atomic_or","","",null,null],[5,"atomic_or_acq","","",null,null],[5,"atomic_or_rel","","",null,null],[5,"atomic_or_acqrel","","",null,null],[5,"atomic_or_relaxed","","",null,null],[5,"atomic_xor","","",null,null],[5,"atomic_xor_acq","","",null,null],[5,"atomic_xor_rel","","",null,null],[5,"atomic_xor_acqrel","","",null,null],[5,"atomic_xor_relaxed","","",null,null],[5,"atomic_max","","",null,null],[5,"atomic_max_acq","","",null,null],[5,"atomic_max_rel","","",null,null],[5,"atomic_max_acqrel","","",null,null],[5,"atomic_max_relaxed","","",null,null],[5,"atomic_min","","",null,null],[5,"atomic_min_acq","","",null,null],[5,"atomic_min_rel","","",null,null],[5,"atomic_min_acqrel","","",null,null],[5,"atomic_min_relaxed","","",null,null],[5,"atomic_umin","","",null,null],[5,"atomic_umin_acq","","",null,null],[5,"atomic_umin_rel","","",null,null],[5,"atomic_umin_acqrel","","",null,null],[5,"atomic_umin_relaxed","","",null,null],[5,"atomic_umax","","",null,null],[5,"atomic_umax_acq","","",null,null],[5,"atomic_umax_rel","","",null,null],[5,"atomic_umax_acqrel","","",null,null],[5,"atomic_umax_relaxed","","",null,null],[5,"atomic_fence","","",null,null],[5,"atomic_fence_acq","","",null,null],[5,"atomic_fence_rel","","",null,null],[5,"atomic_fence_acqrel","","",null,null],[5,"atomic_singlethreadfence","","A compiler-only memory barrier.",null,null],[5,"atomic_singlethreadfence_acq","","",null,null],[5,"atomic_singlethreadfence_rel","","",null,null],[5,"atomic_singlethreadfence_acqrel","","",null,null],[5,"abort","","Aborts the execution of the process.",null,null],[5,"unreachable","","Tells LLVM that this point in the code is not reachable,\nenabling further optimizations.",null,null],[5,"assume","","Informs the optimizer that a condition is always true.\nIf the condition is false, the behavior is undefined.",null,null],[5,"breakpoint","","Executes a breakpoint trap, for inspection by a debugger.",null,null],[5,"size_of","","The size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"move_val_init","","Moves a value to an uninitialized memory location.",null,null],[5,"min_align_of","","",null,{"inputs":[],"output":{"name":"usize"}}],[5,"pref_align_of","","",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of_val","","",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[5,"type_name","","Gets a static string slice containing the name of a type.",null,{"inputs":[],"output":{"name":"str"}}],[5,"type_id","","Gets an identifier which is globally unique to the specified type. This\nfunction will return the same value for a type regardless of whichever\ncrate it is invoked in.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"init_dropped","","Creates a value initialized to so that its drop flag,\nif any, says that it has been dropped.",null,{"inputs":[],"output":{"name":"t"}}],[5,"init","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninit","","Creates an uninitialized value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"forget","","Moves a value out of scope without running drop glue.",null,null],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"return_address","","Gives the address for the return value of the enclosing function.",null,null],[5,"needs_drop","","Returns `true` if the actual type given as `T` requires drop\nglue; returns `false` if the actual type provided for `T`\nimplements `Copy`.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"offset","","Calculates the offset from a pointer.",null,null],[5,"arith_offset","","Calculates the offset from a pointer, potentially wrapping.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"volatile_copy_nonoverlapping_memory","","Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*` intrinsic, with\na size of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`",null,null],[5,"volatile_copy_memory","","Equivalent to the appropriate `llvm.memmove.p0i8.0i8.*` intrinsic, with\na size of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`",null,null],[5,"volatile_set_memory","","Equivalent to the appropriate `llvm.memset.p0i8.*` intrinsic, with a\nsize of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`.",null,null],[5,"volatile_load","","Perform a volatile load from the `src` pointer.",null,null],[5,"volatile_store","","Perform a volatile store to the `dst` pointer.",null,null],[5,"sqrtf32","","Returns the square root of an `f32`",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"sqrtf64","","Returns the square root of an `f64`",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"powif32","","Raises an `f32` to an integer power.",null,{"inputs":[{"name":"f32"},{"name":"i32"}],"output":{"name":"f32"}}],[5,"powif64","","Raises an `f64` to an integer power.",null,{"inputs":[{"name":"f64"},{"name":"i32"}],"output":{"name":"f64"}}],[5,"sinf32","","Returns the sine of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"sinf64","","Returns the sine of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"cosf32","","Returns the cosine of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"cosf64","","Returns the cosine of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"powf32","","Raises an `f32` to an `f32` power.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"powf64","","Raises an `f64` to an `f64` power.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"expf32","","Returns the exponential of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"expf64","","Returns the exponential of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"exp2f32","","Returns 2 raised to the power of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"exp2f64","","Returns 2 raised to the power of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"logf32","","Returns the natural logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"logf64","","Returns the natural logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"log10f32","","Returns the base 10 logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"log10f64","","Returns the base 10 logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"log2f32","","Returns the base 2 logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"log2f64","","Returns the base 2 logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"fmaf32","","Returns `a * b + c` for `f32` values.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"fmaf64","","Returns `a * b + c` for `f64` values.",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"fabsf32","","Returns the absolute value of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"fabsf64","","Returns the absolute value of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"copysignf32","","Copies the sign from `y` to `x` for `f32` values.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"copysignf64","","Copies the sign from `y` to `x` for `f64` values.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"floorf32","","Returns the largest integer less than or equal to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"floorf64","","Returns the largest integer less than or equal to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"ceilf32","","Returns the smallest integer greater than or equal to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"ceilf64","","Returns the smallest integer greater than or equal to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"truncf32","","Returns the integer part of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"truncf64","","Returns the integer part of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"rintf32","","Returns the nearest integer to an `f32`. May raise an inexact floating-point exception\nif the argument is not an integer.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"rintf64","","Returns the nearest integer to an `f64`. May raise an inexact floating-point exception\nif the argument is not an integer.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"nearbyintf32","","Returns the nearest integer to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"nearbyintf64","","Returns the nearest integer to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"roundf32","","Returns the nearest integer to an `f32`. Rounds half-way cases away from zero.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"roundf64","","Returns the nearest integer to an `f64`. Rounds half-way cases away from zero.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"fadd_fast","","Float addition that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"fsub_fast","","Float subtraction that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"fmul_fast","","Float multiplication that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"fdiv_fast","","Float division that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"frem_fast","","Float remainder that allows optimizations based on algebraic rules.\nMay assume inputs are finite.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"ctpop","","Returns the number of bits set in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"ctlz","","Returns the number of leading bits unset in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"cttz","","Returns the number of trailing bits unset in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"bswap","","Reverses the bytes in an integer type `T`.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"add_with_overflow","","Performs checked integer addition.",null,null],[5,"sub_with_overflow","","Performs checked integer subtraction",null,null],[5,"mul_with_overflow","","Performs checked integer multiplication",null,null],[5,"unchecked_div","","Performs an unchecked division, resulting in undefined behavior\nwhere y = 0 or x = `T::min_value()` and y = -1",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"unchecked_rem","","Returns the remainder of an unchecked division, resulting in\nundefined behavior where y = 0 or x = `T::min_value()` and y = -1",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_add","","Returns (a + b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_sub","","Returns (a - b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_mul","","Returns (a * b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"discriminant_value","","Returns the value of the discriminant for the variant in &#39;v&#39;,\ncast to a `u64`; if `T` has no discriminant, returns 0.",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"try","","Rust&#39;s &quot;try catch&quot; construct which invokes the function pointer `f` with\nthe data pointer `data`.",null,null],[0,"mem","bitflags::__core","Basic functions for dealing with memory.",null,null],[5,"forget","bitflags::__core::mem","Leaks a value into the void, consuming ownership and never running its\ndestructor.",null,null],[5,"size_of","","Returns the size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","Returns the size of the given value in bytes.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type",null,{"inputs":[],"output":{"name":"usize"}}],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"align_of","","Returns the alignment in memory for a type.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"zeroed","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"dropped","","Creates a value initialized to an unspecified series of bytes.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninitialized","","Bypasses Rust&#39;s normal memory-initialization checks by pretending to\nproduce a value of type T, while doing nothing at all.",null,{"inputs":[],"output":{"name":"t"}}],[5,"swap","","Swap the values at two mutable locations of the same type, without deinitializing or copying\neither one.",null,null],[5,"replace","","Replaces the value at a mutable location with a new one, returning the old value, without\ndeinitializing or copying either one.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"drop","","Disposes of a value.",null,null],[17,"POST_DROP_U8","","",null,null],[17,"POST_DROP_U32","","",null,null],[17,"POST_DROP_U64","","",null,null],[17,"POST_DROP_USIZE","","",null,null],[5,"transmute_copy","","Interprets `src` as `&amp;U`, and then reads `src` without moving the contained\nvalue.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[0,"nonzero","bitflags::__core","Exposes the NonZero lang item which provides optimization hints.",null,null],[8,"Zeroable","bitflags::__core::nonzero","Unsafe trait to indicate what types are usable with the NonZero struct",null,null],[3,"NonZero","","A wrapper type for raw pointers and integers that will never be\nNULL or 0 that might allow certain optimizations.",null,null],[0,"ptr","bitflags::__core","Raw, unsafe pointers, `*const T`, and `*mut T`.",null,null],[5,"null","bitflags::__core::ptr","Creates a null raw pointer.",null,null],[5,"null_mut","","Creates a null mutable raw pointer.",null,null],[5,"swap","","Swaps the values at two mutable locations of the same type, without\ndeinitializing either. They may overlap, unlike `mem::swap` which is\notherwise equivalent.",null,null],[5,"replace","","Replaces the value at `dest` with `src`, returning the old\nvalue, without dropping either.",null,null],[5,"read","","Reads the value from `src` without moving it. This leaves the\nmemory in `src` unchanged.",null,null],[5,"read_and_drop","","",null,null],[5,"write","","Overwrites a memory location with the given value without reading or\ndropping the old value.",null,null],[5,"read_volatile","","Performs a volatile read of the value from `src` without moving it. This\nleaves the memory in `src` unchanged.",null,null],[5,"write_volatile","","Performs a volatile write of a memory location with the given value without\nreading or dropping the old value.",null,null],[3,"Unique","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper owns the referent. This in turn implies that the\n`Unique&lt;T&gt;` is `Send`/`Sync` if `T` is `Send`/`Sync`, unlike a raw\n`*mut T` (which conveys no particular ownership semantics).  It\nalso implies that the referent of the pointer should not be\nmodified without a unique path to the `Unique` reference. Useful\nfor building abstractions like `Vec&lt;T&gt;` or `Box&lt;T&gt;`, which\ninternally use raw pointers to manage the memory that they own.",null,null],[3,"Shared","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper has shared ownership of the referent. Useful for\nbuilding abstractions like `Rc&lt;T&gt;` or `Arc&lt;T&gt;`, which internally\nuse raw pointers to manage the memory that they own.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[0,"marker","bitflags::__core","Primitive traits and marker types representing basic &#39;kinds&#39; of types.",null,null],[8,"Send","bitflags::__core::marker","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile-time.",null,null],[8,"Unsize","","Types that can be &quot;unsized&quot; to a dynamically sized type.",null,null],[8,"Copy","","Types that can be copied by simply copying bits (i.e. `memcpy`).",null,null],[8,"Sync","","Types that can be safely shared between threads when aliased.",null,null],[3,"PhantomData","","`PhantomData&lt;T&gt;` allows you to describe that a type acts as if it stores a value of type `T`,\neven though it does not. This allows you to inform the compiler about certain safety properties\nof your code.",null,null],[8,"Reflect","","Types that can be reflected over.",null,null],[0,"ops","bitflags::__core","Overloadable operators.",null,null],[8,"Drop","bitflags::__core::ops","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",136,null],[8,"Add","","The `Add` trait is used to specify the functionality of `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator",140,null],[10,"add","","The method for the `+` operator",140,null],[8,"Sub","","The `Sub` trait is used to specify the functionality of `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",141,null],[10,"sub","","The method for the `-` operator",141,null],[8,"Mul","","The `Mul` trait is used to specify the functionality of `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator",142,null],[10,"mul","","The method for the `*` operator",142,null],[8,"Div","","The `Div` trait is used to specify the functionality of `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator",143,null],[10,"div","","The method for the `/` operator",143,null],[8,"Rem","","The `Rem` trait is used to specify the functionality of `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator",144,null],[10,"rem","","The method for the `%` operator",144,null],[8,"Neg","","The `Neg` trait is used to specify the functionality of unary `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",145,null],[10,"neg","","The method for the unary `-` operator",145,null],[8,"Not","","The `Not` trait is used to specify the functionality of unary `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator",146,null],[10,"not","","The method for the unary `!` operator",146,null],[8,"BitAnd","","The `BitAnd` trait is used to specify the functionality of `&amp;`.",null,null],[16,"Output","","The resulting type after applying the `&amp;` operator",147,null],[10,"bitand","","The method for the `&amp;` operator",147,null],[8,"BitOr","","The `BitOr` trait is used to specify the functionality of `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator",148,null],[10,"bitor","","The method for the `|` operator",148,null],[8,"BitXor","","The `BitXor` trait is used to specify the functionality of `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator",149,null],[10,"bitxor","","The method for the `^` operator",149,null],[8,"Shl","","The `Shl` trait is used to specify the functionality of `&lt;&lt;`.",null,null],[16,"Output","","The resulting type after applying the `&lt;&lt;` operator",150,null],[10,"shl","","The method for the `&lt;&lt;` operator",150,null],[8,"Shr","","The `Shr` trait is used to specify the functionality of `&gt;&gt;`.",null,null],[16,"Output","","The resulting type after applying the `&gt;&gt;` operator",151,null],[10,"shr","","The method for the `&gt;&gt;` operator",151,null],[8,"AddAssign","","The `AddAssign` trait is used to specify the functionality of `+=`.",null,null],[10,"add_assign","","The method for the `+=` operator",152,null],[8,"SubAssign","","The `SubAssign` trait is used to specify the functionality of `-=`.",null,null],[10,"sub_assign","","The method for the `-=` operator",153,null],[8,"MulAssign","","The `MulAssign` trait is used to specify the functionality of `*=`.",null,null],[10,"mul_assign","","The method for the `*=` operator",154,null],[8,"DivAssign","","The `DivAssign` trait is used to specify the functionality of `/=`.",null,null],[10,"div_assign","","The method for the `/=` operator",155,null],[8,"RemAssign","","The `RemAssign` trait is used to specify the functionality of `%=`.",null,null],[10,"rem_assign","","The method for the `%=` operator",156,null],[8,"BitAndAssign","","The `BitAndAssign` trait is used to specify the functionality of `&amp;=`.",null,null],[10,"bitand_assign","","The method for the `&amp;` operator",157,null],[8,"BitOrAssign","","The `BitOrAssign` trait is used to specify the functionality of `|=`.",null,null],[10,"bitor_assign","","The method for the `|=` operator",158,null],[8,"BitXorAssign","","The `BitXorAssign` trait is used to specify the functionality of `^=`.",null,null],[10,"bitxor_assign","","The method for the `^=` operator",159,null],[8,"ShlAssign","","The `ShlAssign` trait is used to specify the functionality of `&lt;&lt;=`.",null,null],[10,"shl_assign","","The method for the `&lt;&lt;=` operator",160,null],[8,"ShrAssign","","The `ShrAssign` trait is used to specify the functionality of `&gt;&gt;=`.",null,null],[10,"shr_assign","","The method for the `&gt;&gt;=` operator",161,null],[8,"Index","","The `Index` trait is used to specify the functionality of indexing operations\nlike `arr[idx]` when used in an immutable context.",null,null],[16,"Output","","The returned type after indexing",162,null],[10,"index","","The method for the indexing (`Foo[Bar]`) operation",162,null],[8,"IndexMut","","The `IndexMut` trait is used to specify the functionality of indexing\noperations like `arr[idx]`, when used in a mutable context.",null,null],[10,"index_mut","","The method for the indexing (`Foo[Bar]`) operation",163,null],[3,"RangeFull","","An unbounded range. Use `..` (two dots) for its shorthand.",null,null],[3,"Range","","A (half-open) range which is bounded at both ends: { x | start &lt;= x &lt; end }.\nUse `start..end` (two dots) for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",10,null],[12,"end","","The upper bound of the range (exclusive).",10,null],[3,"RangeFrom","","A range which is only bounded below: { x | start &lt;= x }.\nUse `start..` for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",11,null],[3,"RangeTo","","A range which is only bounded above: { x | x &lt; end }.\nUse `..end` (two dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (exclusive).",12,null],[4,"RangeInclusive","","An inclusive range which is bounded at both ends: { x | start &lt;= x &lt;= end }.\nUse `start...end` (three dots) for its shorthand.",null,null],[13,"Empty","","Empty range (iteration has finished)",13,null],[12,"at","bitflags::__core::ops::RangeInclusive","",13,null],[13,"NonEmpty","bitflags::__core::ops","Non-empty range (iteration will yield value(s))",13,null],[12,"start","bitflags::__core::ops::RangeInclusive","",13,null],[12,"end","","",13,null],[3,"RangeToInclusive","bitflags::__core::ops","An inclusive range which is only bounded above: { x | x &lt;= end }.\nUse `...end` (three dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (inclusive)",14,null],[8,"Deref","","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",164,null],[10,"deref","","The method called to dereference a value",164,null],[8,"DerefMut","","The `DerefMut` trait is used to specify the functionality of dereferencing\nmutably like `*v = 1;`",null,null],[10,"deref_mut","","The method called to mutably dereference a value",165,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",137,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",134,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",131,null],[10,"call_once","","This is called when the call operator is used.",131,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper for one,\nwhere unsizing can be performed on the pointee.",null,null],[8,"Place","","Both `in (PLACE) EXPR` and `box EXPR` desugar into expressions\nthat allocate an intermediate &quot;place&quot; that holds uninitialized\nstate.  The desugaring evaluates EXPR, and writes the result at\nthe address returned by the `pointer` method of this trait.",null,null],[10,"pointer","","Returns the address where the input value will be written.\nNote that the data at this address is generally uninitialized,\nand thus one should use `ptr::write` for initializing it.",166,null],[8,"Placer","","Interface to implementations of  `in (PLACE) EXPR`.",null,null],[16,"Place","","`Place` is the intermedate agent guarding the\nuninitialized state for `Data`.",167,null],[10,"make_place","","Creates a fresh place from `self`.",167,null],[8,"InPlace","","Specialization of `Place` trait supporting `in (PLACE) EXPR`.",null,null],[16,"Owner","","`Owner` is the type of the end value of `in (PLACE) EXPR`",168,null],[10,"finalize","","Converts self into the final value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nthe returned instance of `Owner` and forgetting self.",168,null],[8,"Boxed","","Core trait for the `box EXPR` form.",null,null],[16,"Data","","The kind of data that is stored in this kind of box.",169,null],[16,"Place","","The place that will negotiate the storage of the data.",169,null],[10,"finalize","","Converts filled place into final owning value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nreturned instance of `Self` and forgetting `filled`.",169,null],[8,"BoxPlace","","Specialization of `Place` trait supporting `box EXPR`.",null,null],[10,"make_place","","Creates a globally fresh place.",170,{"inputs":[],"output":{"name":"self"}}],[0,"cmp","bitflags::__core","Functionality for ordering and comparison.",null,null],[8,"PartialEq","bitflags::__core::cmp","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",129,null],[11,"ne","","This method tests for `!=`.",129,null],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two values.",null,null],[13,"Less","","An ordering where a compared value is less [than another].",15,null],[13,"Equal","","An ordering where a compared value is equal [to another].",15,null],[13,"Greater","","An ordering where a compared value is greater [than another].",15,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",121,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",127,null],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",127,null],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",127,null],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",127,null],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",127,null],[5,"min","","Compare and return the minimum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Compare and return the maximum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"clone","bitflags::__core","The `Clone` trait for types that cannot be &#39;implicitly copied&#39;.",null,null],[8,"Clone","bitflags::__core::clone","A common trait for cloning an object.",null,null],[10,"clone","","Returns a copy of the value.",125,null],[11,"clone_from","","Performs copy-assignment from `source`.",125,null],[0,"default","bitflags::__core","The `Default` trait for types which may have meaningful default values.",null,null],[8,"Default","bitflags::__core::default","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the &quot;default value&quot; for a type.",130,{"inputs":[],"output":{"name":"self"}}],[0,"convert","bitflags::__core","Traits for conversions between types.",null,null],[8,"AsRef","bitflags::__core::convert","A cheap, reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",126,null],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",139,null],[8,"Into","","A conversion that consumes `self`, which may or may not be expensive.",null,null],[10,"into","","Performs the conversion.",132,null],[8,"From","","Construct `Self` via a conversion.",null,null],[10,"from","","Performs the conversion.",135,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"TryInto","","An attempted conversion that consumes `self`, which may or may not be expensive.",null,null],[16,"Err","","The type returned in the event of a conversion error.",171,null],[10,"try_into","","Performs the conversion.",171,null],[8,"TryFrom","","Attempt to construct `Self` via a conversion.",null,null],[16,"Err","","The type returned in the event of a conversion error.",172,null],[10,"try_from","","Performs the conversion.",172,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[0,"borrow","bitflags::__core","A module for working with borrowed data.",null,null],[8,"Borrow","bitflags::__core::borrow","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",173,null],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",174,null],[0,"any","bitflags::__core","This module implements the `Any` trait, which enables dynamic typing\nof any `&#39;static` type through runtime reflection.",null,null],[8,"Any","bitflags::__core::any","A type to emulate dynamic typing.",null,null],[10,"get_type_id","","Gets the `TypeId` of `self`.",16,null],[3,"TypeId","","A `TypeId` represents a globally unique identifier for a type.",null,null],[0,"array","bitflags::__core","Implementations of things like `Eq` for fixed-length arrays\nup to a certain length. Eventually we should able to generalize\nto all lengths.",null,null],[8,"FixedSizeArray","bitflags::__core::array","Utility trait implemented only on arrays of fixed size",null,null],[10,"as_slice","","Converts the array to immutable slice",175,null],[10,"as_mut_slice","","Converts the array to mutable slice",175,null],[0,"sync","bitflags::__core","Synchronization primitives",null,null],[0,"atomic","bitflags::__core::sync","Atomic types",null,null],[3,"AtomicBool","bitflags::__core::sync::atomic","A boolean type which can be safely shared between threads.",null,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between threads.",null,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations. Corresponds to LLVM&#39;s\n`Monotonic` ordering.",20,null],[13,"Release","","When coupled with a store, all previous writes become visible\nto the other threads that perform a load with `Acquire` ordering\non the same value.",20,null],[13,"Acquire","","When coupled with a load, all subsequent loads will see data\nwritten before a store with `Release` ordering on the same value\nin other threads.",20,null],[13,"AcqRel","","When coupled with a load, uses `Acquire` ordering, and with a store\n`Release` ordering.",20,null],[13,"SeqCst","","Like `AcqRel` with the additional guarantee that all threads see all\nsequentially consistent operations in the same order.",20,null],[17,"ATOMIC_BOOL_INIT","","An `AtomicBool` initialized to `false`.",null,null],[3,"AtomicI8","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU8","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U8_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI16","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU16","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U16_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI32","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU32","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U32_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicI64","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_I64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicU64","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_U64_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicIsize","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_ISIZE_INIT","","An atomic integer initialized to `0`.",null,null],[3,"AtomicUsize","","An integer type which can be safely shared between threads.",null,null],[17,"ATOMIC_USIZE_INIT","","An atomic integer initialized to `0`.",null,null],[5,"fence","","An atomic fence.",null,null],[0,"cell","bitflags::__core","Shareable mutable containers.",null,null],[3,"Cell","bitflags::__core::cell","A mutable memory location that admits only `Copy` data.",null,null],[3,"RefCell","","A mutable memory location with dynamically checked borrow rules",null,null],[4,"BorrowState","","An enumeration of values returned from the `state` method on a `RefCell&lt;T&gt;`.",null,null],[13,"Reading","","The cell is currently being read, there is at least one active `borrow`.",32,null],[13,"Writing","","The cell is currently being written to, there is an active `borrow_mut`.",32,null],[13,"Unused","","There are no outstanding borrows on this cell.",32,null],[3,"Ref","","Wraps a borrowed reference to a value in a `RefCell` box.\nA wrapper type for an immutably borrowed value from a `RefCell&lt;T&gt;`.",null,null],[3,"RefMut","","A wrapper type for a mutably borrowed value from a `RefCell&lt;T&gt;`.",null,null],[3,"UnsafeCell","","The core primitive for interior mutability in Rust.",null,null],[0,"char","bitflags::__core","Character manipulation.",null,null],[17,"MAX","bitflags::__core::char","The highest valid code point a `char` can have.",null,null],[5,"from_u32","","Converts a `u32` to a `char`.",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[5,"from_u32_unchecked","","Converts a `u32` to a `char`, ignoring validity.",null,{"inputs":[{"name":"u32"}],"output":{"name":"char"}}],[5,"from_digit","","Converts a digit in the given radix to a `char`.",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[3,"EscapeUnicode","","Returns an iterator that yields the hexadecimal Unicode escape of a\ncharacter, as `char`s.",null,null],[3,"EscapeDefault","","An iterator that yields the literal escape code of a `char`.",null,null],[3,"EncodeUtf8","","An iterator over `u8` entries represending the UTF-8 encoding of a `char`\nvalue.",null,null],[3,"EncodeUtf16","","An iterator over `u16` entries represending the UTF-16 encoding of a `char`\nvalue.",null,null],[0,"panicking","bitflags::__core","Panic support for libcore",null,null],[5,"panic","bitflags::__core::panicking","",null,null],[5,"panic_fmt","","",null,null],[0,"iter","bitflags::__core","Composable external iteration.",null,null],[3,"Rev","bitflags::__core::iter","An double-ended iterator with the direction inverted.",null,null],[3,"Cloned","","An iterator that clones the elements of an underlying iterator.",null,null],[3,"Cycle","","An iterator that repeats endlessly.",null,null],[3,"Chain","","An iterator that strings two iterators together.",null,null],[3,"Zip","","An iterator that iterates two other iterators simultaneously.",null,null],[3,"Map","","An iterator that maps the values of `iter` with `f`.",null,null],[3,"Filter","","An iterator that filters the elements of `iter` with `predicate`.",null,null],[3,"FilterMap","","An iterator that uses `f` to both filter and map elements from `iter`.",null,null],[3,"Enumerate","","An iterator that yields the current count and the element during iteration.",null,null],[3,"Peekable","","An iterator with a `peek()` that returns an optional reference to the next\nelement.",null,null],[3,"SkipWhile","","An iterator that rejects elements while `predicate` is true.",null,null],[3,"TakeWhile","","An iterator that only accepts elements while `predicate` is true.",null,null],[3,"Skip","","An iterator that skips over `n` elements of `iter`.",null,null],[3,"Take","","An iterator that only iterates over the first `n` iterations of `iter`.",null,null],[3,"Scan","","An iterator to maintain state while iterating another iterator.",null,null],[3,"FlatMap","","An iterator that maps each element to an iterator, and yields the elements\nof the produced iterators.",null,null],[3,"Fuse","","An iterator that yields `None` forever after the underlying iterator\nyields `None` once.",null,null],[3,"Inspect","","An iterator that calls a function with a reference to each element before\nyielding it.",null,null],[3,"Repeat","","An iterator that repeats an element endlessly.",null,null],[8,"Step","","Objects that can be stepped over in both directions.",null,null],[10,"step","","Steps `self` if possible.",176,null],[10,"steps_between","","Returns the number of steps between two step objects. The count is\ninclusive of `start` and exclusive of `end`.",176,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[8,"FromIterator","","Conversion from an `Iterator`.",null,null],[10,"from_iter","","Creates a value from an iterator.",177,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[5,"empty","","Creates an iterator that yields nothing.",null,{"inputs":[],"output":{"name":"empty"}}],[8,"IntoIterator","","Conversion into an `Iterator`.",null,null],[16,"Item","","The type of the elements being iterated over.",122,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",122,null],[10,"into_iter","","Creates an iterator from a value.",122,null],[5,"once","","Creates an iterator that yields an element exactly once.",null,{"inputs":[{"name":"t"}],"output":{"name":"once"}}],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",123,null],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact number of times the iterator will iterate.",124,null],[8,"Iterator","","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",133,null],[10,"next","","Advances the iterator and returns the next value.",133,null],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",133,null],[11,"count","","Consumes the iterator, counting the number of iterations and returning it.",133,null],[11,"last","","Consumes the iterator, returning the last element.",133,null],[11,"nth","","Consumes the `n` first elements of the iterator, then returns the\n`next()` one.",133,null],[11,"chain","","Takes two iterators and creates a new iterator over both in sequence.",133,null],[11,"zip","","&#39;Zips up&#39; two iterators into a single iterator of pairs.",133,null],[11,"map","","Takes a closure and creates an iterator which calls that closure on each\nelement.",133,null],[11,"filter","","Creates an iterator which uses a closure to determine if an element\nshould be yielded.",133,null],[11,"filter_map","","Creates an iterator that both filters and maps.",133,null],[11,"enumerate","","Creates an iterator which gives the current iteration count as well as\nthe next value.",133,null],[11,"peekable","","Creates an iterator which can use `peek` to look at the next element of\nthe iterator without consuming it.",133,null],[11,"skip_while","","Creates an iterator that [`skip()`]s elements based on a predicate.",133,null],[11,"take_while","","Creates an iterator that yields elements based on a predicate.",133,null],[11,"skip","","Creates an iterator that skips the first `n` elements.",133,null],[11,"take","","Creates an iterator that yields its first `n` elements.",133,null],[11,"scan","","An iterator adaptor similar to [`fold()`] that holds internal state and\nproduces a new iterator.",133,null],[11,"flat_map","","Creates an iterator that works like map, but flattens nested structure.",133,null],[11,"fuse","","Creates an iterator which ends after the first `None`.",133,null],[11,"inspect","","Do something with each element of an iterator, passing the value on.",133,null],[11,"by_ref","","Borrows an iterator, rather than consuming it.",133,null],[11,"collect","","Transforms an iterator into a collection.",133,null],[11,"partition","","Consumes an iterator, creating two collections from it.",133,null],[11,"fold","","An iterator adaptor that applies a function, producing a single, final value.",133,null],[11,"all","","Tests if every element of the iterator matches a predicate.",133,null],[11,"any","","Tests if any element of the iterator matches a predicate.",133,null],[11,"find","","Searches for an element of an iterator that satisfies a predicate.",133,null],[11,"position","","Searches for an element in an iterator, returning its index.",133,null],[11,"rposition","","Searches for an element in an iterator from the right, returning its\nindex.",133,null],[11,"max","","Returns the maximum element of an iterator.",133,null],[11,"min","","Returns the minimum element of an iterator.",133,null],[11,"max_by_key","","Returns the element that gives the maximum value from the\nspecified function.",133,null],[11,"min_by_key","","Returns the element that gives the minimum value from the\nspecified function.",133,null],[11,"rev","","Reverses an iterator&#39;s direction.",133,null],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",133,null],[11,"cloned","","Creates an iterator which `clone()`s all of its elements.",133,null],[11,"cycle","","Repeats an iterator endlessly.",133,null],[11,"sum","","Sums the elements of an iterator.",133,null],[11,"product","","Iterates over the entire iterator, multiplying all the elements",133,null],[11,"cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",133,null],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",133,null],[11,"eq","","Determines if the elements of this `Iterator` are equal to those of\nanother.",133,null],[11,"ne","","Determines if the elements of this `Iterator` are unequal to those of\nanother.",133,null],[11,"lt","","Determines if the elements of this `Iterator` are lexicographically\nless than those of another.",133,null],[11,"le","","Determines if the elements of this `Iterator` are lexicographically\nless or equal to those of another.",133,null],[11,"gt","","Determines if the elements of this `Iterator` are lexicographically\ngreater than those of another.",133,null],[11,"ge","","Determines if the elements of this `Iterator` are lexicographically\ngreater than or equal to those of another.",133,null],[3,"Once","","An iterator that yields an element exactly once.",null,null],[5,"repeat","","Creates a new iterator that endlessly repeats a single element.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[3,"Empty","","An iterator that yields nothing.",null,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","An iterator able to yield elements from both ends.",138,null],[3,"StepBy","","An adapter for stepping range iterators by a custom amount.",null,null],[0,"option","bitflags::__core","Optional values.",null,null],[4,"Option","bitflags::__core::option","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",63,null],[13,"Some","","Some value `T`",63,null],[3,"Iter","","An iterator over a reference of the contained item in an Option.",null,null],[3,"IterMut","","An iterator over a mutable reference of the contained item in an Option.",null,null],[3,"IntoIter","","An iterator over the item contained inside an Option.",null,null],[0,"raw","bitflags::__core","Contains struct definitions for the layout of compiler built-in types.",null,null],[3,"Slice","bitflags::__core::raw","The representation of a slice like `&amp;[T]`.",null,null],[12,"data","","",67,null],[12,"len","","",67,null],[3,"TraitObject","","The representation of a trait object like `&amp;SomeTrait`.",null,null],[12,"data","","",68,null],[12,"vtable","","",68,null],[8,"Repr","","This trait is meant to map equivalences between raw structs and their\ncorresponding rust values.",null,null],[11,"repr","","This function &quot;unwraps&quot; a rust value (without consuming it) into its raw\nstruct representation. This can be used to read/write different values\nfor the struct. This is a safe method because by default it does not\nenable write-access to the fields of the return value in safe code.",178,null],[0,"result","bitflags::__core","Error handling with the `Result` type.",null,null],[4,"Result","bitflags::__core::result","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",69,null],[13,"Err","","Contains the error value",69,null],[3,"Iter","","An iterator over a reference to the `Ok` variant of a `Result`.",null,null],[3,"IterMut","","An iterator over a mutable reference to the `Ok` variant of a `Result`.",null,null],[3,"IntoIter","","An iterator over the value in a `Ok` variant of a `Result`.",null,null],[0,"slice","bitflags::__core","Slice management and manipulation",null,null],[8,"SliceExt","bitflags::__core::slice","Extension methods for slices.",null,null],[16,"Item","","",128,null],[10,"split_at","","",128,null],[10,"iter","","",128,null],[10,"split","","",128,null],[10,"splitn","","",128,null],[10,"rsplitn","","",128,null],[10,"windows","","",128,null],[10,"chunks","","",128,null],[10,"get","","",128,null],[10,"first","","",128,null],[10,"split_first","","",128,null],[10,"split_last","","",128,null],[10,"last","","",128,null],[10,"get_unchecked","","",128,null],[10,"as_ptr","","",128,null],[10,"binary_search","","",128,null],[10,"binary_search_by","","",128,null],[10,"binary_search_by_key","","",128,null],[10,"len","","",128,null],[11,"is_empty","","",128,null],[10,"get_mut","","",128,null],[10,"iter_mut","","",128,null],[10,"first_mut","","",128,null],[10,"split_first_mut","","",128,null],[10,"split_last_mut","","",128,null],[10,"last_mut","","",128,null],[10,"split_mut","","",128,null],[10,"splitn_mut","","",128,null],[10,"rsplitn_mut","","",128,null],[10,"chunks_mut","","",128,null],[10,"swap","","",128,null],[10,"split_at_mut","","",128,null],[10,"reverse","","",128,null],[10,"get_unchecked_mut","","",128,null],[10,"as_mut_ptr","","",128,null],[10,"contains","","",128,null],[10,"starts_with","","",128,null],[10,"ends_with","","",128,null],[10,"clone_from_slice","","",128,null],[10,"copy_from_slice","","",128,null],[3,"Iter","","Immutable slice iterator",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"Split","","An iterator over subslices separated by elements that match a predicate\nfunction.",null,null],[3,"SplitMut","","An iterator over the subslices of the vector which are separated\nby elements that match `pred`.",null,null],[3,"SplitN","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"RSplitN","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"SplitNMut","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks (`size` elements at a\ntime).",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable chunks (`size`\nelements at a time). When the slice len is not evenly divided by the chunk\nsize, the last slice of the iteration will be the remainder.",null,null],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,null],[5,"from_raw_parts_mut","","Performs the same functionality as `from_raw_parts`, except that a mutable\nslice is returned.",null,null],[0,"str","bitflags::__core","String manipulation",null,null],[0,"pattern","bitflags::__core::str","The string Pattern API.",null,null],[8,"Pattern","bitflags::__core::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",179,null],[10,"into_searcher","","Constructs the associated searcher from\n`self` and the `haystack` to search in.",179,null],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",179,null],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the haystack",179,null],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the haystack",179,null],[4,"SearchStep","","Result of calling `Searcher::next()` or `ReverseSearcher::next_back()`.",null,null],[13,"Match","","Expresses that a match of the pattern has been found at\n`haystack[a..b]`.",84,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a possible match\nof the pattern.",84,null],[13,"Done","","Expresses that every byte of the haystack has been visted, ending\nthe iteration.",84,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlaying string to be searched in",180,null],[10,"next","","Performs the next search step starting from the front.",180,null],[11,"next_match","","Find the next `Match` result. See `next()`",180,null],[11,"next_reject","","Find the next `Reject` result. See `next()`",180,null],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",181,null],[11,"next_match_back","","Find the next `Match` result. See `next_back()`",181,null],[11,"next_reject_back","","Find the next `Reject` result. See `next_back()`",181,null],[8,"DoubleEndedSearcher","","A marker trait to express that a `ReverseSearcher`\ncan be used for a `DoubleEndedIterator` implementation.",null,null],[3,"CharSearcher","","Associated type for `&lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharSliceSearcher","","Associated type for `&lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharPredicateSearcher","","Associated type for `&lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"StrSearcher","","Associated type for `&lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[8,"FromStr","bitflags::__core::str","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",182,null],[10,"from_str","","Parses a string `s` to return a value of this type.",182,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[3,"ParseBoolError","","An error returned when parsing a `bool` from a string fails.",null,null],[3,"Utf8Error","","Errors which can occur when attempting to interpret a sequence of `u8`\nas a string.",null,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without checking\nthat the string contains valid UTF-8.",null,null],[3,"Chars","","Iterator for the char (representing *Unicode Scalar Values*) of a string",null,null],[5,"next_code_point","","Reads the next code point out of a byte iterator (assuming a\nUTF-8-like encoding).",null,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[3,"CharIndices","","Iterator for a string&#39;s characters and their byte offsets.",null,null],[3,"Bytes","","External iterator for a string&#39;s bytes.\nUse with the `std::iter` module.",null,null],[3,"Split","","Created with the method [`split()`].",null,null],[3,"RSplit","","Created with the method [`rsplit()`].",null,null],[3,"SplitTerminator","","Created with the method [`split_terminator()`].",null,null],[3,"RSplitTerminator","","Created with the method [`rsplit_terminator()`].",null,null],[3,"SplitN","","Created with the method [`splitn()`].",null,null],[3,"RSplitN","","Created with the method [`rsplitn()`].",null,null],[3,"MatchIndices","","Created with the method [`match_indices()`].",null,null],[3,"RMatchIndices","","Created with the method [`rmatch_indices()`].",null,null],[3,"Matches","","Created with the method [`matches()`].",null,null],[3,"RMatches","","Created with the method [`rmatches()`].",null,null],[3,"Lines","","Created with the method [`lines()`].",null,null],[3,"LinesAny","","Created with the method [`lines_any()`].",null,null],[3,"CharRange","","Struct that contains a `char` and the index of the first byte of\nthe next `char` in a string.  This can be used as a data structure\nfor iterating over the UTF-8 bytes of a string.",null,null],[12,"ch","","Current `char`",106,null],[12,"next","","Index of the first byte of the next `char`",106,null],[0,"hash","bitflags::__core","Generic hashing support.",null,null],[8,"Hash","bitflags::__core::hash","A hashable type.",null,null],[10,"hash","","Feeds this value into the state given, updating the hasher as necessary.",183,null],[11,"hash_slice","","Feeds a slice of this type into the state provided.",183,null],[8,"Hasher","","A trait which represents the ability to hash an arbitrary stream of bytes.",null,null],[10,"finish","","Completes a round of hashing, producing the output hash generated.",184,null],[10,"write","","Writes some data into this `Hasher`",184,null],[11,"write_u8","","Write a single `u8` into this hasher",184,null],[11,"write_u16","","Write a single `u16` into this hasher.",184,null],[11,"write_u32","","Write a single `u32` into this hasher.",184,null],[11,"write_u64","","Write a single `u64` into this hasher.",184,null],[11,"write_usize","","Write a single `usize` into this hasher.",184,null],[11,"write_i8","","Write a single `i8` into this hasher.",184,null],[11,"write_i16","","Write a single `i16` into this hasher.",184,null],[11,"write_i32","","Write a single `i32` into this hasher.",184,null],[11,"write_i64","","Write a single `i64` into this hasher.",184,null],[11,"write_isize","","Write a single `isize` into this hasher.",184,null],[8,"BuildHasher","","A `BuildHasher` is typically used as a factory for instances of `Hasher`\nwhich a `HashMap` can then use to hash keys independently.",null,null],[16,"Hasher","","Type of the hasher that will be created.",185,null],[10,"build_hasher","","Creates a new hasher.",185,null],[3,"BuildHasherDefault","","A structure which implements `BuildHasher` for all `Hasher` types which also\nimplement `Default`.",null,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[0,"fmt","bitflags::__core","Utilities for formatting and printing strings.",null,null],[4,"Alignment","bitflags::__core::fmt","Possible alignments returned by `Formatter::align`",null,null],[13,"Left","","Indication that contents should be left-aligned.",109,null],[13,"Right","","Indication that contents should be right-aligned.",109,null],[13,"Center","","Indication that contents should be center-aligned.",109,null],[13,"Unknown","","No alignment was requested.",109,null],[6,"Result","","",null,null],[3,"Error","","The error type which is returned from formatting a message into a stream.",null,null],[8,"Write","","A collection of methods that are required to format a message into a stream.",null,null],[10,"write_str","","Writes a slice of bytes into this writer, returning whether the write\nsucceeded.",186,null],[11,"write_char","","Writes a `char` into this writer, returning whether the write succeeded.",186,null],[11,"write_fmt","","Glue for usage of the `write!` macro with implementors of this trait.",186,null],[3,"Formatter","","A struct to represent both where to emit formatting strings to and how they\nshould be formatted. A mutable version of this is passed to all formatting\ntraits.",null,null],[3,"Arguments","","This structure represents a safely precompiled version of a format string\nand its arguments. This cannot be generated at runtime because it cannot\nsafely be done so, so no constructors are given and the fields are private\nto prevent modification.",null,null],[8,"Debug","","Format trait for the `?` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",187,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",188,null],[8,"Octal","","Format trait for the `o` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",189,null],[8,"Binary","","Format trait for the `b` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",190,null],[8,"LowerHex","","Format trait for the `x` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",191,null],[8,"UpperHex","","Format trait for the `X` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",192,null],[8,"Pointer","","Format trait for the `p` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",193,null],[8,"LowerExp","","Format trait for the `e` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",194,null],[8,"UpperExp","","Format trait for the `E` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",195,null],[5,"write","","The `write` function takes an output stream, a precompiled format string,\nand a list of arguments. The arguments will be formatted according to the\nspecified format string into the output stream provided.",null,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[[3,"Wrapping"],[3,"ParseFloatError"],[4,"FpCategory"],[3,"TryFromIntError"],[3,"ParseIntError"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"RawFloat"],[8,"Zero"],[8,"One"],[8,"Ord"],[8,"IntoIterator"],[8,"Extend"],[8,"ExactSizeIterator"],[8,"Clone"],[8,"AsRef"],[8,"PartialOrd"],[8,"SliceExt"],[8,"PartialEq"],[8,"Default"],[8,"FnOnce"],[8,"Into"],[8,"Iterator"],[8,"FnMut"],[8,"From"],[8,"Drop"],[8,"Fn"],[8,"DoubleEndedIterator"],[8,"AsMut"],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Neg"],[8,"Not"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Shl"],[8,"Shr"],[8,"AddAssign"],[8,"SubAssign"],[8,"MulAssign"],[8,"DivAssign"],[8,"RemAssign"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Index"],[8,"IndexMut"],[8,"Deref"],[8,"DerefMut"],[8,"Place"],[8,"Placer"],[8,"InPlace"],[8,"Boxed"],[8,"BoxPlace"],[8,"TryInto"],[8,"TryFrom"],[8,"Borrow"],[8,"BorrowMut"],[8,"FixedSizeArray"],[8,"Step"],[8,"FromIterator"],[8,"Repr"],[8,"Pattern"],[8,"Searcher"],[8,"ReverseSearcher"],[8,"FromStr"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[8,"Write"],[8,"Debug"],[8,"Display"],[8,"Octal"],[8,"Binary"],[8,"LowerHex"],[8,"UpperHex"],[8,"Pointer"],[8,"LowerExp"],[8,"UpperExp"]]};
initSearch(searchIndex);
