initSidebarItems({"enum":[["AccessType",""],["AddressClass",""],["BasicType",""],["BreakpointEventType",""],["ByteOrder","Byte order definitions."],["CommandArgumentType",""],["CommandFlags",""],["ConnectionStatus",""],["DescriptionLevel",""],["DisassemblyFlavor","Which syntax should be used in disassembly?"],["DynamicValueType",""],["EmulateInstructionOptions",""],["Encoding","Register encoding defintions."],["ErrorType",""],["ExpressionEvaluationPhase",""],["ExpressionResults",""],["FilePermissions",""],["Format","Display format definitions."],["FrameComparison",""],["FunctionNameType",""],["GdbSignal",""],["InputReaderAction",""],["InputReaderGranularity",""],["InstrumentationRuntimeType",""],["LanguageType",""],["LaunchFlags",""],["MatchType",""],["MemberFunctionKind",""],["PathType",""],["Permissions",""],["QueueItemKind",""],["QueueKind",""],["RegisterKind",""],["ReturnStatus",""],["RunMode","Thread run modes."],["ScriptLanguage",""],["SectionType",""],["StateType","Process and thread states."],["StopReason","Thread stop reasons."],["SymbolContextItem","These mask bits allow a common interface for queries that can limit the amount of information that gets parsed to only the information that is requested. These bits also can indicate what actually did get resolved during query function calls."],["SymbolType",""],["TemplateArgumentKind",""],["TypeClass",""],["TypeFlags",""],["TypeOptions",""],["TypeSummaryCapping",""],["ValueType",""],["WatchpointEventType",""],["WatchpointKind",""]],"struct":[["SBAddress","A section + offset based address class."],["SBAttachInfo","Configuration for attaching to a process."],["SBBlock","A lexical block."],["SBBreakpoint","A logical breakpoint and its associated settings."],["SBBroadcaster","An entity which can broadcast events."],["SBCompileUnit","A compilation unit or compiled source file."],["SBData","A block of data."],["SBDebugger","Creates [`SBTarget`]s, provides access to them and manages the overall debugging experience."],["SBError","A container for holding any error code."],["SBEvent","An event."],["SBFileSpec","A file specification that divides the path into a directory and basename."],["SBFrame","One of the stack frames associated with a thread."],["SBFunction","A generic function, which can be inlined or not."],["SBInstruction","A machine instruction."],["SBInstructionList","A list of machine instructions."],["SBLaunchInfo","Configuration for launching a process."],["SBLineEntry","Specifies an association with a contiguous range of instructions and a source file location."],["SBListener","Listen for debugger events."],["SBModule","An executable image and its associated object and symbol files."],["SBModuleSpec","A description of an `SBModule`."],["SBPlatform","A platform that can represent the current host or a remote host debug platform."],["SBProcess","The process associated with the target program."],["SBSymbol","The symbol possibly associated with a stack frame."],["SBSymbolContext","A container that stores various debugger related info."],["SBTarget","The target program running under the debugger."],["SBThread","A thread of execution."],["SBValue","The value of a variable, register or expression."]],"type":[["lldb_addr_t",""],["lldb_offset_t",""],["lldb_pid_t",""],["lldb_tid_t",""],["lldb_user_id_t",""]]});